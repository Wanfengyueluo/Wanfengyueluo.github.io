<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>月落晓山的博客</title>
  
  <subtitle>我们不能在动荡的生活里撒野~</subtitle>
  <link href="https://wanfengyueluo.github.io/atom.xml" rel="self"/>
  
  <link href="https://wanfengyueluo.github.io/"/>
  <updated>2022-04-18T12:31:07.559Z</updated>
  <id>https://wanfengyueluo.github.io/</id>
  
  <author>
    <name>月落</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>剑指Offer系列</title>
    <link href="https://wanfengyueluo.github.io/2022/04/06/jian-zhi-offer-xi-lie/"/>
    <id>https://wanfengyueluo.github.io/2022/04/06/jian-zhi-offer-xi-lie/</id>
    <published>2022-04-06T11:10:42.000Z</published>
    <updated>2022-04-18T12:31:07.559Z</updated>
    
    <content type="html"><![CDATA[<h1 id="剑指Offer系列题解"><a href="#剑指Offer系列题解" class="headerlink" title="剑指Offer系列题解"></a>剑指Offer系列题解</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="1-数组中重复的数字"><a href="#1-数组中重复的数字" class="headerlink" title="1 数组中重复的数字"></a>1 数组中重复的数字</h3><blockquote><p><a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/">https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/</a></p></blockquote><h4 id="解一"><a href="#解一" class="headerlink" title="解一"></a>解一</h4><p>数组排序后遍历</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>{</span><br><span class="line">    Arrays.sort(nums);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length - <span class="number">1</span>; i++) {</span><br><span class="line">        <span class="keyword">if</span> (nums[i] == nums[i + <span class="number">1</span>]){</span><br><span class="line">            <span class="keyword">return</span> nums[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>时间复杂度为 O(nlogn) </p><h4 id="解二"><a href="#解二" class="headerlink" title="解二"></a>解二</h4><p>使用哈希表</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>{</span><br><span class="line">    Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (set.contains(nums[i])) {</span><br><span class="line">            <span class="keyword">return</span> nums[i];</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            set.add(nums[i]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>时间复杂度为O(n)，空间复杂度为O(n)</p><h4 id="解三"><a href="#解三" class="headerlink" title="解三"></a>解三</h4><p>使用原地重排数组</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) {</span><br><span class="line">        <span class="keyword">while</span> (nums[i] != i) {</span><br><span class="line">            <span class="keyword">if</span> (nums[i] == nums[nums[i]]) {</span><br><span class="line">                <span class="keyword">return</span> nums[i];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">int</span> tmp = nums[nums[i]];</span><br><span class="line">            nums[nums[i]] = nums[i];</span><br><span class="line">            nums[i] = tmp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>时间复杂度O(n)，空间复杂度O(1)</p><h3 id="2-不修改数组找出重复的数字"><a href="#2-不修改数组找出重复的数字" class="headerlink" title="2 不修改数组找出重复的数字"></a>2 不修改数组找出重复的数字</h3><blockquote><p>保留</p></blockquote><h3 id="3-二维数组中的查找"><a href="#3-二维数组中的查找" class="headerlink" title="3 二维数组中的查找"></a>3 二维数组中的查找</h3><blockquote><p><a href="https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/">https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/</a></p></blockquote><h4 id="解一-1"><a href="#解一-1" class="headerlink" title="解一"></a>解一</h4><p>从左下往上搜索，小于目标值，往右，大于目标值，往上</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">findNumberIn2DArray</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> m = matrix.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (m &gt;= <span class="number">0</span> &amp;&amp; j &lt; matrix[<span class="number">0</span>].length) {</span><br><span class="line">        <span class="keyword">if</span> (target &lt; matrix[m][j]) {</span><br><span class="line">            m--;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; matrix[m][j]) {</span><br><span class="line">            j++;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="解二-1"><a href="#解二-1" class="headerlink" title="解二"></a>解二</h4><p>从右上往下搜索，大于目标值，往左，小于目标值，往下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">findNumberIn2DArray</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> target)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (matrix.length == <span class="number">0</span> || matrix[<span class="number">0</span>].length == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> j = matrix[<span class="number">0</span>].length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (m &lt; matrix.length &amp;&amp; j &gt;= <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">if</span> (target &lt; matrix[m][j]) {</span><br><span class="line">            j--;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; matrix[m][j]) {</span><br><span class="line">            m++;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="4-替换空格"><a href="#4-替换空格" class="headerlink" title="4 替换空格"></a>4 替换空格</h3><blockquote><p><a href="https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/">https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/</a></p></blockquote><h4 id="解一-2"><a href="#解一-2" class="headerlink" title="解一"></a>解一</h4><p>遍历字符串，使用StringBuilder拼接字符</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">replaceSpace</span><span class="params">(String s)</span> </span>{</span><br><span class="line">    StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) {</span><br><span class="line">        <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">' '</span>) {</span><br><span class="line">            res.append(<span class="string">"%20"</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            res.append(c);</span><br><span class="line">        } </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res.toString();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="解二-2"><a href="#解二-2" class="headerlink" title="解二"></a>解二</h4><p>从后往前添加字符串</p><blockquote><p>【举一反三】<br>在合并两个数组（包括字符串）时，如果从前往后复制每个值需要重复移动值，那么可以考虑从后往前复制，减少移动次数，提高效率。</p></blockquote><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="5-从尾到头打印链表"><a href="#5-从尾到头打印链表" class="headerlink" title="5 从尾到头打印链表"></a>5 从尾到头打印链表</h3><blockquote><p><a href="https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/">https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/</a></p><p>在面试中，最好先问面试官是否允许修改输入的数据。</p></blockquote><h4 id="解一-3"><a href="#解一-3" class="headerlink" title="解一"></a>解一</h4><p>使用先进后出的数据结构【栈】</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] reversePrint(ListNode head) {</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    Stack&lt;ListNode&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    ListNode cur = head;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        stack.push(cur);</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[stack.size()];</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!stack.isEmpty()) {</span><br><span class="line">        res[index++] = stack.pop().val;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="解二-3"><a href="#解二-3" class="headerlink" title="解二"></a>解二</h4><p>反转链表</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] reversePrint(ListNode head) {</span><br><span class="line">    <span class="comment">// 头插法反转链表</span></span><br><span class="line">    ListNode dummy = <span class="keyword">new</span> ListNode(-<span class="number">1</span>);</span><br><span class="line">    ListNode cur = head;</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        ListNode next = cur.next;</span><br><span class="line">        cur.next = dummy.next;</span><br><span class="line">        dummy.next = cur;</span><br><span class="line">        cur = next;</span><br><span class="line">        size++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[size];</span><br><span class="line">    cur = dummy.next;</span><br><span class="line">    size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        res[size++] = cur.val;</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="解三-1"><a href="#解三-1" class="headerlink" title="解三"></a>解三</h4><p>递归反转链表（修改输入数据）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] reversePrint(ListNode head) {</span><br><span class="line">    ListNode dummy = reverseListNode(head);</span><br><span class="line">    ListNode cur = dummy;</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        cur = cur.next;</span><br><span class="line">        size++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[size];</span><br><span class="line">    cur = dummy;</span><br><span class="line">    size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        res[size++] = cur.val;</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseListNode</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    ListNode next = reverseListNode(head.next);</span><br><span class="line">    head.next.next = head;</span><br><span class="line">    head.next = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">return</span> next;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><h3 id="6-重建二叉树"><a href="#6-重建二叉树" class="headerlink" title="6 重建二叉树"></a>6 重建二叉树</h3><h4 id="解一-4"><a href="#解一-4" class="headerlink" title="解一"></a>解一</h4><p>根据先序遍历找根节点，然后根据根节点在中序遍历中划分左右子树</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">buildTree</span><span class="params">(<span class="keyword">int</span>[] preorder, <span class="keyword">int</span>[] inorder)</span> </span>{</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">if</span> (preorder.length == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; inorder.length; i++) {</span><br><span class="line">        map.put(inorder[i], i);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> helper(preorder, <span class="number">0</span>, <span class="number">0</span>, inorder.length - <span class="number">1</span>, map);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> TreeNode <span class="title">helper</span><span class="params">(<span class="keyword">int</span>[] preorder, <span class="keyword">int</span> pStart, <span class="keyword">int</span> iStart, <span class="keyword">int</span> iEnd, Map&lt;Integer, Integer&gt; map)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (pStart &gt;= preorder.length || iStart &gt; iEnd) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> rootVal = preorder[pStart];</span><br><span class="line">    <span class="keyword">int</span> rootIndex = map.get(rootVal);</span><br><span class="line">    TreeNode root = <span class="keyword">new</span> TreeNode(rootVal);</span><br><span class="line">    <span class="comment">// 左子树的长度为 rootIndex - iStart</span></span><br><span class="line">    <span class="comment">// 右子树的根索引为 pStart + (rootIndex - iStart) + 1</span></span><br><span class="line">    root.left = helper(preorder, pStart + <span class="number">1</span>, iStart, rootIndex - <span class="number">1</span>, map);</span><br><span class="line">    root.right = helper(preorder, pStart + (rootIndex - iStart) + <span class="number">1</span>, rootIndex + <span class="number">1</span>, iEnd, map);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">} </span><br></pre></td></tr></tbody></table></figure><h2 id="栈和队列"><a href="#栈和队列" class="headerlink" title="栈和队列"></a>栈和队列</h2><h3 id="7-用两个栈实现队列"><a href="#7-用两个栈实现队列" class="headerlink" title="7 用两个栈实现队列"></a>7 用两个栈实现队列</h3><h4 id="解一-5"><a href="#解一-5" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CQueue</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LinkedList&lt;Integer&gt; inStack;</span><br><span class="line">    <span class="keyword">private</span> LinkedList&lt;Integer&gt; outStack;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CQueue</span><span class="params">()</span> </span>{</span><br><span class="line">        inStack = <span class="keyword">new</span> LinkedList();</span><br><span class="line">        outStack = <span class="keyword">new</span> LinkedList();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">appendTail</span><span class="params">(<span class="keyword">int</span> value)</span> </span>{</span><br><span class="line">        inStack.push(value);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteHead</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (outStack.isEmpty()) {</span><br><span class="line">            <span class="keyword">while</span> (!inStack.isEmpty()) {</span><br><span class="line">                outStack.push(inStack.poll());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> outStack.isEmpty() ? -<span class="number">1</span> : outStack.poll();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="8-用两个队列实现栈"><a href="#8-用两个队列实现栈" class="headerlink" title="8 用两个队列实现栈"></a>8 用两个队列实现栈</h3><h4 id="解一-6"><a href="#解一-6" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LinkedList&lt;Integer&gt; inQueue;</span><br><span class="line">    <span class="keyword">private</span> LinkedList&lt;Integer&gt; outQueue;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyStack</span><span class="params">()</span> </span>{</span><br><span class="line">        inQueue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        outQueue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 直接向队列1添加就行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line">        inQueue.add(x);</span><br><span class="line">        size++;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (size == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size - <span class="number">1</span>; i++) {</span><br><span class="line">            outQueue.add(inQueue.remove());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> res = inQueue.remove();</span><br><span class="line">        size--;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) {</span><br><span class="line">            inQueue.add(outQueue.remove());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> res = pop();</span><br><span class="line">        inQueue.add(res);</span><br><span class="line">        size++;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">empty</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="递归和循环"><a href="#递归和循环" class="headerlink" title="递归和循环"></a>递归和循环</h2><h3 id="9-斐波那契数列"><a href="#9-斐波那契数列" class="headerlink" title="9 斐波那契数列"></a>9 斐波那契数列</h3><h4 id="解一-7"><a href="#解一-7" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) {</span><br><span class="line">        <span class="keyword">int</span> tmp = b % <span class="number">1000000007</span>;</span><br><span class="line">        b = (a % <span class="number">1000000007</span> + b % <span class="number">1000000007</span>) % <span class="number">1000000007</span>;</span><br><span class="line">        a = tmp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="10-青蛙跳台阶问题"><a href="#10-青蛙跳台阶问题" class="headerlink" title="10 青蛙跳台阶问题"></a>10 青蛙跳台阶问题</h3><h4 id="解一-8"><a href="#解一-8" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numWays</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++) {</span><br><span class="line">        <span class="keyword">int</span> tmp = b % <span class="number">1000000007</span>;</span><br><span class="line">        b = (a % <span class="number">1000000007</span> + b % <span class="number">1000000007</span>) % <span class="number">1000000007</span>;</span><br><span class="line">        a = tmp;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="查找和排序"><a href="#查找和排序" class="headerlink" title="查找和排序"></a>查找和排序</h2><h3 id="11-旋转数组的最小数字"><a href="#11-旋转数组的最小数字" class="headerlink" title="11 旋转数组的最小数字"></a>11 旋转数组的最小数字</h3><h4 id="解一-9"><a href="#解一-9" class="headerlink" title="解一"></a>解一</h4><p>直接遍历</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minArray</span><span class="params">(<span class="keyword">int</span>[] numbers)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> minNumber = numbers[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; numbers.length; i++) {</span><br><span class="line">        <span class="keyword">if</span> (numbers[i] &lt; minNumber) {</span><br><span class="line">            <span class="keyword">return</span> numbers[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> minNumber;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="解二-4"><a href="#解二-4" class="headerlink" title="解二"></a>解二</h4><p>二分</p><p>不能用中间值与左值进行比较</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minArray</span><span class="params">(<span class="keyword">int</span>[] numbers)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> len = numbers.length;</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">return</span> numbers[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> r = len - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 第一次二分找到转折点</span></span><br><span class="line">    <span class="keyword">while</span> (l &lt; r) {</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (numbers[mid] &gt; numbers[r]) {</span><br><span class="line">            l = mid + <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (numbers[mid] == numbers[r]) {</span><br><span class="line">            r = r - <span class="number">1</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            r = mid;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> numbers[l];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="回溯法"><a href="#回溯法" class="headerlink" title="回溯法"></a>回溯法</h2><h3 id="12-矩阵中的路径"><a href="#12-矩阵中的路径" class="headerlink" title="12 矩阵中的路径"></a>12 矩阵中的路径</h3><h4 id="解一-10"><a href="#解一-10" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">exist</span><span class="params">(<span class="keyword">char</span>[][] board, String word)</span> </span>{</span><br><span class="line">    <span class="keyword">char</span>[] wordArray = word.toCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; board.length; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; board[<span class="number">0</span>].length; j++) {</span><br><span class="line">            <span class="keyword">if</span> (dfs(board, wordArray, i, j, <span class="number">0</span>)) {</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[][] board, <span class="keyword">char</span>[] word, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">    <span class="comment">// 剪枝</span></span><br><span class="line">    <span class="keyword">if</span> (i &gt;= board.length || i &lt; <span class="number">0</span> || j &gt;= board[<span class="number">0</span>].length || j &lt; <span class="number">0</span> || board[i][j] != word[k]) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (k == word.length - <span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 往四个方向继续走</span></span><br><span class="line">    <span class="comment">// mask当前值</span></span><br><span class="line">    board[i][j] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">boolean</span> res =  dfs(board, word, i - <span class="number">1</span>, j, k + <span class="number">1</span>) || dfs(board, word, i + <span class="number">1</span>, j, k + <span class="number">1</span>) || dfs(board, word, i, j - <span class="number">1</span>, k + <span class="number">1</span>) || dfs(board, word, i, j + <span class="number">1</span>, k + <span class="number">1</span>);</span><br><span class="line">    board[i][j] = word[k];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="13-机器人的运动范围"><a href="#13-机器人的运动范围" class="headerlink" title="13 机器人的运动范围"></a>13 机器人的运动范围</h3><h4 id="解一-11"><a href="#解一-11" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">movingCount</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">        <span class="keyword">boolean</span>[][] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[m][n];</span><br><span class="line">        dfs(m, n, <span class="number">0</span>, <span class="number">0</span>, k, visited);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n, <span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k, <span class="keyword">boolean</span>[][] visited)</span> </span>{</span><br><span class="line">        <span class="comment">// 剪枝</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">0</span> || j &lt; <span class="number">0</span> || i &gt;= m || j &gt;= n || visited[i][j]) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (getSum(i) + getSum(j) &gt; k) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        visited[i][j] = <span class="keyword">true</span>;</span><br><span class="line">        res++;</span><br><span class="line">        dfs(m, n, i - <span class="number">1</span>, j, k, visited);</span><br><span class="line">        dfs(m, n, i + <span class="number">1</span>, j, k, visited);</span><br><span class="line">        dfs(m, n, i, j - <span class="number">1</span>, k, visited);</span><br><span class="line">        dfs(m, n, i, j + <span class="number">1</span>, k, visited);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> i)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i != <span class="number">0</span>) {</span><br><span class="line">            count += (i % <span class="number">10</span>);</span><br><span class="line">            i /= <span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="动态规划和贪心算法"><a href="#动态规划和贪心算法" class="headerlink" title="动态规划和贪心算法"></a>动态规划和贪心算法</h2><h3 id="14-剪绳子"><a href="#14-剪绳子" class="headerlink" title="14 剪绳子"></a>14 剪绳子</h3><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><h3 id="15-二进制中1的个数"><a href="#15-二进制中1的个数" class="headerlink" title="15 二进制中1的个数"></a>15 二进制中1的个数</h3><h3 id="16-数值的整数次方"><a href="#16-数值的整数次方" class="headerlink" title="16 数值的整数次方"></a>16 数值的整数次方</h3><h4 id="解一-12"><a href="#解一-12" class="headerlink" title="解一"></a>解一</h4><p>注意的两个点：</p><ul><li>n为Integer.MIN_VALUE时，直接使用int转为正值会溢出</li><li>直接遍历n进行相乘会超时</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">myPow</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">long</span> b = n;</span><br><span class="line">    <span class="keyword">if</span> (b &lt; <span class="number">0</span>) {</span><br><span class="line">        x = <span class="number">1.0</span> / x;</span><br><span class="line">        b = -b;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">double</span> res = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>) == <span class="number">1</span>) {</span><br><span class="line">            res *= x;</span><br><span class="line">        }</span><br><span class="line">        x *=x;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="17-打印从1到最大的n位数"><a href="#17-打印从1到最大的n位数" class="headerlink" title="17 打印从1到最大的n位数"></a>17 打印从1到最大的n位数</h3><h4 id="解一-13"><a href="#解一-13" class="headerlink" title="解一"></a>解一</h4><p>注意的两个点：</p><ul><li>大数越界问题，可以使用String来解决</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] printNumbers(<span class="keyword">int</span> n) {</span><br><span class="line">    <span class="keyword">int</span> end = (<span class="keyword">int</span>)Math.pow(<span class="number">10</span>, n) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[end];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; end; i++) {</span><br><span class="line">        res[i] = i + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="18-删除链表的节点"><a href="#18-删除链表的节点" class="headerlink" title="18 删除链表的节点"></a>18 删除链表的节点</h3><h4 id="解一-14"><a href="#解一-14" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteNode</span><span class="params">(ListNode head, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (head.val == val) {</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    }</span><br><span class="line">    ListNode p = head;</span><br><span class="line">    ListNode cur = p.next;</span><br><span class="line">    <span class="comment">// 从next开始遍历</span></span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">if</span> (cur.val == val) {</span><br><span class="line">            p.next = cur.next;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        }</span><br><span class="line">        p = p.next;</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="19-删除排序链表中的重复元素"><a href="#19-删除排序链表中的重复元素" class="headerlink" title="19 删除排序链表中的重复元素"></a>19 删除排序链表中的重复元素</h3><h4 id="解一-15"><a href="#解一-15" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteDuplicates</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    ListNode p = head;</span><br><span class="line">    ListNode cur = p.next;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">if</span> (cur.val == p.val) {</span><br><span class="line">            cur = cur.next;</span><br><span class="line">            p.next = cur;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            p = p.next;</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="20-删除排序链表中的所有重复元素"><a href="#20-删除排序链表中的所有重复元素" class="headerlink" title="20 删除排序链表中的所有重复元素"></a>20 删除排序链表中的所有重复元素</h3><h4 id="解一-16"><a href="#解一-16" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteDuplicates</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    ListNode dummy = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">    dummy.next = head;</span><br><span class="line">    ListNode cur = dummy;</span><br><span class="line">    <span class="keyword">while</span> (cur.next != <span class="keyword">null</span> &amp;&amp; cur.next.next != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">if</span> (cur.next.val == cur.next.next.val) {</span><br><span class="line">            <span class="keyword">int</span> curVal = cur.next.val;</span><br><span class="line">            <span class="keyword">while</span> (cur.next != <span class="keyword">null</span> &amp;&amp; cur.next.val == curVal) {</span><br><span class="line">                cur.next = cur.next.next;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> dummy.next;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="21-正则表达式匹配"><a href="#21-正则表达式匹配" class="headerlink" title="21 正则表达式匹配"></a>21 正则表达式匹配</h3><p>【困难】</p><h4 id="解一-17"><a href="#解一-17" class="headerlink" title="解一"></a>解一</h4><p>首先，定义dp</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">dp[i][j] 表示 s[:i]与p[:j]匹配</span></span><br><span class="line"><span class="comment">s[:i] 表示s的前i个字符</span></span><br><span class="line"><span class="comment">p[:j] 表示p的前j个字符</span></span><br><span class="line"><span class="comment">若 s[:i] == p[:j]， 那么下一状态就是判断添加一个字符s[i+1]能否匹配或者添加一个字符p[j+1]能否匹配</span></span><br><span class="line"><span class="comment">// 初始化 </span></span><br><span class="line"><span class="comment">dp[0][0] 表示空字符串，dp[0][0] == true</span></span><br><span class="line"><span class="comment">dp[0][j] 此时，当p的偶数位为'*'才能匹配，需要保持p为空字符串</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">当p[j-1]为'*'时，可以匹配dp[i][j-2] || dp[i-1][j]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span>    </span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMatch</span><span class="params">(String s, String p)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> m = s.length() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> n = p.length() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[m][n];</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="comment">// 初始化首行</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; n; j += <span class="number">2</span>) {</span><br><span class="line">        dp[<span class="number">0</span>][j] = dp[<span class="number">0</span>][j - <span class="number">2</span>] &amp;&amp; p.charAt(j - <span class="number">1</span>) == <span class="string">'*'</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) {</span><br><span class="line">            <span class="keyword">if</span> (p.charAt(j - <span class="number">1</span>) == <span class="string">'*'</span>) {</span><br><span class="line">                dp[i][j] = dp[i][j - <span class="number">2</span>] || (dp[i - <span class="number">1</span>][j] &amp;&amp; (s.charAt(i - <span class="number">1</span>) == p.charAt(j - <span class="number">2</span>) || p.charAt(j - <span class="number">2</span>) == <span class="string">'.'</span>));</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] &amp;&amp; ((s.charAt(i - <span class="number">1</span>) == p.charAt(j - <span class="number">1</span>)) || (p.charAt(j - <span class="number">1</span>) == <span class="string">'.'</span>));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> dp[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="21-调整数组顺序使奇数位于偶数前面"><a href="#21-调整数组顺序使奇数位于偶数前面" class="headerlink" title="21 调整数组顺序使奇数位于偶数前面"></a>21 调整数组顺序使奇数位于偶数前面</h3><h4 id="解一-18"><a href="#解一-18" class="headerlink" title="解一"></a>解一</h4><p>【注意】</p><p>注意边界</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] exchange(<span class="keyword">int</span>[] nums) {</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> r = nums.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r) {</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r &amp;&amp; ((nums[r] &amp; <span class="number">1</span>) == <span class="number">0</span>)) {</span><br><span class="line">            r--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r &amp;&amp; ((nums[l] &amp; <span class="number">1</span>) == <span class="number">1</span>)) {</span><br><span class="line">            l++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> t = nums[l];</span><br><span class="line">        nums[l] = nums[r];</span><br><span class="line">        nums[r] = t;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> nums;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="22-链表中倒数第K个节点"><a href="#22-链表中倒数第K个节点" class="headerlink" title="22 链表中倒数第K个节点"></a>22 链表中倒数第K个节点</h3><h4 id="解一-19"><a href="#解一-19" class="headerlink" title="解一"></a>解一</h4><p>双指针</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">getKthFromEnd</span><span class="params">(ListNode head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">    ListNode fast = head;</span><br><span class="line">    ListNode slow = head;</span><br><span class="line">    <span class="keyword">while</span> (fast != <span class="keyword">null</span>) {</span><br><span class="line">        fast = fast.next;</span><br><span class="line">        k--;</span><br><span class="line">        <span class="keyword">if</span> (k &lt; <span class="number">0</span>) {</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> slow;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="23-链表中环的入口"><a href="#23-链表中环的入口" class="headerlink" title="23 链表中环的入口"></a>23 链表中环的入口</h3><h4 id="解一-20"><a href="#解一-20" class="headerlink" title="解一"></a>解一</h4><p>双指针遍历，能走完说明没有环</p><p>否则，让一个指针重新从头开始遍历，另一个继续遍历，相等时即为环的入口</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">detectCycle</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    ListNode fast = head, slow = head;</span><br><span class="line">    <span class="keyword">while</span> (fast != <span class="keyword">null</span>) {</span><br><span class="line">        slow = slow.next;</span><br><span class="line">        <span class="keyword">if</span> (fast.next != <span class="keyword">null</span>) {</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (fast == slow) {</span><br><span class="line">            fast = head;</span><br><span class="line">            <span class="keyword">while</span> (slow != fast) {</span><br><span class="line">                slow = slow.next;</span><br><span class="line">                fast = fast.next;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> fast;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="24-反转链表"><a href="#24-反转链表" class="headerlink" title="24 反转链表"></a>24 反转链表</h3><h4 id="解一-21"><a href="#解一-21" class="headerlink" title="解一"></a>解一</h4><p>递归</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    ListNode returnNode = reverseList(head.next);</span><br><span class="line">    head.next.next = head;</span><br><span class="line">    head.next = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">return</span> returnNode;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="解二-5"><a href="#解二-5" class="headerlink" title="解二"></a>解二</h4><p>使用栈进行反转</p><h3 id="25-合并排序链表"><a href="#25-合并排序链表" class="headerlink" title="25 合并排序链表"></a>25 合并排序链表</h3><h4 id="解一-22"><a href="#解一-22" class="headerlink" title="解一"></a>解一</h4><p>使用队列来保存</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeKLists</span><span class="params">(ListNode[] lists)</span> </span>{</span><br><span class="line">    ListNode cur = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">    ListNode res = cur;</span><br><span class="line">    <span class="keyword">int</span> n = lists.length;</span><br><span class="line">    PriorityQueue&lt;ListNode&gt; pq = <span class="keyword">new</span> PriorityQueue&lt;&gt;((n1, n2) -&gt; n1.val - n2.val);</span><br><span class="line">    <span class="keyword">for</span> (ListNode node : lists) {</span><br><span class="line">        <span class="keyword">if</span> (node != <span class="keyword">null</span>) {</span><br><span class="line">            pq.offer(node);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (!pq.isEmpty()) {</span><br><span class="line">        ListNode curNode = pq.poll();</span><br><span class="line">        res.next = curNode;</span><br><span class="line">        res = res.next;</span><br><span class="line">        <span class="keyword">if</span> (curNode.next != <span class="keyword">null</span>) {</span><br><span class="line">            pq.offer(curNode.next);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> cur.next;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="26-树的子结构"><a href="#26-树的子结构" class="headerlink" title="26 树的子结构"></a>26 树的子结构</h3><h4 id="解一-23"><a href="#解一-23" class="headerlink" title="解一"></a>解一</h4><p>先判断当前的节点A和B是否相同，然后比较A.l和B.l 、A.r和B.r</p><p>【注意】判断double类型的变量是否相等时，需要判断两数之差是否在一个范围内，不能直接使用==</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSubStructure</span><span class="params">(TreeNode A, TreeNode B)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (B == <span class="keyword">null</span> || A == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> hasSubStructure(A, B) || isSubStructure(A.left, B) || isSubStructure(A.right, B);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">hasSubStructure</span><span class="params">(TreeNode A, TreeNode B)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (B == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (A == <span class="keyword">null</span> || A.val != B.val) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> hasSubStructure(A.left, B.left) &amp;&amp; hasSubStructure(A.right, B.right);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="27-二叉树的镜像"><a href="#27-二叉树的镜像" class="headerlink" title="27 二叉树的镜像"></a>27 二叉树的镜像</h3><h4 id="解一-24"><a href="#解一-24" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">mirrorTree</span><span class="params">(TreeNode root)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    TreeNode tmp = root.left;</span><br><span class="line">    root.left = mirrorTree(root.right);</span><br><span class="line">    root.right = mirrorTree(tmp);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="28-对称的二叉树"><a href="#28-对称的二叉树" class="headerlink" title="28 对称的二叉树"></a>28 对称的二叉树</h3><h4 id="解一-25"><a href="#解一-25" class="headerlink" title="解一"></a>解一</h4><p>构造一个辅助函数，进行对比</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSymmetric</span><span class="params">(TreeNode root)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> check(root, root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(TreeNode p, TreeNode q)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="keyword">null</span> &amp;&amp; q == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> ((p == <span class="keyword">null</span> &amp;&amp; q != <span class="keyword">null</span>) || (p != <span class="keyword">null</span> &amp;&amp; q == <span class="keyword">null</span>) || p.val != q.val) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> check(p.left, q.right) &amp;&amp; check(p.right, q.left);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="29-顺时针打印矩阵"><a href="#29-顺时针打印矩阵" class="headerlink" title="29 顺时针打印矩阵"></a>29 顺时针打印矩阵</h3><h4 id="解一-26"><a href="#解一-26" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] spiralOrder(<span class="keyword">int</span>[][] matrix) {</span><br><span class="line">    <span class="keyword">int</span> m = matrix.length;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> n = matrix[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = n - <span class="number">1</span>, t = <span class="number">0</span>, b = m - <span class="number">1</span>, x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[m * n];</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; i++) {</span><br><span class="line">            res[x++] = matrix[t][i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (++t &gt; b) {</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = t; i &lt;= b; i++) {</span><br><span class="line">            res[x++] = matrix[i][r];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (l &gt; --r) {</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = r; i &gt;= l; i--) {</span><br><span class="line">            res[x++] = matrix[b][i];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (t &gt; --b) {</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = b; i &gt;= t; i--) {</span><br><span class="line">            res[x++] = matrix[i][l];</span><br><span class="line">        }                     </span><br><span class="line">        <span class="keyword">if</span> (++l &gt; r) {</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }   </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="30-包含main函数的栈"><a href="#30-包含main函数的栈" class="headerlink" title="30 包含main函数的栈"></a>30 包含main函数的栈</h3><h4 id="解一-27"><a href="#解一-27" class="headerlink" title="解一"></a>解一</h4><p>另开一个最小栈，用于存放当前栈的最小值，当新push的值比原最小值小时，在最小栈中push新值，否则继续push原来的最小值</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MinStack</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Integer&gt; stack;</span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Integer&gt; minStack;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * initialize your data structure here.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MinStack</span><span class="params">()</span> </span>{</span><br><span class="line">        stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        minStack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>{</span><br><span class="line">        stack.push(x);</span><br><span class="line">        <span class="keyword">if</span> (minStack.isEmpty()) {</span><br><span class="line">            minStack.push(x);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">if</span> (minStack.peek() &gt; x) {</span><br><span class="line">                minStack.push(x);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                minStack.push(minStack.peek());</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>{</span><br><span class="line">        stack.pop();</span><br><span class="line">        minStack.pop();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> stack.peek();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">min</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> minStack.peek();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="31-栈的压入、弹出序列"><a href="#31-栈的压入、弹出序列" class="headerlink" title="31 栈的压入、弹出序列"></a>31 栈的压入、弹出序列</h3><h4 id="解一-28"><a href="#解一-28" class="headerlink" title="解一"></a>解一</h4><p>使用辅助栈</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validateStackSequences</span><span class="params">(<span class="keyword">int</span>[] pushed, <span class="keyword">int</span>[] popped)</span> </span>{</span><br><span class="line">    <span class="comment">// 辅助栈</span></span><br><span class="line">    Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : pushed) {</span><br><span class="line">        stack.push(num);</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty() &amp;&amp; stack.peek() == popped[i]) {</span><br><span class="line">            stack.pop();</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> stack.isEmpty();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="32-从上到下打印二叉树"><a href="#32-从上到下打印二叉树" class="headerlink" title="32 从上到下打印二叉树"></a>32 从上到下打印二叉树</h3><h4 id="解一-29"><a href="#解一-29" class="headerlink" title="解一"></a>解一</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] levelOrder(TreeNode root) {</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    List&lt;Integer&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    queue.offer(root);</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) {</span><br><span class="line">        <span class="keyword">int</span> size = queue.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) {</span><br><span class="line">            TreeNode node = queue.poll();</span><br><span class="line">            res.add(node.val);</span><br><span class="line">            <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) {</span><br><span class="line">                queue.offer(node.left);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) {</span><br><span class="line">                queue.offer(node.right);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[res.size()];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; res.size(); i++) {</span><br><span class="line">        ans[i] = res.get(i);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="33-二叉搜索树的后序遍历序列"><a href="#33-二叉搜索树的后序遍历序列" class="headerlink" title="33 二叉搜索树的后序遍历序列"></a>33 二叉搜索树的后序遍历序列</h3><h4 id="解一-30"><a href="#解一-30" class="headerlink" title="解一"></a>解一</h4><p>根据后序遍历“左右根”的顺序，取出根的值，从前往后遍历找到第一个大于根的节点作为左右子树的分界，当右子树的所有制都大于根时，才为二叉搜索树</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verifyPostorder</span><span class="params">(<span class="keyword">int</span>[] postorder)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (postorder.length &lt; <span class="number">2</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> helper(postorder, <span class="number">0</span>, postorder.length - <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">helper</span><span class="params">(<span class="keyword">int</span>[] postorder, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (start &gt; end) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> root = postorder[end];</span><br><span class="line">        <span class="keyword">int</span> maxIndex = start;</span><br><span class="line">        <span class="keyword">int</span> i = start;</span><br><span class="line">        <span class="keyword">while</span> (postorder[i] &lt; root) {</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> j = i;</span><br><span class="line">        <span class="keyword">while</span> (postorder[i] &gt; root) {</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">boolean</span> left = helper(postorder, start,  j - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">boolean</span> right = helper(postorder, j, end - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> i == end &amp;&amp; left &amp;&amp; right;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="34-二叉树中和为某一值的路径"><a href="#34-二叉树中和为某一值的路径" class="headerlink" title="34 二叉树中和为某一值的路径"></a>34 二叉树中和为某一值的路径</h3><h4 id="解一-31"><a href="#解一-31" class="headerlink" title="解一"></a>解一</h4><p>回溯遍历</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; pathSum(TreeNode root, <span class="keyword">int</span> target) {</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        LinkedList&lt;Integer&gt; list = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        path(root, target, res, list);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">path</span><span class="params">(TreeNode root, <span class="keyword">int</span> target, List&lt;List&lt;Integer&gt;&gt; res, LinkedList&lt;Integer&gt; list)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">int</span> val = root.val;</span><br><span class="line">        list.add(val);</span><br><span class="line">        <span class="keyword">if</span> (target - val == <span class="number">0</span> &amp;&amp; root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>) {</span><br><span class="line">            res.add(<span class="keyword">new</span> ArrayList(list));</span><br><span class="line">        }</span><br><span class="line">        path(root.left, target - val, res, list);</span><br><span class="line">        path(root.right, target - val, res, list);</span><br><span class="line">        list.removeLast();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="35-复杂链表的复制"><a href="#35-复杂链表的复制" class="headerlink" title="35 复杂链表的复制"></a>35 复杂链表的复制</h3><h4 id="解一-32"><a href="#解一-32" class="headerlink" title="解一"></a>解一</h4><p>要使用map记录老节点与新节点的对应关系</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">copyRandomList</span><span class="params">(Node head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    } </span><br><span class="line">    Node cur = head;</span><br><span class="line">    Node res = <span class="keyword">new</span> Node(<span class="number">0</span>);</span><br><span class="line">    Node p = res;</span><br><span class="line">    Map&lt;Node, Node&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        Node newNode = <span class="keyword">new</span> Node(cur.val);</span><br><span class="line">        p.next = newNode;</span><br><span class="line">        map.put(cur, newNode);</span><br><span class="line">        p = p.next;</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    }</span><br><span class="line">    cur  = head;</span><br><span class="line">    p = res.next;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        p.random = map.get(cur.random);</span><br><span class="line">        cur = cur.next;</span><br><span class="line">        p = p.next;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res.next;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;剑指Offer系列题解&quot;&gt;&lt;a href=&quot;#剑指Offer系列题解&quot; class=&quot;headerlink&quot; title=&quot;剑指Offer系列题解&quot;&gt;&lt;/a&gt;剑指Offer系列题解&lt;/h1&gt;&lt;h2 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;head</summary>
      
    
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
  </entry>
  
  <entry>
    <title>基于大数据的图书推荐系统系统（五）——离线推荐</title>
    <link href="https://wanfengyueluo.github.io/2021/12/06/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-tong-wu-chi-xian-tui-jian/"/>
    <id>https://wanfengyueluo.github.io/2021/12/06/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-tong-wu-chi-xian-tui-jian/</id>
    <published>2021-12-06T13:21:55.000Z</published>
    <updated>2022-04-18T12:58:29.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Offline-Recommender"><a href="#Offline-Recommender" class="headerlink" title="Offline Recommender"></a>Offline Recommender</h1><blockquote><p>注意：离线推荐模块我直接使用原数据集的全部数据时会出现内存溢出的问题，如果你的虚拟机设置的内存并不大，建议选取部分的数据集数据</p></blockquote><ol><li><p>新建子模块OfflineRecommender</p></li><li><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>book-recommender<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.wan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>OfflineRecommender<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.scalanlp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jblas<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${jblas.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Spark的依赖引入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-sql_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-mllib_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入Scala --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.scala-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>scala-library<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 加入MongoDB的驱动 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 用于代码方式连接MongoDB --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>casbah-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${casbah.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 用于Spark和MongoDB的对接 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongo-spark-connector_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${mongodb-spark.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>offlinerecommender<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.wan.offline.OfflineRecommender<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>配置日志文件</p></li><li><p>编码<code>OfflineRecommender.scala</code></p><figure class="highlight scala"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wan.offline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.mllib.recommendation.{<span class="type">ALS</span>, <span class="type">Rating</span>}</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.<span class="type">SparkSession</span></span><br><span class="line"><span class="keyword">import</span> org.jblas.<span class="type">DoubleMatrix</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @author wanfeng</span></span><br><span class="line"><span class="comment"> * @date 2021/3/13 10:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">BookRating</span>(<span class="params">userId: <span class="type">Int</span>, bookId: <span class="type">Int</span>, score: <span class="type">Int</span></span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">case</span> <span class="title">class</span> <span class="title">MongoConfig</span>(<span class="params">uri: <span class="type">String</span>, db: <span class="type">String</span></span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">case</span> <span class="title">class</span> <span class="title">Recommenderation</span>(<span class="params">bookId: <span class="type">Int</span>, score: <span class="type">Double</span></span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">case</span> <span class="title">class</span> <span class="title">UserRecs</span>(<span class="params">userId: <span class="type">Int</span>, recs: <span class="type">Seq</span>[<span class="type">Recommenderation</span>]</span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">case</span> <span class="title">class</span> <span class="title">BookRecs</span>(<span class="params">bookId: <span class="type">Int</span>, recs: <span class="type">Seq</span>[<span class="type">Recommenderation</span>]</span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">object</span> <span class="title">OfflineRecommender</span> </span>{</span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MONGODB_RATING_COLLECTION</span> = <span class="string">"Rating"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义推荐表名</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">USER_RECS</span> = <span class="string">"UserRecs"</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">BOOK_RECS</span> = <span class="string">"BookRecs"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//定义推荐数量</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">USER_MAX_RECOMMENDATION</span> = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> config = <span class="type">Map</span>(</span><br><span class="line">      <span class="string">"spark.cores"</span> -&gt; <span class="string">"local[*]"</span>,</span><br><span class="line">      <span class="string">"mongo.uri"</span> -&gt; <span class="string">"mongodb://192.168.2.88:27017/recommender"</span>,</span><br><span class="line">      <span class="string">"mongo.db"</span> -&gt; <span class="string">"recommender"</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">val</span> sparkConf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(config(<span class="string">"spark.cores"</span>)).setAppName(<span class="string">"OfflineRecommender"</span>)</span><br><span class="line">    <span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().config(sparkConf).getOrCreate()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> spark.implicits._</span><br><span class="line"></span><br><span class="line">    <span class="keyword">implicit</span> <span class="keyword">val</span> mongoConfig = <span class="type">MongoConfig</span>(config(<span class="string">"mongo.uri"</span>), config(<span class="string">"mongo.db"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> ratingRDD = spark.read</span><br><span class="line">      .option(<span class="string">"uri"</span>, mongoConfig.uri)</span><br><span class="line">      .option(<span class="string">"collection"</span>, <span class="type">MONGODB_RATING_COLLECTION</span>)</span><br><span class="line">      .format(<span class="string">"com.mongodb.spark.sql"</span>)</span><br><span class="line">      .load()</span><br><span class="line">      .as[<span class="type">BookRating</span>]</span><br><span class="line">      .rdd</span><br><span class="line">      .map(</span><br><span class="line">        rating =&gt; (rating.userId, rating.bookId, rating.score)</span><br><span class="line">      ).cache()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> userRDD = ratingRDD.map(_._1).distinct()</span><br><span class="line">    <span class="keyword">val</span> bookRDD = ratingRDD.map(_._2).distinct()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1. 训练隐语义模型</span></span><br><span class="line">    <span class="keyword">val</span> trainData = ratingRDD.map(x =&gt; <span class="type">Rating</span>(x._1, x._2, x._3))</span><br><span class="line">    <span class="keyword">val</span> (rank, iterations, lambda) = (<span class="number">50</span>, <span class="number">5</span>, <span class="number">0.01</span>)</span><br><span class="line">    <span class="keyword">val</span> model = <span class="type">ALS</span>.train(trainData, rank, iterations, lambda)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 获得预评分矩阵，得到用户的推荐列表</span></span><br><span class="line">    <span class="keyword">val</span> userBooks = userRDD.cartesian(bookRDD)</span><br><span class="line">    <span class="keyword">val</span> preRating = model.predict(userBooks)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> userRecs = preRating.filter(_.rating &gt; <span class="number">0</span>)</span><br><span class="line">      .map(</span><br><span class="line">        rating =&gt; (rating.user, (rating.product, rating.rating))</span><br><span class="line">      )</span><br><span class="line">      .groupByKey()</span><br><span class="line">      .map {</span><br><span class="line">        <span class="keyword">case</span> (userId, recs) =&gt;</span><br><span class="line">          <span class="type">UserRecs</span>(</span><br><span class="line">            userId, recs.toList.sortWith(_._2 &gt; _._2).take(<span class="type">USER_MAX_RECOMMENDATION</span>).map(x =&gt; <span class="type">Recommenderation</span>(x._1, x._2))</span><br><span class="line">          )</span><br><span class="line">      }</span><br><span class="line">      .toDF()</span><br><span class="line"></span><br><span class="line">    userRecs.write</span><br><span class="line">      .option(<span class="string">"uri"</span>, mongoConfig.uri)</span><br><span class="line">      .option(<span class="string">"collection"</span>, <span class="type">USER_RECS</span>)</span><br><span class="line">      .mode(<span class="string">"overwrite"</span>)</span><br><span class="line">      .format(<span class="string">"com.mongodb.spark.sql"</span>)</span><br><span class="line">      .save()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 利用书籍的特征向量，计算书籍的相似度列表</span></span><br><span class="line">    <span class="keyword">val</span> productFeatures = model.productFeatures.map {</span><br><span class="line">      <span class="keyword">case</span> (bookId, features) =&gt; (bookId, <span class="keyword">new</span> <span class="type">DoubleMatrix</span>(features))</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> bookRecs = productFeatures.cartesian(productFeatures)</span><br><span class="line">      .filter {</span><br><span class="line">        <span class="keyword">case</span> (a, b) =&gt; a._1 != b._1</span><br><span class="line">      }</span><br><span class="line">      .map {</span><br><span class="line">        <span class="keyword">case</span> (a, b) =&gt;</span><br><span class="line">          <span class="keyword">val</span> simScore = consinSim(a._2, b._2)</span><br><span class="line">          (a._1, (b._1, simScore))</span><br><span class="line">      }</span><br><span class="line">      .filter(_._2._2 &gt; <span class="number">0.4</span>)</span><br><span class="line">      .groupByKey()</span><br><span class="line">      .map {</span><br><span class="line">        <span class="keyword">case</span> (bookId, recs) =&gt;</span><br><span class="line">          <span class="type">BookRecs</span>(</span><br><span class="line">            bookId, recs.toList.map(x =&gt; <span class="type">Recommenderation</span>(x._1, x._2))</span><br><span class="line">          )</span><br><span class="line">      }</span><br><span class="line">      .toDF()</span><br><span class="line"></span><br><span class="line">    bookRecs</span><br><span class="line">      .write</span><br><span class="line">      .option(<span class="string">"uri"</span>, mongoConfig.uri)</span><br><span class="line">      .option(<span class="string">"collection"</span>, <span class="type">BOOK_RECS</span>)</span><br><span class="line">      .mode(<span class="string">"overwrite"</span>)</span><br><span class="line">      .format(<span class="string">"com.mongodb.spark.sql"</span>)</span><br><span class="line">      .save()</span><br><span class="line"></span><br><span class="line">    spark.stop()</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">consinSim</span></span>(product1: <span class="type">DoubleMatrix</span>, product2: <span class="type">DoubleMatrix</span>): <span class="type">Double</span> = {</span><br><span class="line">    product1.dot(product2) / (product1.norm2() * product2.norm2())</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><p>展示工程结构与运行效果：</p><p><img src="F:\yueluo\source\_posts\image-20210313104311120.png" alt="image-20210313142831598"></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210313142915947.png" alt="image-20210313142915947"></p></li><li><p>结束！</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Offline-Recommender&quot;&gt;&lt;a href=&quot;#Offline-Recommender&quot; class=&quot;headerlink&quot; title=&quot;Offline Recommender&quot;&gt;&lt;/a&gt;Offline Recommender&lt;/h1&gt;&lt;bloc</summary>
      
    
    
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/categories/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="大数据" scheme="https://wanfengyueluo.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>基于大数据的图书推荐系统系统（四）——数据统计</title>
    <link href="https://wanfengyueluo.github.io/2021/12/06/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-tong-si-shu-ju-tong-ji/"/>
    <id>https://wanfengyueluo.github.io/2021/12/06/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-tong-si-shu-ju-tong-ji/</id>
    <published>2021-12-06T13:20:26.000Z</published>
    <updated>2022-04-18T12:58:29.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Statistics-Recommender"><a href="#Statistics-Recommender" class="headerlink" title="Statistics Recommender"></a>Statistics Recommender</h1><blockquote><p>第一个Dataloader模块记录之前没有把过程截图，我下面将离线数据统计模块的创建过程截图记录</p><p>此模块的前置条件：</p><ol><li>第一步Dataloader成功存储数据</li><li>虚拟机安装完成MongoDB和Spark并且成功启动</li></ol></blockquote><ol><li><p>创建子模块</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210313103032732.png" alt="image-20210313103032732"></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210313103159027.png" alt="image-20210313103159027"></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210313103254293.png" alt="image-20210313103254293"></p></li><li><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>book-recommender<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.wan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>StatisticsRecommender<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spark的依赖引入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-sql_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入Scala --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.scala-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>scala-library<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 加入MongoDB的驱动 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 用于代码方式连接MongoDB --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>casbah-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${casbah.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 用于Spark和MongoDB的对接 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongo-spark-connector_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${mongodb-spark.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>statisticsrecommender<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.wan.statistics.StatisticsRecommender<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>配置日志文件</p></li><li><p>编码<code>StatisticsRecommender.scala</code></p><figure class="highlight scala"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wan.statistics</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.{<span class="type">DataFrame</span>, <span class="type">SparkSession</span>}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @author wanfeng</span></span><br><span class="line"><span class="comment"> * @date 2021/3/13 10:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">Rating</span>(<span class="params">userId: <span class="type">Int</span>, bookId: <span class="type">Int</span>, score: <span class="type">Int</span></span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">case</span> <span class="title">class</span> <span class="title">MongoConfig</span>(<span class="params">uri: <span class="type">String</span>, db: <span class="type">String</span></span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">object</span> <span class="title">StatisticsRecommender</span> </span>{</span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MONGODB_RATING_COLLECTION</span> = <span class="string">"Rating"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//定义统计表名</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">RATE_MORE_BOOKS</span> = <span class="string">"RateMoreBooks"</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">AVERAGE_BOOKS</span> = <span class="string">"AverageBooks"</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> config = <span class="type">Map</span>(</span><br><span class="line">      <span class="string">"spark.cores"</span> -&gt; <span class="string">"local[*]"</span>,</span><br><span class="line">      <span class="string">"mongo.uri"</span> -&gt; <span class="string">"mongodb://192.168.2.88:27017/recommender"</span>,</span><br><span class="line">      <span class="string">"mongo.db"</span> -&gt; <span class="string">"recommender"</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">val</span> sparkConf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(config(<span class="string">"spark.cores"</span>)).setAppName(<span class="string">"StatisticsRecommender"</span>)</span><br><span class="line">    <span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().config(sparkConf).getOrCreate()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> spark.implicits._</span><br><span class="line"></span><br><span class="line">    <span class="keyword">implicit</span> <span class="keyword">val</span> mongoConfig = <span class="type">MongoConfig</span>(config(<span class="string">"mongo.uri"</span>), config(<span class="string">"mongo.db"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> ratingDF = spark.read</span><br><span class="line">      .option(<span class="string">"uri"</span>, mongoConfig.uri)</span><br><span class="line">      .option(<span class="string">"collection"</span>, <span class="type">MONGODB_RATING_COLLECTION</span>)</span><br><span class="line">      .format(<span class="string">"com.mongodb.spark.sql"</span>)</span><br><span class="line">      .load()</span><br><span class="line">      .as[<span class="type">Rating</span>]</span><br><span class="line">      .toDF()</span><br><span class="line"></span><br><span class="line">    ratingDF.createTempView(<span class="string">"ratings"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1. 历史热门书籍，按照评分个数统计</span></span><br><span class="line">    <span class="keyword">val</span> rateMoreBooksDF = spark.sql(<span class="string">"select bookId, count(bookId) as countNum from ratings group by bookId order by countNum desc"</span>)</span><br><span class="line">    storeDFInMongoDB(rateMoreBooksDF, <span class="type">RATE_MORE_BOOKS</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 优质书籍</span></span><br><span class="line">    <span class="keyword">val</span> averageBooksDF = spark.sql(<span class="string">"select bookId, avg(score) as avgScore from ratings group by bookId order by avgScore desc"</span>)</span><br><span class="line">    storeDFInMongoDB(averageBooksDF, <span class="type">AVERAGE_BOOKS</span>)</span><br><span class="line"></span><br><span class="line">    spark.stop()</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">storeDFInMongoDB</span></span>(df: <span class="type">DataFrame</span>, collection_name: <span class="type">String</span>)(<span class="keyword">implicit</span> mongoConfig: <span class="type">MongoConfig</span>): <span class="type">Unit</span> = {</span><br><span class="line">    df.write</span><br><span class="line">      .option(<span class="string">"uri"</span>, mongoConfig.uri)</span><br><span class="line">      .option(<span class="string">"collection"</span>, collection_name)</span><br><span class="line">      .mode(<span class="string">"overwrite"</span>)</span><br><span class="line">      .format(<span class="string">"com.mongodb.spark.sql"</span>)</span><br><span class="line">      .save()</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><p>展示工程结构与运行效果：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210313104311120.png" alt="image-20210313104311120"></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210313104336710.png" alt="image-20210313104336710"></p></li><li><p>结束！</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Statistics-Recommender&quot;&gt;&lt;a href=&quot;#Statistics-Recommender&quot; class=&quot;headerlink&quot; title=&quot;Statistics Recommender&quot;&gt;&lt;/a&gt;Statistics Recommend</summary>
      
    
    
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/categories/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="大数据" scheme="https://wanfengyueluo.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>基于大数据的图书推荐系统系统（三）——数据加载与存储</title>
    <link href="https://wanfengyueluo.github.io/2021/12/06/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-tong-san-shu-ju-jia-zai-yu-cun-chu/"/>
    <id>https://wanfengyueluo.github.io/2021/12/06/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-tong-san-shu-ju-jia-zai-yu-cun-chu/</id>
    <published>2021-12-06T13:18:41.000Z</published>
    <updated>2022-04-18T12:58:29.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dataloader"><a href="#Dataloader" class="headerlink" title="Dataloader"></a>Dataloader</h1><blockquote><p>此模块的前置条件：</p><ol><li>本地有Maven、Java、Scala、IDEA环境</li><li>虚拟机安装完成MongoDB和Spark并且成功启动</li><li>MongoDB可以不用建库建表，本地最好有一个MongoDB的可视化工具，我是用robo 3T，来验证MongoDB的远程连接和数据是否成功导入</li><li>以下步骤可能不太详细，参照我的项目结构以及代码灵活改动</li></ol></blockquote><ol><li><p>新建父工程book-recommender</p><p>父工程只进行一些依赖的全局设置，不涉及具体编码，所以删除该目录下的<code>src</code>目录</p></li><li><p>为父工程添加全局依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.wan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>book-recommender<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>Dataloader<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.7.22<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mongodb-spark.version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">mongodb-spark.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">casbah.version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">casbah.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">redis.version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">redis.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">kafka.version</span>&gt;</span>0.10.2.1<span class="tag">&lt;/<span class="name">kafka.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spark.version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">spark.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scala.version</span>&gt;</span>2.11.8<span class="tag">&lt;/<span class="name">scala.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jblas.version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">jblas.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 引入Spark相关的Jar包 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spark.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-sql_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spark.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-streaming_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spark.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-mllib_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spark.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-graphx_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${spark.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.scala-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>scala-library<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>${scala.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入共同的日志管理工具 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${slf4j.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${slf4j.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${slf4j.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${log4j.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--声明并引入子项目共有的插件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--所有的编译用JDK1.8--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;fork&gt;true&lt;/fork&gt;--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">meminitial</span>&gt;</span>512m<span class="tag">&lt;/<span class="name">meminitial</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">maxmem</span>&gt;</span>4096m<span class="tag">&lt;/<span class="name">maxmem</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--maven的打包插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--该插件用于将scala代码编译成class文件--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.alchim31.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>scala-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--绑定到maven的编译阶段--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>testCompile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>新建子模块Dataloader</p></li><li><p>为Dataloader模块添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>book-recommender<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.wan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Dataloader<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spark的依赖引入 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-sql_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入Scala --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.scala-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>scala-library<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 加入MongoDB的驱动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>casbah-core_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${casbah.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongo-spark-connector_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>${mongodb-spark.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>添加数据集文件和日志配置文件</p></li><li><p>Dataloader代码</p><figure class="highlight scala"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wan.recommender</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mongodb.casbah.commons.<span class="type">MongoDBObject</span></span><br><span class="line"><span class="keyword">import</span> com.mongodb.casbah.{<span class="type">MongoClient</span>, <span class="type">MongoClientURI</span>}</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkConf</span></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.{<span class="type">DataFrame</span>, <span class="type">SparkSession</span>}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 书籍数据集</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*"ISBN";"Book-Title";"Book-Author";"Year-Of-Publication";"Publisher";"Image-URL-S";"Image-URL-M";"Image-URL-L"</span></span><br><span class="line"><span class="comment">*"0195153448";                       书籍编号</span></span><br><span class="line"><span class="comment">*"Classical Mythology";              书籍名称</span></span><br><span class="line"><span class="comment">*"Mark P. O. Morford";               书籍作者</span></span><br><span class="line"><span class="comment">*"2002";                             书籍出版日期</span></span><br><span class="line"><span class="comment">*"Oxford University Press";          书籍出版社</span></span><br><span class="line"><span class="comment">*"http://images.amazon.com/images/P/0195153448.01.THUMBZZZ.jpg"; 书籍封面链接</span></span><br><span class="line"><span class="comment">*"http://images.amazon.com/images/P/0195153448.01.MZZZZZZZ.jpg";</span></span><br><span class="line"><span class="comment">*"http://images.amazon.com/images/P/0195153448.01.LZZZZZZZ.jpg"</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span>(<span class="params">bookId: <span class="type">Int</span>, bookTitle: <span class="type">String</span>, bookAuthor: <span class="type">String</span>, publishDate: <span class="type">String</span>, press: <span class="type">String</span>, bookImageUrl: <span class="type">String</span></span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="comment">/*</span></span></span><br><span class="line"><span class="class"><span class="comment">* 评分数据集</span></span></span><br><span class="line"><span class="class"><span class="comment">*</span></span></span><br><span class="line"><span class="class"><span class="comment">* "User-ID";"ISBN";"Book-Rating"</span></span></span><br><span class="line"><span class="class"><span class="comment">  "276725";       用户ID</span></span></span><br><span class="line"><span class="class"><span class="comment">  "034545104X";   书籍编号</span></span></span><br><span class="line"><span class="class"><span class="comment">  "0"             用户评分</span></span></span><br><span class="line"><span class="class"><span class="comment">* */</span></span></span><br><span class="line"><span class="class"><span class="title">case</span> <span class="title">class</span> <span class="title">Rating</span>(<span class="params">userId: <span class="type">Int</span>, bookId: <span class="type">Int</span>, score: <span class="type">Int</span></span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="comment">/*</span></span></span><br><span class="line"><span class="class"><span class="comment">* MongoDB连接配置</span></span></span><br><span class="line"><span class="class"><span class="comment">* */</span></span></span><br><span class="line"><span class="class"><span class="title">case</span> <span class="title">class</span> <span class="title">MongoConfig</span>(<span class="params">uri: <span class="type">String</span>, db: <span class="type">String</span></span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">object</span> <span class="title">Dataloader</span> </span>{</span><br><span class="line"></span><br><span class="line">  <span class="comment">//定义源文件地址</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">BOOK_DATA_PATH</span> = <span class="string">"F:\\BookRecSys\\book-recommender\\Dataloader\\src\\main\\resources\\BX-Books.csv"</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">RATEING_DATA_PATH</span> = <span class="string">"F:\\BookRecSys\\book-recommender\\Dataloader\\src\\main\\resources\\BX-Book-Ratings.csv"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//定义表名</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MONGODB_BOOK_COLLECTION</span> = <span class="string">"Book"</span></span><br><span class="line">  <span class="keyword">val</span> <span class="type">MONGODB_RATING_COLLECTION</span> = <span class="string">"Rating"</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = {</span><br><span class="line">    <span class="keyword">val</span> config = <span class="type">Map</span>(</span><br><span class="line">      <span class="string">"spark.cores"</span> -&gt; <span class="string">"local[*]"</span>,</span><br><span class="line">      <span class="string">"mongo.uri"</span> -&gt; <span class="string">"mongodb://192.168.2.88:27017/recommender"</span>,</span><br><span class="line">      <span class="string">"mongo.db"</span> -&gt; <span class="string">"recommender"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个sparkConfig</span></span><br><span class="line">    <span class="keyword">val</span> sparkConf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(config(<span class="string">"spark.cores"</span>)).setAppName(<span class="string">"DataLoader"</span>)</span><br><span class="line">    <span class="keyword">val</span> spark = <span class="type">SparkSession</span>.builder().config(sparkConf).getOrCreate()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> spark.implicits._</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载数据</span></span><br><span class="line">    <span class="keyword">val</span> bookRDD = spark.sparkContext.textFile(<span class="type">BOOK_DATA_PATH</span>)</span><br><span class="line">    <span class="keyword">val</span> bookDF = bookRDD.map(item =&gt; {</span><br><span class="line">      <span class="keyword">val</span> attr = item.split(<span class="string">"\\;"</span>)</span><br><span class="line"></span><br><span class="line">      <span class="type">Book</span>(</span><br><span class="line">        bookIdToInt(attr(<span class="number">0</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim()),</span><br><span class="line">        attr(<span class="number">1</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim(),</span><br><span class="line">        attr(<span class="number">2</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim(),</span><br><span class="line">        attr(<span class="number">3</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim(),</span><br><span class="line">        attr(<span class="number">4</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim(),</span><br><span class="line">        attr(<span class="number">7</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim()</span><br><span class="line">      )</span><br><span class="line">    }).toDF()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> ratingRDD = spark.sparkContext.textFile(<span class="type">RATEING_DATA_PATH</span>)</span><br><span class="line">    <span class="keyword">val</span> ratingDF = ratingRDD.map(item =&gt; {</span><br><span class="line">      <span class="keyword">val</span> attr = item.split(<span class="string">"\\;"</span>)</span><br><span class="line"></span><br><span class="line">      <span class="type">Rating</span>(</span><br><span class="line">        attr(<span class="number">0</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim().toInt,</span><br><span class="line">        bookIdToInt(attr(<span class="number">1</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim()),</span><br><span class="line">        attr(<span class="number">2</span>).replace(<span class="string">"\""</span>, <span class="string">""</span>).trim().toInt</span><br><span class="line">      )</span><br><span class="line">    }).toDF()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">implicit</span> <span class="keyword">val</span> mongoConfig = <span class="type">MongoConfig</span>(config(<span class="string">"mongo.uri"</span>), config(<span class="string">"mongo.db"</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    storeDataInMongoDB(bookDF, ratingDF)</span><br><span class="line"></span><br><span class="line">    spark.stop()</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">storeDataInMongoDB</span></span>(bookDF: <span class="type">DataFrame</span>, ratingDF: <span class="type">DataFrame</span>)(<span class="keyword">implicit</span> mongoConfig: <span class="type">MongoConfig</span>): <span class="type">Unit</span> = {</span><br><span class="line">    <span class="keyword">val</span> mongoClient = <span class="type">MongoClient</span>(<span class="type">MongoClientURI</span>(mongoConfig.uri))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> bookCollection = mongoClient(mongoConfig.db)(<span class="type">MONGODB_BOOK_COLLECTION</span>)</span><br><span class="line">    <span class="keyword">val</span> ratingCollection = mongoClient(mongoConfig.db)(<span class="type">MONGODB_RATING_COLLECTION</span>)</span><br><span class="line"></span><br><span class="line">    bookCollection.dropCollection()</span><br><span class="line">    ratingCollection.dropCollection()</span><br><span class="line"></span><br><span class="line">    bookDF.write</span><br><span class="line">      .option(<span class="string">"uri"</span>, mongoConfig.uri)</span><br><span class="line">      .option(<span class="string">"collection"</span>, <span class="type">MONGODB_BOOK_COLLECTION</span>)</span><br><span class="line">      .mode(<span class="string">"overwrite"</span>)</span><br><span class="line">      .format(<span class="string">"com.mongodb.spark.sql"</span>)</span><br><span class="line">      .save()</span><br><span class="line">    ratingDF.write</span><br><span class="line">      .option(<span class="string">"uri"</span>, mongoConfig.uri)</span><br><span class="line">      .option(<span class="string">"collection"</span>, <span class="type">MONGODB_RATING_COLLECTION</span>)</span><br><span class="line">      .mode(<span class="string">"overwrite"</span>)</span><br><span class="line">      .format(<span class="string">"com.mongodb.spark.sql"</span>)</span><br><span class="line">      .save()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    bookCollection.createIndex(<span class="type">MongoDBObject</span>(<span class="string">"bookId"</span> -&gt; <span class="number">1</span>))</span><br><span class="line">    ratingCollection.createIndex(<span class="type">MongoDBObject</span>(<span class="string">"bookId"</span> -&gt; <span class="number">1</span>))</span><br><span class="line">    ratingCollection.createIndex(<span class="type">MongoDBObject</span>(<span class="string">"userId"</span> -&gt; <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    mongoClient.close()</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">//源数据集中的bookId无法直接转化为Int，这里缩短长度并简单处理</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">bookIdToInt</span></span>(bookId: <span class="type">String</span>): <span class="type">Int</span> = {</span><br><span class="line">    <span class="keyword">var</span> str: <span class="type">Array</span>[<span class="type">Char</span>] = bookId.toCharArray()</span><br><span class="line">    <span class="keyword">var</span> res = <span class="string">""</span></span><br><span class="line">    <span class="keyword">if</span> (str(<span class="number">0</span>).toInt &gt; <span class="number">1</span>) {</span><br><span class="line">      res += '<span class="number">1</span>'</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (str.length &gt;= <span class="number">10</span>) {</span><br><span class="line">      <span class="keyword">for</span> (i &lt;- <span class="number">1</span> until <span class="number">10</span>) {</span><br><span class="line">        <span class="keyword">if</span> (!isIntByRegex(str(i))) {</span><br><span class="line">          str(i) = '<span class="number">1</span>'</span><br><span class="line">        }</span><br><span class="line">        res += str(i)</span><br><span class="line">      }</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">for</span> (i &lt;- <span class="number">0</span> until (str.length)) {</span><br><span class="line">        <span class="keyword">if</span> (!isIntByRegex(str(i))) {</span><br><span class="line">          str(i) = '<span class="number">1</span>'</span><br><span class="line">        }</span><br><span class="line">        res += str(i)</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">var</span> resBookId = res.trim.toInt</span><br><span class="line">    resBookId</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">isIntByRegex</span></span>(s: <span class="type">Char</span>) = {</span><br><span class="line">    <span class="keyword">val</span> pattern = <span class="string">""</span><span class="string">"^(\d+)$"</span><span class="string">""</span>.r</span><br><span class="line">    s <span class="keyword">match</span> {</span><br><span class="line">      <span class="keyword">case</span> pattern(_*) =&gt; <span class="literal">true</span></span><br><span class="line">      <span class="keyword">case</span> _ =&gt; <span class="literal">false</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>最后展示工程结构与运行效果：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210313102115618.png" alt="image-20210313102115618"></p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210313102204087.png" alt="image-20210313102204087"></p><ol><li>此模块遇见的问题参考我记录的<code>一些问题</code>文档中<code>2021.3.13</code></li><li>结束！</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Dataloader&quot;&gt;&lt;a href=&quot;#Dataloader&quot; class=&quot;headerlink&quot; title=&quot;Dataloader&quot;&gt;&lt;/a&gt;Dataloader&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;此模块的前置条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本地</summary>
      
    
    
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/categories/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="大数据" scheme="https://wanfengyueluo.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>基于大数据的图书推荐系统系统（二）——软件安装</title>
    <link href="https://wanfengyueluo.github.io/2021/12/06/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-tong-er-ruan-jian-an-zhuang/"/>
    <id>https://wanfengyueluo.github.io/2021/12/06/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-tong-er-ruan-jian-an-zhuang/</id>
    <published>2021-12-06T13:14:21.000Z</published>
    <updated>2022-04-18T12:58:29.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本软件安装"><a href="#基本软件安装" class="headerlink" title="基本软件安装"></a>基本软件安装</h1><h2 id="1-安装MongoDB"><a href="#1-安装MongoDB" class="headerlink" title="1.安装MongoDB"></a>1.安装MongoDB</h2><blockquote><p>参考菜鸟教程：<a href="https://www.runoob.com/mongodb/mongodb-linux-install.html">Linux平台安装MongoDB</a></p><p>MongoDB下载网址：<a href="https://www.mongodb.com/try/download/community">https://www.mongodb.com/try/download/community</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310194520446.png" alt="image-20210310194520446"></p><p>复制后的链接为：<a href="https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-4.2.13-rc2.tgz">https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-4.2.13-rc2.tgz</a></p><p>具体操作如下：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-4.2.13-rc2.tgz</span><br><span class="line">tar -zxvf mongodb-linux-x86_64-rhel62-4.2.13-rc2.tgz </span><br><span class="line">mv mongodb-linux-x86_64-rhel62-4.2.13-rc2 mongodb</span><br><span class="line">cd mongodb</span><br><span class="line">mkdir data</span><br><span class="line">cd data</span><br><span class="line">mkdir db</span><br><span class="line">mkdir logs</span><br><span class="line">cd logs</span><br><span class="line">touch mongodb.log</span><br><span class="line">cd ..</span><br><span class="line">touch mongodb.conf</span><br><span class="line">vim mongodb.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#####################################</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">端口号port = 27017</span></span><br><span class="line"><span class="meta">#</span><span class="bash">数据目录</span></span><br><span class="line">dbpath = /usr/local/mongodb/data/db</span><br><span class="line"><span class="meta">#</span><span class="bash">日志目录</span></span><br><span class="line">logpath = /usr/local/mongodb/data/logs/mongodb.log</span><br><span class="line"><span class="meta">#</span><span class="bash">设置后台运行</span></span><br><span class="line">fork = true</span><br><span class="line"><span class="meta">#</span><span class="bash">日志输出方式</span></span><br><span class="line">logappend = true</span><br><span class="line"><span class="meta">#</span><span class="bash">开启认证</span></span><br><span class="line"><span class="meta">#</span><span class="bash">auth = <span class="literal">true</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">用于远程连结</span></span><br><span class="line">bind_ip = 0.0.0.0</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################</span></span></span><br><span class="line">sudo /usr/local/mongodb/bin/mongod -config /usr/local/mongodb/data/mongodb.conf</span><br><span class="line"></span><br><span class="line">/usr/local/mongodb/bin/mongo</span><br><span class="line"></span><br><span class="line">sudo /usr/local/mongodb/bin/mongod -shutdown -config /usr/local/mongodb/data/mongodb.conf</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310204740834.png" alt="image-20210310204740834"></p><h2 id="2-卸载系统自带JDK"><a href="#2-卸载系统自带JDK" class="headerlink" title="2.卸载系统自带JDK"></a>2.卸载系统自带JDK</h2><p>因为安装的CentOS 6.8自带的JDK版本为1.7，而Spark在2.2版本之后不再支持JDK1.7，所以需要重新安装JDK1.8</p><h3 id="1-卸载JDK1-7"><a href="#1-卸载JDK1-7" class="headerlink" title="1.卸载JDK1.7"></a>1.卸载JDK1.7</h3><p>输入命令<code>yum list installed | grep java</code>就可以查看系统中的JDK，如图</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210312201952060.png" alt="image-20210312201952060"></p><p>卸载<code>yum -y remove java-1.6.0-openjdk.x86_64</code>,<code>yum -y remove java-1.7.0-openjdk.x86_64</code></p><p>完成后，输入命令<code>java -version</code>会发现JDK已经完全卸载，接下来安装JDK1.8</p><h3 id="2-安装JDK1-8"><a href="#2-安装JDK1-8" class="headerlink" title="2.安装JDK1.8"></a>2.安装JDK1.8</h3><p>1.首先需要在Oracle的官网下载JDK1.8的安装包（官网下载需要注册账号），这里我本地有JDK1.8的包，直接上传到虚拟机中进行安装，上传过程略过，安装包位置在<code>/usr/local/java</code></p><p>2.解压</p><p><code>tar -zxvf jdk-8u251-linux-x64.tar.gz</code></p><p>3.重命名</p><p><code>mv jdk1.8.0_251/ jdk</code></p><p>4.配置环境变量</p><p><code>vim /etc/profile</code></p><p>5.在文件末尾添加如下内容</p><figure class="highlight profile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/java/jdk</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></tbody></table></figure><p>6.保存退出后，使配置生效</p><p><code>source /etc/profile</code></p><p>7.再次输入<code>java -version</code>会出现相应的JDK版本信息，JDK安装完成！</p><h2 id="3-安装Spark"><a href="#3-安装Spark" class="headerlink" title="3.安装Spark"></a>3.安装Spark</h2><p>Spark的下载官网：<a href="https://spark.apache.org/downloads.html">https://spark.apache.org/downloads.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210312193903621.png" alt="image-20210312193903621"></p><p>1.选择相应的版本后点击紫色箭头会出现清华镜像的下载地址，复制链接地址在虚拟机中通过wget下载，具体操作如下：</p><blockquote><p>注意：这里我开始选择2.4.7版本的Spark，在运行程序时会与原视频教程所给出依赖的版本不一致，为简单起见，选择与原视频教程相同的Spark版本，即Spark2.1.1</p><p>下载地址为：<a href="https://archive.apache.org/dist/spark/spark-2.1.1/spark-2.1.1-bin-hadoop2.7.tgz">https://archive.apache.org/dist/spark/spark-2.1.1/spark-2.1.1-bin-hadoop2.7.tgz</a></p></blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载Spark</span></span><br><span class="line">wget https://archive.apache.org/dist/spark/spark-2.1.1/spark-2.1.1-bin-hadoop2.7.tgz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar -zxvf spark-2.1.1-bin-hadoop2.7.tgz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重命名</span></span><br><span class="line">mv spark-2.1.1-bin-hadoop2.7 spark</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入spark目录</span></span><br><span class="line">cd spark</span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制slave配置文件</span></span><br><span class="line"> cp ./conf/slaves.template ./conf/slaves</span><br><span class="line"><span class="meta"> #</span><span class="bash"> 编辑slaves文件，在文件末尾添加本机主机名</span></span><br><span class="line"> vim ./conf/slaves</span><br><span class="line"> -------</span><br><span class="line"> localhost #原文件内容，将这个覆盖为自己的主机名</span><br><span class="line"> book #主机名</span><br><span class="line"> -------</span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制Spark-Env文件</span></span><br><span class="line">cp ./conf/spark-env.sh.template ./conf/spark-env.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 编辑Spark-Env文件,添加spark master的主机名和端口</span></span><br><span class="line">vim ./conf/spark-env.sh</span><br><span class="line">-------</span><br><span class="line">SPARK_MASTER_HOST=book       #添加spark master的主机名</span><br><span class="line">SPARK_MASTER_PORT=7077       #添加spark master的端口号</span><br><span class="line">JAVA_HOME=/usr/local/java/jdk  #这里我开始没有添加会报错，请注意</span><br><span class="line">-------</span><br></pre></td></tr></tbody></table></figure><p>2.上述操作完成后，启动Spark：</p><p><code>./sbin/start-all.sh</code></p><blockquote><p>启动时会让输入root账户密码</p></blockquote><p>3.此时访问<code>http://192.168.2.88:8080</code></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210312204119546.png" alt="image-20210312204119546"></p><p>4.Spark关闭命令</p><p><code>./sbin/stop-all.sh</code></p><p>5.Spark安装完成！</p><h2 id="4-安装Redis"><a href="#4-安装Redis" class="headerlink" title="4.安装Redis"></a>4.安装Redis</h2><p>1.下载Redis安装包</p><p><code>wget http://download.redis.io/releases/redis-4.0.2.tar.gz</code></p><p>2.解压</p><p><code>tar -zxvf redis-4.0.2.tar.gz</code></p><p>3.重命名</p><p><code>mv redis-4.0.2 redis</code></p><p>4.进入Redis源码目录</p><p><code>cd redis</code></p><p>5.安装编译软件GCC</p><p><code>yum install -y gcc</code></p><blockquote><p>如果这里安装失败，出现yum的错误，可参见问题文档部分的说明</p></blockquote><p>6.<code>make</code></p><p>7.<code>cd src</code></p><p>8.<code>make install</code></p><p>9.将redis根目录下的<code>redis.conf</code>复制到<code>/etc/</code>下</p><p>10.<code>vim /etc/redis.conf</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">daemonize yes</span><br><span class="line">bind 0.0.0.0</span><br></pre></td></tr></tbody></table></figure><p>11.运行redis，在<code>/redis/src</code>目录下</p><p><code>redis-server /etc/redis.conf</code></p><p>12.进入redis</p><p><code>redis-cli</code></p><p>13.停止redis</p><p><code>redis-cli shutdown</code></p><p>14.完成</p><h2 id="5-安装Zookeeper"><a href="#5-安装Zookeeper" class="headerlink" title="5.安装Zookeeper"></a>5.安装Zookeeper</h2><blockquote><p>官网下载地址：<a href="http://archive.apache.org/dist/zookeeper/zookeeper-3.4.10/">http://archive.apache.org/dist/zookeeper/zookeeper-3.4.10/</a></p></blockquote><ol><li><p>下载Zookeeper安装包</p><p><code>wget http://archive.apache.org/dist/zookeeper/zookeeper-3.4.10/zookeeper-3.4.10.tar.gz</code></p></li><li><p>解压</p><p><code>tar -zxvf zookeeper-3.4.10.tar.gz</code></p></li><li><p>重命名</p><p><code>mv zookeeper-3.4.10 zookeeper</code></p></li><li><p>进入Zookeeper根目录并创建data数据目录</p><p><code>cd zookeeper</code></p><p><code>mkdir data</code></p></li><li><p>复制Zookeeper配置文件</p><p><code>cp ./conf/zoo_sample.cfg ./conf/zoo.cfg</code></p></li><li><p>修改Zookeeper配置文件</p><p><code>vim ./conf/zoo.cfg</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#将dataDIr修改为刚刚创建的data目录路径</span><br><span class="line">dataDir=/usr/local/zookeeper/data</span><br></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>启动Zookeeper服务</p><p><code>./bin/zkServer.sh start</code></p></li><li><p>查看Zookeeper服务</p><p><code>./bin/zkServer.sh status</code></p></li><li><p>停止Zookeeper服务</p><p><code>./bin/zkServer.sh stop</code></p></li></ol><h2 id="6-安装Kafka"><a href="#6-安装Kafka" class="headerlink" title="6.安装Kafka"></a>6.安装Kafka</h2><blockquote><p>官网下载地址：<a href="http://kafka.apache.org/downloads.html">http://kafka.apache.org/downloads.html</a></p></blockquote><ol><li><p>下载Kafka安装包</p><p><code>wget https://archive.apache.org/dist/kafka/0.10.2.1/kafka_2.12-0.10.2.1.tgz</code></p></li><li><p>解压</p><p><code>tar -zxvf kafka_2.12-0.10.2.1.tgz</code></p></li><li><p>重命名</p><p><code>mv kafka_2.12-0.10.2.1 kafka</code></p></li><li><p>进入Kafka根目录并修改配置文件</p><p><code>cd kafka</code></p><p><code>vim ./config/server.properties</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">添加如下内容</span></span><br><span class="line">host.name=book</span><br><span class="line">port=9092</span><br><span class="line">zookeeper.connect=book:2181</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动Kafka服务</p><blockquote><p>注意！启动Kafka之前需要启动Zookeeper服务</p></blockquote><p><code>./bin/kafka-server-start.sh -daemon ./config/server.properties</code></p></li><li><p>关闭Kafka服务</p><p><code>./bin/kafka-server-stop.sh</code></p></li></ol><h2 id="7-安装Flume"><a href="#7-安装Flume" class="headerlink" title="7.安装Flume"></a>7.安装Flume</h2><blockquote><p>官网下载地址：<a href="http://archive.apache.org/dist/flume/1.8.0/">http://archive.apache.org/dist/flume/1.8.0/</a></p></blockquote><ol><li><p>下载Flume安装包</p><p><code>wget http://archive.apache.org/dist/flume/1.8.0/apache-flume-1.8.0-bin.tar.gz</code></p></li><li><p>解压</p><p><code>tar -zxvf apache-flume-1.8.0-bin.tar.gz</code></p></li><li><p>重命名</p><p><code>mv apache-flume-1.8.0-bin flume</code></p></li><li><p>等待系统部署</p></li></ol><h2 id="8-安装Node"><a href="#8-安装Node" class="headerlink" title="8.安装Node"></a>8.安装Node</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本软件安装&quot;&gt;&lt;a href=&quot;#基本软件安装&quot; class=&quot;headerlink&quot; title=&quot;基本软件安装&quot;&gt;&lt;/a&gt;基本软件安装&lt;/h1&gt;&lt;h2 id=&quot;1-安装MongoDB&quot;&gt;&lt;a href=&quot;#1-安装MongoDB&quot; class=&quot;header</summary>
      
    
    
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/categories/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="大数据" scheme="https://wanfengyueluo.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer35-复杂链表的复制</title>
    <link href="https://wanfengyueluo.github.io/2021/05/25/jian-zhi-offer35-fu-za-lian-biao-de-fu-zhi/"/>
    <id>https://wanfengyueluo.github.io/2021/05/25/jian-zhi-offer35-fu-za-lian-biao-de-fu-zhi/</id>
    <published>2021-05-25T09:56:53.000Z</published>
    <updated>2022-04-18T12:58:29.612Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>题目描述：</p><p>请实现 copyRandomList 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 next 指针指向下一个节点，还有一个 random 指针指向链表中的任意节点或者 null。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Definition for a Node.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    Node next;</span><br><span class="line">    Node random;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.val = val;</span><br><span class="line">        <span class="keyword">this</span>.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.random = <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><span class="github-emoji"><span>🤔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>思路：</p><p>思路一：</p><blockquote><p>思路参考 <a href="https://www.algomooc.com/354.html">吴师兄的图解剑指 Offer 结构化专栏</a></p></blockquote><p>利用哈希表，第一次遍历原链表，通过哈希表将每个节点对应的新节点的位置进行存储，此时新复制的节点只包含val而不包含next和random指针。第二次遍历原链表，从原链表中取出每个新节点所对应的next和random指针。</p><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">copyRandomList</span><span class="params">(Node head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    Map&lt;Node, Node&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    Node cur = head;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        map.put(cur, <span class="keyword">new</span> Node(cur.val));</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    }</span><br><span class="line">    cur = head;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        map.get(cur).next = map.get(cur.next); <span class="comment">//这里map.get(cur.next)就对应新复制的节点。</span></span><br><span class="line">        map.get(cur).random = map.get(cur.random);</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> map.get(head);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>思路二：</p><blockquote><p>思路参考 LeetCode 题解中K神的题解</p></blockquote><p>利用辅助链表，即在遍历原链表时，将每个节点进行复制，然后在进行拆分，如<code>1-&gt;2-&gt;3-&gt;null</code>==&gt;<code>1-&gt;1-&gt;2-&gt;2-&gt;3-&gt;3-&gt;null</code></p><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">copyRandomList</span><span class="params">(Node head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    Node cur = head;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        Node node = <span class="keyword">new</span> Node(cur.val);</span><br><span class="line">        node.next = cur.next;</span><br><span class="line">        cur.next = node;</span><br><span class="line">        cur = node.next;</span><br><span class="line">    }</span><br><span class="line">    cur = head;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">if</span> (cur.random != <span class="keyword">null</span>) {</span><br><span class="line">            cur.next.random = cur.random.next;</span><br><span class="line">        }</span><br><span class="line">        cur = cur.next.next;</span><br><span class="line">    }</span><br><span class="line">    cur = head.next;</span><br><span class="line">    Node pre = head;</span><br><span class="line">    Node res = head.next;</span><br><span class="line">    <span class="keyword">while</span> (cur.next != <span class="keyword">null</span>) {</span><br><span class="line">        pre.next = pre.next.next;</span><br><span class="line">        cur.next = cur.next.next;</span><br><span class="line">        pre = pre.next;</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    }</span><br><span class="line">    pre.next = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>先复制节点，然后找到节点对应的random指针，最后将整个链表拆分</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8&quot; aria-hidden=</summary>
      
    
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
    <category term="LeetCode" scheme="https://wanfengyueluo.github.io/tags/LeetCode/"/>
    
    <category term="链表" scheme="https://wanfengyueluo.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
    <category term="哈希表" scheme="https://wanfengyueluo.github.io/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer24-反转链表</title>
    <link href="https://wanfengyueluo.github.io/2021/05/24/jian-zhi-offer24-fan-zhuan-lian-biao/"/>
    <id>https://wanfengyueluo.github.io/2021/05/24/jian-zhi-offer24-fan-zhuan-lian-biao/</id>
    <published>2021-05-24T01:47:30.000Z</published>
    <updated>2022-04-18T12:58:29.611Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>题目描述：</p><p>定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。</p><p><span class="github-emoji"><span>🤔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>思路：</p><p>思路一：</p><blockquote><p>思路参考 <a href="https://www.algomooc.com/347.html">吴师兄的图解剑指 Offer 结构化专栏</a></p></blockquote><p>使用三个指针，分别为 pre、cur、next，其中 pre 初始为 null，也是最终返回的链表头节点，cur 指向当前链表的头节点，next 为 cur 节点的下一个节点，遍历 cur 指针直至为 null，将 cur 的下一指针进行反转指向 pre ，然后将三个指针依次向后移动，最终返回 pre。</p><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    ListNode pre = <span class="keyword">null</span>;</span><br><span class="line">    ListNode cur = head;</span><br><span class="line">    <span class="keyword">if</span> (cur.next == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    }</span><br><span class="line">    ListNode next = cur.next;</span><br><span class="line">    <span class="keyword">while</span> (next != <span class="keyword">null</span>) {</span><br><span class="line">        cur.next = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = next;</span><br><span class="line">        next = next.next;</span><br><span class="line">    }</span><br><span class="line">    cur.next = pre;</span><br><span class="line">    pre = cur;</span><br><span class="line">    <span class="keyword">return</span> pre;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码写法二：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    ListNode pre = <span class="keyword">null</span>;</span><br><span class="line">    ListNode cur = head;</span><br><span class="line">    <span class="keyword">if</span> (cur.next == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) {</span><br><span class="line">        ListNode next = cur.next;</span><br><span class="line">        cur.next = pre;</span><br><span class="line">        pre = cur;</span><br><span class="line">        cur = next;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> pre;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码写法三:</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    ListNode q = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">while</span>(head!=<span class="keyword">null</span>){</span><br><span class="line">        ListNode p = head;</span><br><span class="line">        head = head.next;</span><br><span class="line">        p.next = q;</span><br><span class="line">        q=p;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> q;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>LeetCode 上有关于递归的解法，需要继续学习</p></blockquote><p><span class="github-emoji"><span>🤔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>思路二：</p><blockquote><p>思路参考 LeetCode 题解</p></blockquote><p>通过递归，每次返回反转的链表头节点，反转步骤为</p><p><code>pre.next.next = pre;</code></p><p><code>pre.next = null;</code></p><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    }</span><br><span class="line">    ListNode newHead = reverseList(head.next);</span><br><span class="line">    head.next.next = head;</span><br><span class="line">    head.next = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">return</span> newHead;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8&quot; aria-hidden=</summary>
      
    
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
    <category term="LeetCode" scheme="https://wanfengyueluo.github.io/tags/LeetCode/"/>
    
    <category term="链表" scheme="https://wanfengyueluo.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
    <category term="递归" scheme="https://wanfengyueluo.github.io/tags/%E9%80%92%E5%BD%92/"/>
    
    <category term="双指针" scheme="https://wanfengyueluo.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer22-链表中倒数第K个节点</title>
    <link href="https://wanfengyueluo.github.io/2021/05/23/jian-zhi-offer22-lian-biao-zhong-dao-shu-di-k-ge-jie-dian/"/>
    <id>https://wanfengyueluo.github.io/2021/05/23/jian-zhi-offer22-lian-biao-zhong-dao-shu-di-k-ge-jie-dian/</id>
    <published>2021-05-23T10:42:26.000Z</published>
    <updated>2021-06-03T13:31:51.764Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>题目描述：</p><p>输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。</p><p><span class="github-emoji"><span>🤔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>思路：</p><p>思路一：</p><p>使用快慢两个指针，两个指针之间相差K个节点，当快指针指向链表尾端时，慢节点指向倒数第K个节点。</p><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">getKthFromEnd</span><span class="params">(ListNode head, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">    <span class="comment">//  快指针</span></span><br><span class="line">    ListNode fast = head;</span><br><span class="line">    <span class="comment">//  慢指针</span></span><br><span class="line">    ListNode slow = head;</span><br><span class="line">    <span class="keyword">while</span> (fast != <span class="keyword">null</span>) {</span><br><span class="line">        fast = fast.next;</span><br><span class="line">        <span class="keyword">if</span> (k != <span class="number">0</span>) {</span><br><span class="line">            k--;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> slow;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>快慢指针的命名：</p><p>快 former</p><p>慢 latter</p><p>另一种写法可以先通过 K 步 for 循环找到快指针的位置，再进行 while 循环。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8&quot; aria-hidden=</summary>
      
    
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
    <category term="LeetCode" scheme="https://wanfengyueluo.github.io/tags/LeetCode/"/>
    
    <category term="链表" scheme="https://wanfengyueluo.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
    <category term="双指针" scheme="https://wanfengyueluo.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer18-删除链表节点</title>
    <link href="https://wanfengyueluo.github.io/2021/05/22/jian-zhi-offer18-shan-chu-lian-biao-jie-dian/"/>
    <id>https://wanfengyueluo.github.io/2021/05/22/jian-zhi-offer18-shan-chu-lian-biao-jie-dian/</id>
    <published>2021-05-22T08:35:25.000Z</published>
    <updated>2021-06-03T13:31:51.764Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>题目描述：</p><p>给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。返回删除后的链表的头节点。</p><p><span class="github-emoji"><span>🤔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>思路：</p><p>思路：</p><p>用一个辅助指针对链表进行遍历，遇见待删除的元素时，将当前节点的<code>next</code>指针指向下下个节点。</p><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteNode</span><span class="params">(ListNode head, <span class="keyword">int</span> val)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span>(head.val==val) <span class="keyword">return</span> head.next;</span><br><span class="line">    ListNode p = head;</span><br><span class="line">    <span class="keyword">while</span>(p.next!=<span class="keyword">null</span>){</span><br><span class="line">        <span class="keyword">if</span>(p.next.val==val){</span><br><span class="line">            p.next = p.next.next;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        p = p.next;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意返回的是head而不是cur，因为cur指针相当于游标，相较于原head会有变化。</p><p>看别人的题解，会对节点进行判空操作。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8&quot; aria-hidden=</summary>
      
    
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
    <category term="LeetCode" scheme="https://wanfengyueluo.github.io/tags/LeetCode/"/>
    
    <category term="链表" scheme="https://wanfengyueluo.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer06-从尾到头打印链表</title>
    <link href="https://wanfengyueluo.github.io/2021/05/22/jian-zhi-offer06-cong-wei-dao-tou-da-yin-lian-biao/"/>
    <id>https://wanfengyueluo.github.io/2021/05/22/jian-zhi-offer06-cong-wei-dao-tou-da-yin-lian-biao/</id>
    <published>2021-05-22T08:34:39.000Z</published>
    <updated>2021-06-03T13:31:51.764Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>题目描述：</p><p>输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。</p><p><span class="github-emoji"><span>🤔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>思路：</p><p>思路一：</p><p>题意是对链表的倒序输出，自然会想到一种先入后出的数据结构——栈，将链表中的元素依次入栈，再出栈得出结果。</p><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] reversePrint(ListNode head) {</span><br><span class="line"><span class="comment">// 使用栈，依次出栈</span></span><br><span class="line">ListNode cur = head;</span><br><span class="line">Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (cur.next != <span class="keyword">null</span>) {</span><br><span class="line">stack.push(cur.val);</span><br><span class="line">cur = cur.next;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    * 如果在fori中有stack.size()，会因为pop()出栈操作而导致出循环的次数有变化</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line"><span class="keyword">int</span> len = stack.size();</span><br><span class="line"><span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) {</span><br><span class="line">res[i] = stack.pop();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>思路二：</p><p>可以通过方法调用的顺序，使用递归</p><p><span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] reversePrint(ListNode head) {</span><br><span class="line"><span class="comment">// 2.尝试递归</span></span><br><span class="line">ListNode cur = head;</span><br><span class="line">ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">reverse(cur, list);</span><br><span class="line"><span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[list.size()];</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> num : list) {</span><br><span class="line">res[index++] = num;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(ListNode head, ArrayList&lt;Integer&gt; list)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (head != <span class="keyword">null</span>) {</span><br><span class="line">reverse(head.next, list);</span><br><span class="line">list.add(head.val);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📄&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png?v8&quot; aria-hidden=</summary>
      
    
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
    <category term="剑指Offer" scheme="https://wanfengyueluo.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
    <category term="LeetCode" scheme="https://wanfengyueluo.github.io/tags/LeetCode/"/>
    
    <category term="链表" scheme="https://wanfengyueluo.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
    <category term="栈" scheme="https://wanfengyueluo.github.io/tags/%E6%A0%88/"/>
    
    <category term="递归" scheme="https://wanfengyueluo.github.io/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>基于大数据的图书推荐系统系列(一)——基础环境搭建</title>
    <link href="https://wanfengyueluo.github.io/2021/03/19/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-lie-yi-ji-chu-huan-jing-da-jian/"/>
    <id>https://wanfengyueluo.github.io/2021/03/19/ji-yu-da-shu-ju-de-tu-shu-tui-jian-xi-tong-xi-lie-yi-ji-chu-huan-jing-da-jian/</id>
    <published>2021-03-19T12:54:05.000Z</published>
    <updated>2022-04-18T12:58:29.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="虚拟机基础环境搭建"><a href="#虚拟机基础环境搭建" class="headerlink" title="虚拟机基础环境搭建"></a>虚拟机基础环境搭建</h1><h2 id="1-创建虚拟机"><a href="#1-创建虚拟机" class="headerlink" title="1.创建虚拟机"></a>1.创建虚拟机</h2><p>1.打开VMware，创建新的虚拟机</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192021650.png" alt="image-20210310192021650"></p><p>2.选择典型，下一步</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192109439.png" alt="image-20210310192109439"></p><p>3.选择稍后安装，下一步</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192137322.png" alt="image-20210310192137322"></p><p>4.选择系统版本，下一步</p><blockquote><p>我选择的系统版本是CentOS 6.8</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192212269.png" alt="image-20210310192212269"></p><p>5.填写虚拟机名称以及选择虚拟机存放的位置，下一步</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192256120.png" alt="image-20210310192256120"></p><p>6.选择虚拟机磁盘大小，我这里按照默认配置，下一步</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192328207.png" alt="image-20210310192328207"></p><p>7.点击自定义硬件</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192358456.png" alt="image-20210310192358456"></p><p>8.选择内存、处理器核数以及选择本地的系统镜像，网络我选择NAT，点击关闭即可完成配置</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192524928.png" alt="image-20210310192524928"></p><p>9.上一步点击关闭后就是下面的状态</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192602221.png" alt="image-20210310192602221"></p><p>10.然后开启此虚拟机，默认回车开始安装系统</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192841880.png" alt="image-20210310192715802"></p><p>11.是否测试系统镜像，我选择跳过测试直接开始安装</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192808906.png" alt="image-20210310192808906"></p><p>12.点击Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192841880.png" alt="image-20210310192841880"></p><p>13.选择英语，Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192911574.png" alt="image-20210310192937755"></p><p>14.选择英语，Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310192937755.png" alt="image-20210310192937755"></p><p>15.默认选择就行，Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310193009337.png" alt="image-20210310193009337"></p><p>16.选择Yes，清空数据，Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310193037559.png" alt="image-20210310193037559"></p><p>17.填写Hostname，Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310193118263.png" alt="image-20210310193118263"></p><p>18.选择时区Shanghai，Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310193145058.png" alt="image-20210310193145058"></p><p>19.设置root账户密码，太简单的会报警告，直接Use Anyway就行</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310193241553.png" alt="image-20210310193241553"></p><p>20.选择默认，Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310193324004.png" alt="image-20210310193324004"></p><p>21.Write changes to disk</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310193344324.png" alt="image-20210310193344324"></p><p>22.这里我图简单选择带有桌面的系统，Next</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310193440108.png" alt="image-20210310193440108"></p><p>23.此时系统开始安装</p><p>24.安装完成后需要重启</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310194720408.png" alt="image-20210310194720408"></p><p>25.重启后进入设置界面</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310194903761.png" alt="image-20210310194903761"></p><p>26.Agree，Forward</p><p>27.创建一个User，这里创建的非root用户在后面会用到，Forward</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310195024889.png" alt="image-20210310195024889"></p><p>28.选择时间同步</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310195121311.png" alt="image-20210310195121311"></p><p>29.Finish！</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310195137692.png" alt="image-20210310195137692"></p><p>30.选择Yes</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310195158504.png" alt="image-20210310195158504"></p><p>31.然后点击ok等待系统重启</p><blockquote><p>从这里开始我都是使用root账户进行登录操作，创建的非root账户后面在使用ES时会用到，暂时不管</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310195601454.png" alt="image-20210310195601454"></p><h2 id="2-虚拟机基础设置"><a href="#2-虚拟机基础设置" class="headerlink" title="2.虚拟机基础设置"></a>2.虚拟机基础设置</h2><h3 id="2-1网络"><a href="#2-1网络" class="headerlink" title="2.1网络"></a>2.1网络</h3><p>1.进入系统桌面后，右键打开Terminate，输入<code>ifconfig</code>发现并没有IP地址，并且桌面右上角的网络连接符号有红叉</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310195848591.png" alt="image-20210310195848591"></p><p>2.点击网络连接，点击system 0，然后在输入命令<code>ifconfig</code>就能看见有IP地址了</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310195941094.png" alt="image-20210310195941094"></p><p>3.此时的IP应该是动态IP，我习惯设置为静态IP，过程如下：输入命令<code>vim /etc/sysconfig/network-scripts/ifcfg-eth0</code>，系统默认设置如下图</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310200340565.png" alt="image-20210310200340565"></p><p>修改为：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310200627462.png" alt="image-20210310200627462"></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.2.88</span><br><span class="line">GATEWAY=192.168.2.1</span><br><span class="line">BROADCAST=192.168.2.255</span><br><span class="line">DNS1=8.8.8.8</span><br><span class="line">DNS2=114.114.114.114</span><br></pre></td></tr></tbody></table></figure><p>4.修改hosts：输入命令<code>vim /etc/hosts</code>，添加如下语句</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310200922105.png" alt="image-20210310200922105"></p><p>5.重启网络服务，分别输入如下命令</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service NetworkManager stop</span><br><span class="line">/etc/init.d/network restart</span><br></pre></td></tr></tbody></table></figure><p>6.关闭关机自启，输入如下命令</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig NetworkManager off</span><br></pre></td></tr></tbody></table></figure><h3 id="2-2配置防火墙"><a href="#2-2配置防火墙" class="headerlink" title="2.2配置防火墙"></a>2.2配置防火墙</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭</span></span><br><span class="line">service iptables stop</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭开机自启</span></span><br><span class="line">chkconfig iptables off</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看防火墙状态</span></span><br><span class="line">service iptables status</span><br></pre></td></tr></tbody></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310201529171.png" alt="image-20210310201529171"></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310201207061.png" alt="image-20210310201207061"></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20210310201301067.png" alt="image-20210310201301067"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;虚拟机基础环境搭建&quot;&gt;&lt;a href=&quot;#虚拟机基础环境搭建&quot; class=&quot;headerlink&quot; title=&quot;虚拟机基础环境搭建&quot;&gt;&lt;/a&gt;虚拟机基础环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-创建虚拟机&quot;&gt;&lt;a href=&quot;#1-创建虚拟机&quot; class=&quot;he</summary>
      
    
    
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/categories/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="大数据" scheme="https://wanfengyueluo.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="推荐系统" scheme="https://wanfengyueluo.github.io/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Nginx笔记</title>
    <link href="https://wanfengyueluo.github.io/2020/12/07/nginx-bi-ji/"/>
    <id>https://wanfengyueluo.github.io/2020/12/07/nginx-bi-ji/</id>
    <published>2020-12-07T11:35:36.000Z</published>
    <updated>2021-06-03T13:31:51.761Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/nginx.png" alt="image-20201207212019627"></p><h1 id="Nginx安装过程"><a href="#Nginx安装过程" class="headerlink" title="Nginx安装过程"></a>Nginx安装过程</h1><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>安装<code>gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</code></p><h2 id="下载Nginx"><a href="#下载Nginx" class="headerlink" title="下载Nginx"></a>下载Nginx</h2><p><code>wget -c https://nginx.org/download/nginx-1.12.1.tar.gz</code></p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p><code>tar -zxvf  nginx-1.12.0.tar.gz</code></p><p><code>cd nginx-1.12.1</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><code>./configure</code></p><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><p><code>make &amp;&amp; make install</code></p><h2 id="启动、停止Nginx"><a href="#启动、停止Nginx" class="headerlink" title="启动、停止Nginx"></a>启动、停止Nginx</h2><p><code>cd /usr/local/nginx/sbin</code></p><p><code>./nginx</code></p><p><code>./nginx -s stop</code></p><p><code>./nginx -s quit</code></p><p><code>./nginx -s reload</code></p><h2 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h2><p>在<code>rc.local</code>增加启动代码</p><p><code>vim /etc/rc.local</code></p><p>增加一行</p><p><code>/usr/lcoal/nginx/sbin/nginx</code></p><p>设置执行权限</p><p><code>chmod 755 rc.local</code></p><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p>默认配置文件：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events {</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http {</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">    #                  '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">    #                  '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server {</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / {</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html {</span><br><span class="line">            root   html;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ {</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #}</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ {</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #}</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache's document root</span><br><span class="line">        # concurs with nginx's one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht {</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #}</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server {</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / {</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    }</span><br><span class="line">    #}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server {</span><br><span class="line">    #    listen       443 ssl;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location / {</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    }</span><br><span class="line">    #}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>可以将<code>nginx.conf</code>配置文件分为三部分：</p><p><strong>第一部分：全局块</strong></p><p>从配置文件开始到<code>events</code>块之前的内容，主要设置一些影响nginx服务器整体运行的配置指令，主要包括配置运行Nginx服务器的用户（组）、允许生成的worker process数，进程PID存放路径、日志存放路径和类型以及配置文件的引入等。</p><p><strong>第二部分：events块</strong></p><p>events块涉及的指令主要影响Nginx服务器与用户的网络连接，常用的设置包括是否开启对多work process 下的网络连接进行序列化，是否允许同时接收多个网络连接，选取哪种事件驱动来处理连接请求，每个work process可以同时支持的最大连接数等。</p><p><strong>第三部：http块</strong></p><p>http块是Nginx服务器配置中最频繁的部分，代理、缓存和日志定义等绝大多数功能和第三方模块的配置都在这里。http块也可以包括http全局块、server块。</p><ul><li><p>http全局块，其指令包括文件引入、MIME-TYPE定义、日志自定义、连接超时时间、单链接请求数上限等  。</p></li><li><p>server块，这部分和虚拟主机有密切关系，虚拟主机从用户角度看，和一台独立的硬件主机是完全一样的，该技术的产生是为了节省互联网服务器硬件成本。  每个 http 块可以包括多个 server 块，而每个 server 块就相当于一个虚拟主机。  而每个 server 块也分为全局 server 块，以及可以同时包含多个 locaton 块。  </p><ul><li><p>全局server块</p><p>最常见的配置是本虚拟机主机的监听配置和本虚拟主机的名称或 IP 配置。  </p></li><li><p>location块</p><p>一个 server 块可以配置多个 location 块。这块的主要作用是基于 Nginx 服务器接收到的请求字符串（例如 server_name/uri-string），对虚拟主机名称（也可以是 IP 别名）之外的字符串（例如 前面的 /uri-string）进行匹配，对特定的请求进行处理。地址定向、数据缓存和应答控制等功能，还有许多第三方模块的配置也在这里进行。  </p></li></ul></li></ul><h2 id="配置实例"><a href="#配置实例" class="headerlink" title="配置实例"></a>配置实例</h2><p>效果：</p><p>使用Nginx反向代理，根据访问路径跳转到不同端口的服务中，nginx监听端口为9001，访问 <a href="http://127.0.0.1:9001/edu/">http://127.0.0.1:9001/edu/</a> 直接跳转到 127.0.0.1:8081，访问 <a href="http://127.0.0.1:9001/vod/">http://127.0.0.1:9001/vod/</a> 直接跳转到 127.0.0.1:8082  </p><p>配置：</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> {</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">9001</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ /edu/</span> {</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:8081;</span><br><span class="line">    }</span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ /vod/</span> {</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:8082;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>location用于匹配URL</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> [ = | <span class="regexp">~ |</span> <span class="regexp">~* |</span><span class="regexp"> ^~</span> ] uri {</span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>1、 = ：用于不含正则表达式的 uri 前，要求请求字符串与 uri 严格匹配，如果匹配 成功，就停止继续向下搜索并立即处理该请求。<br>2、 ~：用于表示 uri 包含正则表达式，并且区分大小写。<br>3、 ~<em>：用于表示 uri 包含正则表达式，并且不区分大小写。<br>4、 ^~：用于不含正则表达式的 uri 前，要求 Nginx 服务器找到标识 uri 和请求字 符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再使用 location 块中的正则 uri 和请求字符串做匹配。<br>注意：如果 uri 包含正则表达式，则必须要有 ~ 或者 ~</em> 标识。  </p></blockquote><p>参考配置：</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> {</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / {</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html {</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ {</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#}</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ {</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#}</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht {</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#}</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="attribute">upstream</span> test{</span><br><span class="line">    <span class="attribute">server</span> <span class="number">10.1.18.205:8080</span>;</span><br><span class="line">    <span class="comment">#server 10.1.18.70:8080;</span></span><br><span class="line">    <span class="comment">#server 10.1.18.71:8080;</span></span><br><span class="line">    <span class="comment">#server 10.1.18.86:8080;</span></span><br><span class="line">    <span class="comment">#server 10.1.18.77:8081;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> {</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">84</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line">    <span class="attribute">root</span>  /usr/local/webs/dbsiNewTest;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / {</span><br><span class="line">        <span class="comment">#  root  /usr/local/webs/dbsiNewTest;</span></span><br><span class="line">        <span class="attribute">index</span>  index.html;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Origin'</span> <span class="string">'*'</span>;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Credentials'</span> <span class="string">'true'</span>;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">'Access-Control-Allow-Methods'</span> <span class="string">'GET, POST, OPTIONS'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html =<span class="number">404</span>;</span><br><span class="line">    }</span><br><span class="line">      <span class="comment"># 所有静态请求都由nginx处理，存放目录为html</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .(gif|jpg|jpeg|png|bmp|swf|css|js)$</span> {</span><br><span class="line">        <span class="attribute">root</span>  /usr/local/webs/dbsiNewTest;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /DBSI_BI/ {</span><br><span class="line">       <span class="comment">#  rewrite ^/DBSI_BI/(.*)$ /DBSI_BI/$1 break;</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://test;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment"># location ^~ /DBSI_BI/ {</span></span><br><span class="line">        <span class="comment"># rewrite ^/DBSI_BI/(.*)$ /BI/$1 break;</span></span><br><span class="line">        <span class="comment"># proxy_pass http://10.1.18.205:8080;</span></span><br><span class="line">    <span class="comment">#  }</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /saiku_api/ {</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/saiku_api/(.*)$</span> /saiku/rest/saiku/<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://10.1.18.205:8080;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /Checking/ {</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/Checking/(.*)$</span> /409base/<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://10.1.18.205:8080;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /DataMining/ {</span><br><span class="line">        <span class="comment"># rewrite ^/DataMining/(.*)$ /DataMining/$1 break;</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://test;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /UserProfile/ {</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/UserProfile/(.*)$</span> /userprofile/<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://10.1.18.205:8080;</span><br><span class="line">    }</span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /Storyboard/ {</span><br><span class="line">            <span class="attribute">rewrite</span><span class="regexp"> ^/Storyboard/(.*)$</span> /storyboard/<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://10.1.18.205:8080;</span><br><span class="line">    }</span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html {</span><br><span class="line">        <span class="attribute">root</span>  /usr/local/webs/dbsiNewTest;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> {</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">8480</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 所有静态请求都由nginx处理，存放目录为html</span></span><br><span class="line">    <span class="comment">#  location ~ .(gif|jpg|jpeg|png|bmp|swf|css|js)$ {</span></span><br><span class="line">        <span class="comment">#  root  /usr/local/webs/dbsiNewTest;</span></span><br><span class="line">    <span class="comment"># }</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># location ^~ /DataMining/ {</span></span><br><span class="line">        <span class="comment"># rewrite ^/DataMining/(.*)$ /DataMining/$1 break;</span></span><br><span class="line">        <span class="comment"># proxy_pass http://10.1.18.205:8080;</span></span><br><span class="line">    <span class="comment"># }</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /Storyboard/ {</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/Storyboard/(.*)$</span> /storyboard/olapStoryBoard/<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://bi.io;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>Nginx配置详细解释</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#普通配置</span></span><br><span class="line"><span class="comment">#==性能配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行用户</span></span><br><span class="line"><span class="attribute">user</span> nobody;</span><br><span class="line"><span class="comment">#pid文件</span></span><br><span class="line"><span class="attribute">pid</span> logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Nginx基于事件的非阻塞多路复用模型（epoll或kquene）</span></span><br><span class="line"><span class="comment">#一个进程在短时间内可以响应大量请求，工作进程设置与cpu数相同，避免cpu在多个进程间切换增加开销</span></span><br><span class="line"><span class="comment">#==worker进程数，通常设置&lt;=CPU数量，auto为自动检测，一般设置最大8个即可，再大性能提升较小或不稳定</span></span><br><span class="line"><span class="attribute">worker_processes</span> auto;</span><br><span class="line"></span><br><span class="line"><span class="comment">#==将每个进程绑定到特定cpu上，避免进程在cpu间切换的开销</span></span><br><span class="line"><span class="attribute">worker_cpu_affinity</span> <span class="number">00000001</span> <span class="number">00000010</span> <span class="number">00000100</span> <span class="number">00001000</span> <span class="number">00010000</span> <span class="number">00100000</span> <span class="number">01000000</span> <span class="number">10000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#==worker进程打开最大文件数，可CPU*10000设置，或设置系统最大数量655350</span></span><br><span class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">102400</span>;</span><br><span class="line"><span class="comment">#全局错误日志</span></span><br><span class="line"><span class="attribute">error_log</span>  logs/error.log;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#events模块中包含nginx中所有处理连接的设置，并发响应能力的关键配置</span></span><br><span class="line"><span class="section">events</span> {</span><br><span class="line">    <span class="comment">#==每个进程同时打开的最大连接数（最大并发数）</span></span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">102400</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#==告诉nginx收到一个新链接通知后接受尽可能多的链接</span></span><br><span class="line">    <span class="comment">#multi_accept on;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#一般http 1.1协议下，浏览器默认使用两个并发链接</span></span><br><span class="line">    <span class="comment">#如果是反向代理，nginx需要和客户端保持连接，还需要和后端服务器保持连接</span></span><br><span class="line">    <span class="comment">#Http服务器时，设置max_client=worker_processes*worker_connections/2</span></span><br><span class="line">    <span class="comment">#反向代理时，设置max_client=worker_processes*worker_connections/4    </span></span><br><span class="line">    <span class="comment">#==最大可用客户端数</span></span><br><span class="line">    <span class="comment">#max_client </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#==使用非阻塞模型，设置复用客户端线程的轮训方法</span></span><br><span class="line">    <span class="attribute">use</span> <span class="literal">epoll</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#http模块控制着nginx http处理的所有核心特性</span></span><br><span class="line"><span class="section">http</span> {</span><br><span class="line">    <span class="comment">#打开或关闭错误页面中的nginx版本号等信息</span></span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#!server_tag on;</span></span><br><span class="line">    <span class="comment">#!server_info on;</span></span><br><span class="line">    <span class="comment">#==优化磁盘IO设置，指定nginx是否调用sendfile函数来输出文件，普通应用设为on，下载等磁盘IO高的应用，可设为off</span></span><br><span class="line">    <span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#缓存发送请求，启用如下两个配置，会在数据包达到一定大小后再发送数据</span></span><br><span class="line">    <span class="comment">#这样会减少网络通信次数，降低阻塞概率，但也会影响响应的及时性</span></span><br><span class="line">    <span class="comment">#比较适合于文件下载这类的大数据包通信场景</span></span><br><span class="line">    <span class="comment">#tcp_nopush on;</span></span><br><span class="line">    <span class="comment">#tcp_nodelay on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#==设置nginx是否存储访问日志，关闭这个可以让读取磁盘IO操作更快</span></span><br><span class="line">    <span class="attribute">access_log</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#设置nginx只记录严重错误，可减少IO压力</span></span><br><span class="line">    <span class="comment">#error_log logs/error.log crit;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#Http1.1支持长连接</span></span><br><span class="line">    <span class="comment">#降低每个链接的alive时间可在一定程度上提高响应连接数量</span></span><br><span class="line">    <span class="comment">#==给客户端分配keep-alive链接超时时间</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置用户保存各种key的共享内存的参数，5m指的是5兆</span></span><br><span class="line">    <span class="attribute">limit_conn_zone</span> <span class="variable">$binary_remote_addr</span> zone=addr:<span class="number">5m</span>;</span><br><span class="line">    <span class="comment">#为给定的key设置最大的连接数，这里的key是addr，设定的值是100，就是说允许每一个IP地址最多同时打开100个连接</span></span><br><span class="line">    <span class="attribute">limit_conn</span> addr <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#include指在当前文件中包含另一个文件内容</span></span><br><span class="line">    <span class="attribute">include</span> mime.types;</span><br><span class="line">    <span class="comment">#设置文件使用默认的mine-type</span></span><br><span class="line">    <span class="attribute">default_type</span> text/html;</span><br><span class="line">    <span class="comment">#设置默认字符集</span></span><br><span class="line">    <span class="attribute">charset</span> UTF-<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#==设置nginx采用gzip压缩的形式发送数据，减少发送数据量，但会增加请求处理时间及CPU处理时间，需要权衡</span></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#==加vary给代理服务器使用，针对有的浏览器支持压缩，有个不支持，根据客户端的HTTP头来判断是否需要压缩</span></span><br><span class="line">    <span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#nginx在压缩资源之前，先查找是否有预先gzip处理过的资源</span></span><br><span class="line">    <span class="comment">#!gzip_static on;</span></span><br><span class="line">    <span class="comment">#为指定的客户端禁用gzip功能</span></span><br><span class="line">    <span class="attribute">gzip_disable</span> <span class="string">"MSIE[1-6]\."</span>;</span><br><span class="line">    <span class="comment">#允许或禁止压缩基于请求和相应的响应流，any代表压缩所有请求</span></span><br><span class="line">    <span class="attribute">gzip_proxied</span> any;</span><br><span class="line">    <span class="comment">#==启用压缩的最少字节数，如果请求小于1024字节则不压缩，压缩过程会消耗系统资源</span></span><br><span class="line">    <span class="attribute">gzip_min_length</span> <span class="number">1024</span>;</span><br><span class="line">    <span class="comment">#==数据压缩等级，1-9之间，9最慢压缩比最大，压缩比越大对系统性能要求越高</span></span><br><span class="line">    <span class="attribute">gzip_comp_level</span> <span class="number">2</span>;</span><br><span class="line">    <span class="comment">#需要压缩的数据格式</span></span><br><span class="line">    <span class="attribute">gzip_types</span> text/plain text/css text/xml text/javascript  application/json application/x-javascript application/xml application/xml+rss; </span><br><span class="line"></span><br><span class="line">    <span class="comment">#静态文件缓存</span></span><br><span class="line">    <span class="comment">#==开启缓存的同时也指定了缓存文件的最大数量，20s如果文件没有被请求则删除缓存</span></span><br><span class="line">    <span class="attribute">open_file_cache</span> max=<span class="number">100000</span> inactive=<span class="number">20s</span>;</span><br><span class="line">    <span class="comment">#==多长时间检查一次缓存的有效期</span></span><br><span class="line">    <span class="attribute">open_file_cache_valid</span> <span class="number">30s</span>;</span><br><span class="line">    <span class="comment">#==有效期内缓存文件最小的访问次数，只有访问超过2次的才会被缓存</span></span><br><span class="line">    <span class="attribute">open_file_cache_min_uses</span> <span class="number">2</span>;</span><br><span class="line">    <span class="comment">#当搜索一个文件时是否缓存错误信息</span></span><br><span class="line">    <span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#==允许客户端请求的最大单文件字节数</span></span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">4m</span>;</span><br><span class="line">    <span class="comment">#==客户端请求头缓冲区大小</span></span><br><span class="line">    <span class="attribute">client_header_buffer_size</span> <span class="number">4k</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#是否启用对发送给客户端的URL进行修改</span></span><br><span class="line">    <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="comment">#==nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">    <span class="attribute">proxy_connect_timeout</span> <span class="number">60</span>;</span><br><span class="line">    <span class="comment">#==连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">    <span class="attribute">proxy_read_timeout</span> <span class="number">120</span>;</span><br><span class="line">    <span class="comment">#==后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">    <span class="attribute">proxy_send_timeout</span> <span class="number">20</span>;</span><br><span class="line">    <span class="comment">#==设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">    <span class="attribute">proxy_buffer_size</span> <span class="number">32k</span>;</span><br><span class="line">    <span class="comment">#==proxy_buffers缓冲区，网页平均在32k以下的设置</span></span><br><span class="line">    <span class="attribute">proxy_buffers</span> <span class="number">4</span> <span class="number">128k</span>;</span><br><span class="line">    <span class="comment">#==高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">    <span class="attribute">proxy_busy_buffers_size</span> <span class="number">256k</span>;</span><br><span class="line">    <span class="comment">#==设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line">    <span class="attribute">proxy_temp_file_write_size</span> <span class="number">256k</span>;</span><br><span class="line">    <span class="comment">#==1G内存缓冲空间，3天不用删除，最大磁盘缓冲空间2G</span></span><br><span class="line">    <span class="attribute">proxy_cache_path</span> /home/cache levels=<span class="number">1</span>:<span class="number">2</span> keys_zone=cache_one:<span class="number">1024m</span> inactive=<span class="number">3d</span> max_size=<span class="number">2g</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#设定负载均衡服务器列表</span></span><br><span class="line">    <span class="attribute">upstream</span> nginx.test.com{</span><br><span class="line">        <span class="comment">#后端服务器访问规则</span></span><br><span class="line">        <span class="comment">#ip_hash;</span></span><br><span class="line">        <span class="comment">#weight参数表示权重值，权值越高被分配到的几率越大</span></span><br><span class="line">        <span class="comment">#server 10.11.12.116:80 weight=5;</span></span><br><span class="line">        <span class="comment">#PC_Local</span></span><br><span class="line">        <span class="attribute">server</span> <span class="number">10.11.12.116:80</span>;</span><br><span class="line">        <span class="comment">#PC_Server</span></span><br><span class="line">        <span class="attribute">server</span> <span class="number">10.11.12.112:80</span>;</span><br><span class="line">        <span class="comment">#Notebook</span></span><br><span class="line">        <span class="comment">#server 10.11.12.106:80;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">#server代表虚拟主机，可以理解为站点（挂载多个站点，只需要配置多个server及upstream节点即可）</span></span><br><span class="line">    <span class="section">server</span> {</span><br><span class="line">        <span class="comment">#监听80端口</span></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="comment">#识别的域名，定义使用nginx.test.com访问</span></span><br><span class="line">        <span class="attribute">server_name</span> nginx.test.com;</span><br><span class="line">        <span class="comment">#设定本虚拟主机的访问日志</span></span><br><span class="line">        <span class="attribute">access_log</span> logs/nginx.test.com.access.log;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#一个域名下匹配多个URI的访问，使用location进行区分，后面紧跟着的/代表匹配规则</span></span><br><span class="line">        <span class="comment">#如动态资源访问和静态资源访问会分别指向不同的位置的应用场景</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># 基本语法规则：location [=|~|~*|^~] /uri/ {...} </span></span><br><span class="line">        <span class="comment"># = 开头表示精确匹配</span></span><br><span class="line">        <span class="comment"># ^~ 开头表示uri以某个常规字符串开头，匹配成功后不再进行正则匹配</span></span><br><span class="line">        <span class="comment"># ~ 开头表示区分大小写的正则匹配</span></span><br><span class="line">        <span class="comment"># ~* 开头表示不区分大小写的正则匹配</span></span><br><span class="line">        <span class="comment"># !~ 开头表示区分大小写的不匹配的正则</span></span><br><span class="line">        <span class="comment"># !~* 开头表示不区分大小写的不匹配的正则</span></span><br><span class="line">        <span class="comment"># / 通用匹配，任何请求都会被匹配到</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># 理解如下：</span></span><br><span class="line">        <span class="comment"># 有两种匹配模式：普通字符串匹配，正则匹配</span></span><br><span class="line">        <span class="comment"># 无开头引导字符或以=开头表示普通字符串匹配</span></span><br><span class="line">        <span class="comment"># 以~或~*开头表示正则匹配，~*表示不区分大小写</span></span><br><span class="line">        <span class="comment"># 【多个location时，先匹配普通字符串location，再匹配正则location】</span></span><br><span class="line">        <span class="comment"># 只识别URI部分，例如请求为“/test/1/abc.do?arg=xxx”</span></span><br><span class="line">        <span class="comment"># （1）先查找是否有=开头的精确匹配，即“location=/test/1/abc.do {...}”</span></span><br><span class="line">        <span class="comment"># （2）再查找普通匹配，以“最大前缀”为规则，如有以下两个location</span></span><br><span class="line">        <span class="comment">#    location /test/ {...}</span></span><br><span class="line">        <span class="comment">#    location /test/1/ {...}</span></span><br><span class="line">        <span class="comment">#    则匹配后一项</span></span><br><span class="line">        <span class="comment"># （3）匹配到一个普通location后，搜索并未结束，而是暂存当前结果，并继续进行正则搜索</span></span><br><span class="line">        <span class="comment"># （4）在所有正则location中找到第一个匹配项后，以此匹配项为最终结果</span></span><br><span class="line">        <span class="comment"># 【所以正则匹配项，匹配规则受定义前后顺序影响，但普通匹配不会】</span></span><br><span class="line">        <span class="comment"># （5）如果未找到正则匹配项，则以（3）中缓存的结果为最终结果</span></span><br><span class="line">        <span class="comment"># （6）如果一个匹配都没有，则返回404</span></span><br><span class="line">        <span class="comment"># location =/ {...}与location / {...}的差别</span></span><br><span class="line">        <span class="comment"># 前一个是精确匹配，只响应“/”的请求，所有“/xxx”形式的请求不会以“前缀匹配形式”匹配到它</span></span><br><span class="line">        <span class="comment"># 后一个正相反，所有请求必然都是以“/”开头，所以没有其他匹配结果时一定会执行到它</span></span><br><span class="line">        <span class="comment"># location ^~ / {...} ^~的意思是禁止正则匹配，表示匹配到此项后不再进行后续的正则搜索</span></span><br><span class="line">        <span class="comment"># 相当于普通匹配模式匹配成功后就以此结果为最终结果，停止进行后续的正则匹配</span></span><br><span class="line">        <span class="attribute">location</span> / {</span><br><span class="line">            <span class="comment">#定义服务器的默认网站根目录位置，可以写相对路径，也可以写绝对路径</span></span><br><span class="line">            <span class="attribute">root</span> html;</span><br><span class="line">            <span class="comment">#定义首页索引文件的名称</span></span><br><span class="line">            <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">            <span class="comment">#定义转发后端负载服务器组</span></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://nginx.test.com;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">#定义错误提示页面</span></span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">        <span class="attribute">location</span> = /50x.html {</span><br><span class="line">            <span class="attribute">root</span> html;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">#静态文件，nginx自己处理</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ ^/(images|javascript|js|css|flash|media|static)/</span>{</span><br><span class="line">            <span class="attribute">root</span> /var/www/virtual/htdocs;</span><br><span class="line">            <span class="comment">#过期时间1天</span></span><br><span class="line">            <span class="attribute">expires</span> <span class="number">1d</span>;</span><br><span class="line">            <span class="comment">#关闭媒体文件日志</span></span><br><span class="line">            <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">            <span class="attribute">log_not_found</span> <span class="literal">off</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">#设定查看Nginx状态的地址</span></span><br><span class="line">        <span class="attribute">location</span> /NginxStatus {</span><br><span class="line">            <span class="comment">#!stub_status on; #无此关键字</span></span><br><span class="line">            <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">            <span class="attribute">auth_basic</span> <span class="string">"NginxStatus"</span>;</span><br><span class="line">            <span class="attribute">auth_basic_user_file</span> conf/htpasswd;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">#禁止访问的文件.htxxx</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ /\.ht</span> {</span><br><span class="line">            <span class="comment">#deny all;禁止访问，返回403</span></span><br><span class="line">            <span class="attribute">deny</span> all;</span><br><span class="line">            <span class="comment">#allow all;允许访问</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">#网站较多的情况下ngxin又不会请求瓶颈可以考虑挂多个站点，并把虚拟主机配置单独放在一个文件内，引入进来</span></span><br><span class="line">    <span class="comment">#include website.conf;</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>参考文章：</p><p><a href="https://www.cnblogs.com/liujuncm5/p/6713784.html">https://www.cnblogs.com/liujuncm5/p/6713784.html</a></p><p><a href="https://www.cnblogs.com/taiyonghai/p/5610112.html">https://www.cnblogs.com/taiyonghai/p/5610112.html</a></p></blockquote>]]></content>
    
    
    <summary type="html">Nginx笔记</summary>
    
    
    
    <category term="Nginx" scheme="https://wanfengyueluo.github.io/categories/Nginx/"/>
    
    
    <category term="CentOS" scheme="https://wanfengyueluo.github.io/tags/CentOS/"/>
    
    <category term="Nginx" scheme="https://wanfengyueluo.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>踩坑记录之CentOS登录问题</title>
    <link href="https://wanfengyueluo.github.io/2020/12/03/cai-keng-ji-lu-zhi-centos-deng-lu-wen-ti/"/>
    <id>https://wanfengyueluo.github.io/2020/12/03/cai-keng-ji-lu-zhi-centos-deng-lu-wen-ti/</id>
    <published>2020-12-03T02:38:08.000Z</published>
    <updated>2021-06-03T13:31:51.774Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/note_cover1.png" alt="image-20201203104847731"></p><p>最近登录虚拟机，发现正确的用户和密码无法登录，出现如下图的问题提示：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201203105125584.png" alt="image-20201203105125584"></p><p>刚好前几天看《Linux就该这么学》这本书上有讲述如何重置root管理员密码的内容，索性尝试一下。</p><ol><li>重启系统</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201203105803864.png" alt="image-20201203105803864"></p><ol><li>在进入系统之前选中第一行，点击<code>e</code>进入该选项</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201203105826300.png" alt="image-20201203105826300"></p><ol><li>进入的编辑模式是这样的：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201203110226134.png" alt="image-20201203110226134"></p><ol><li>往下找，找到<code>linux16</code>这一行，在末尾<code>UTF-8</code>后面进行编辑，空格之后输入<code>rd.break</code>，换行的时候会自动加上换行符<code>\</code>，然后<code>Ctrl + X</code>运行该程序。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201203110336712.png" alt="image-20201203110336712"></p><ol><li>大概30秒后会进入下面的界面，即系统的紧急救援模式。依次输入以下命令，然后等待系统重启。</li></ol><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw /sysroot</span><br><span class="line">chroot /sysroot</span><br><span class="line">passwd</span><br><span class="line">rouch /.autorelabel</span><br><span class="line">exit</span><br><span class="line">reboot</span><br></pre></td></tr></tbody></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201203110554935.png" alt="image-20201203110554935"></p><ol><li>完成！</li></ol>]]></content>
    
    
    <summary type="html">前事不忘，后事之师</summary>
    
    
    
    <category term="踩坑记录" scheme="https://wanfengyueluo.github.io/categories/%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="踩坑" scheme="https://wanfengyueluo.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
    <category term="CentOS" scheme="https://wanfengyueluo.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>CCS权威指南笔记</title>
    <link href="https://wanfengyueluo.github.io/2020/11/11/ccs-quan-wei-zhi-nan-bi-ji/"/>
    <id>https://wanfengyueluo.github.io/2020/11/11/ccs-quan-wei-zhi-nan-bi-ji/</id>
    <published>2020-11-11T01:34:29.000Z</published>
    <updated>2021-06-03T13:31:51.759Z</updated>
    
    <content type="html"><![CDATA[<h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="伪类和伪元素"><a href="#伪类和伪元素" class="headerlink" title="伪类和伪元素"></a>伪类和伪元素</h2><h3 id="链接伪类"><a href="#链接伪类" class="headerlink" title="链接伪类"></a>链接伪类</h3><p><img src="C:\Users\wan\AppData\Roaming\Typora\typora-user-images\image-20201111093808310.png" alt="链接伪类"></p><h3 id="动态伪类"><a href="#动态伪类" class="headerlink" title="动态伪类"></a>动态伪类</h3><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201111094011241.png" alt="动态伪类"></p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201111094025916.png" alt="动态伪类"></p><h3 id="静态伪类"><a href="#静态伪类" class="headerlink" title="静态伪类"></a>静态伪类</h3><p><code>:first-child</code></p><p>选择元素的第一个子元素</p><h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><ul><li><p>设置首字母样式</p><p><code>p:first-letter{font-size:200%;}</code></p></li><li><p>设置第一行的样式</p><p><code>p:first-line{color:purple;}</code></p></li><li><p>设置之前元素的样式</p><p><code>h2:before{content:"}}";color:sliver;}</code></p></li><li><p>设置之后元素的样式</p><p><code>body:after{cpntent: "The End.";}</code></p></li></ul><h1 id="浮动和定位"><a href="#浮动和定位" class="headerlink" title="浮动和定位"></a>浮动和定位</h1><h2 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h2><p><code>float:left|right|none|inherit</code></p><h3 id="浮动元素"><a href="#浮动元素" class="headerlink" title="浮动元素"></a>浮动元素</h3><ul><li>对于浮动元素，会以某种方式将浮动元素从文档的正常流中删除，不过还是会影响布局</li><li>浮动元素的外边距存在并且不会合并</li></ul><h3 id="包含块（containning-block）"><a href="#包含块（containning-block）" class="headerlink" title="包含块（containning block）"></a>包含块（containning block）</h3><p>浮动元素的包含块是其最近的块级祖先元素</p><ul><li><p>浮动元素的左右外边界不能超过其包含块的左右内边界</p></li><li><p>浮动元素的左（或右）外边界必须是源文档中之前出现的左浮动（或右浮动）元素的右（左）外边界，除非后出现浮动元素的顶端在先出现浮动元素的底端下面</p><blockquote><p>这个规则的好处在于，所有浮动内容都是可见的</p></blockquote></li><li><p>左浮动元素的右外边界不会在其右边右浮动元素的左外边界的右边。一个右浮动元素的左外边界不会在其左边任何左浮动元素的右外边界的左边。</p><blockquote><p>防止浮动元素相互重叠</p></blockquote></li><li><p>一个浮动元素的顶端不能比其父元素的内顶端更高。如果一个浮动元素在两个合并外边距之间，放置这个浮动元素时就好像在两个元素之间有一个块级元素。</p><blockquote><p>该规则前半部分可以防止浮动元素一直浮动到文档的顶端。第二部分则是对某些情况下的对齐进行微调。</p></blockquote></li><li><p>浮动元素的顶端不能比之前所有浮动元素或块级元素的顶端更高。</p><blockquote><p>即要求浮动元素不能一直浮动到其父元素的顶端，另外，浮动元素的顶端也不可能比之前出现的浮动元素的顶端更高</p></blockquote></li><li><p>如果源文档中一个浮动元素之前出现另一个元素，浮动元素的顶端不能比包含该元素所生成框的任何行框的顶端更高</p><blockquote><p>进一步限制元素的 向上浮动，不允许元素浮动到包含该元素之前内容的行的顶端之上。</p></blockquote></li><li><p>左（或右）浮动元素的左边（右边）有另一个浮动元素，前者的右外边界不能在其包含块的右（左）边界的右边（左边）</p><blockquote><p>就是说，浮动元素不能超出其包含元素的边界，除非它太宽，本身都无法放下。</p></blockquote></li><li><p>浮动元素必须尽可能高地放置</p></li><li><p>左浮动元素必须向左尽可能远，右浮动元素则必须向右尽可能远，位置越高，就会向右或向左浮动得越远。</p></li></ul><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><p><code>clear: none|left|right|both</code></p><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><p><code>position: static|relative|absolute|fixed|inherit</code></p><ul><li><p>static</p><p>元素框正常生成</p></li><li><p>relative</p><p>元素框偏移某个距离。元素仍保持其未定位之前的形状，它原本所占据的空间仍保留</p></li><li><p>absolute</p><p>元素框从文档流完全删除，并相对于其包含块定位，包含块可能是文档中的另一个元素或者是初始化包含块。元素原先在正常文档流中所占的空间会关闭，就好像该元素原来不存在一样。元素定位后会生成一个块级框，而不论原来它在正常流中生成何种类型的框。</p></li><li><p>fixed</p><p>类似于absolute，不过其包含块是视窗本身</p></li></ul><p><code>relative</code>、<code>absolute</code>、<code>fixed</code>三个属性值有一个共同点，都是相对于某个基点的定位，不同之处在于基点不同。这三种定位都不会对其他元素的位置产生影响，因此元素之间可能产生重叠。</p><ul><li><p>relative，相对于默认位置进行偏移，即定位基点是元素的默认位置</p></li><li><p>absolute，相对于上级元素（一般是父元素）进行偏移，即定位基点是父元素</p><blockquote><p>限制条件：定位基点（一般是父元素）不能是<code>static</code>定位，否则定位基点就会变成整个网页的根元素<code>html</code></p><p>注意，<code>absolute</code>定位的元素会被“正常页面流”忽略，即在“正常页面流”中，该元素所占空间为零，周边元素不受影响。</p></blockquote></li><li><p>fixed，相对于浏览器窗口（<code>viewport</code>）进行偏移，即定位基点是浏览器窗口，这会导致元素的位置不随页面滚动而变化，如同固定在网页上一样。</p></li></ul><h3 id="内容溢出与裁剪"><a href="#内容溢出与裁剪" class="headerlink" title="内容溢出与裁剪"></a>内容溢出与裁剪</h3><h4 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h4><p><code>overflow: visible | hidden | scroll | auto | inherit</code></p><ul><li><p>visible</p><p>visible表示元素的内容在元素框之外也可见，不会改变框的形状 </p></li><li><p>hidden</p><p>元素的内容会在元素框的边界处剪裁，不过不会提供滚动区域</p></li><li><p>scroll</p><p>元素内容会在元素框的边界处剪裁，溢出的部分无法看到，会出现滚动条</p></li><li><p>auto</p></li><li><p>inherit</p></li></ul><p>如果一个绝对定位元素的内容溢出其内容框，而且<code>overflow</code>设置为要求剪裁该内容，可以通过<code>clip</code>改变剪裁区域的形状</p><p><code>clip: rect(top,right,bottom,left) | auto | inherit</code></p><h4 id="元素可见性"><a href="#元素可见性" class="headerlink" title="元素可见性"></a>元素可见性</h4><p><code>visibility: visible | hidden | collapse | inherit</code></p><ul><li><p>visible</p><p>元素可见</p></li><li><p>hidden</p><p>元素处于不可见状态，但是会影响文档的布局</p><blockquote><p>与display: none的区别，display不仅不显示，而且会从文档中删除，对文档的布局没有任何影响</p></blockquote></li><li><p>collapse</p><p>只在CSS表显示中使用，对于非表元素，collapse与hidden含义相同</p></li></ul>]]></content>
    
    
    <summary type="html">CCS权威指南阅读笔记</summary>
    
    
    
    <category term="Web" scheme="https://wanfengyueluo.github.io/categories/Web/"/>
    
    
    <category term="CSS" scheme="https://wanfengyueluo.github.io/tags/CSS/"/>
    
    <category term="Web" scheme="https://wanfengyueluo.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot学习笔记</title>
    <link href="https://wanfengyueluo.github.io/2020/11/09/spring-boot-xue-xi-bi-ji/"/>
    <id>https://wanfengyueluo.github.io/2020/11/09/spring-boot-xue-xi-bi-ji/</id>
    <published>2020-11-09T01:20:03.000Z</published>
    <updated>2021-06-03T13:31:51.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Boot学习笔记"><a href="#Spring-Boot学习笔记" class="headerlink" title="Spring Boot学习笔记"></a>Spring Boot学习笔记</h1><h2 id="Maven创建Spring-Boot的方法"><a href="#Maven创建Spring-Boot的方法" class="headerlink" title="Maven创建Spring Boot的方法"></a>Maven创建Spring Boot的方法</h2><p>在某些情况下，start.spring.io无法访问时，可以直接使用Maven创建Spring Boot项目</p><ol><li><p>新建Maven项目</p></li><li><p>在pom.xml文件中添加<code>parent</code>节点</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>            </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>添加<code>spring-boot-starter-web</code>和<code>spring-boot-starter-test</code>依赖</p></li><li><p>添加<code>spring-boot-maven-plugin</code>插件</p></li><li><p>创建启动类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="HttpMessageConverter"><a href="#HttpMessageConverter" class="headerlink" title="HttpMessageConverter"></a>HttpMessageConverter</h2><p>在Spring MVC中自动配置了<code>Jackson</code>和<code>Gson</code>的<code>HttpMessageConverter</code></p><ol><li>将服务端返回的对象序列化成<code>JSON</code>字符串</li><li>将前端传递的<code>JSON</code>字符串反序列化成<code>Java</code>对象</li></ol><p>自定义<code>HttpMessageConverter</code>的方式</p><ul><li>Jackson</li></ul><ol><li><p>提供<code>MappingJackson2HttpMessageConverter</code>的<code>bean</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">MappingJackson2HttpMessageConverter <span class="title">mappingJackson2HttpMessageConverter</span><span class="params">()</span> </span>{   </span><br><span class="line">    MappingJackson2HttpMessageConverter converter = <span class="keyword">new</span> </span><br><span class="line">MappingJackson2HttpMessageConverter();      </span><br><span class="line">    ObjectMapper om = <span class="keyword">new</span> ObjectMapper();   </span><br><span class="line">    om.setDateFormat(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy/MM/dd hh:mm:SSS"</span>));  </span><br><span class="line">    converter.setObjectMapper(om); </span><br><span class="line">    <span class="keyword">return</span> converter;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//起主要作用的是ObjectMapper</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>提供<code>ObjectMapper</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">ObjectMapper <span class="title">objectMapper</span><span class="params">()</span> </span>{</span><br><span class="line">ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">om.setDateFormat(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy/MM/dd hh/mm/SSS"</span>));</span><br><span class="line"><span class="keyword">return</span> om;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><ul><li>Gson</li></ul><ol><li><p>修改<code>spring-boot-starter-web</code>中默认的<code>Jackson</code>依赖，添加<code>Gson</code>依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>提供<code>GsonHttpMessageConverter</code>的<code>bean</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">GsonHttpMessageConverter <span class="title">gsonHttpMessageConverter</span><span class="params">()</span></span>{</span><br><span class="line">GsonHttpMessageConverter converter = <span class="keyword">new</span> GsonHttpMessageConverter();</span><br><span class="line">converter.setGson(<span class="keyword">new</span> </span><br><span class="line">    GsonBuilder().setDateFormat(<span class="string">"yyyy/MM/dd"</span>).create());</span><br><span class="line"><span class="keyword">return</span> converter;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//起主要作用的是Gson</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>提供<code>Gson</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">Gson <span class="title">gson</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> GsonBuilder().setDateFormat(<span class="string">"yyyy/MM/dd"</span>).create();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><ul><li>FastJson</li></ul><ol><li><p>修改<code>spring-boot-starter-web</code>中默认的<code>Jackson</code>依赖，添加<code>Fastjson</code>依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.68<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>提供<code>FastJsonHttpMessageConverter</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">FastJsonHttpMessageConverter <span class="title">fastJsonHttpMessageConverter</span><span class="params">()</span></span>{</span><br><span class="line">    FastJsonHttpMessageConverter converter = <span class="keyword">new</span> </span><br><span class="line">FastJsonHttpMessageConverter();</span><br><span class="line">    FastJsonConfig fastJsonConfig = <span class="keyword">new</span> FastJsonConfig();</span><br><span class="line">    fastJsonConfig.setDateFormat(<span class="string">"yyyy/MM/dd"</span>);</span><br><span class="line">    converter.setFastJsonConfig(fastJsonConfig);</span><br><span class="line">    <span class="keyword">return</span> converter;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="静态资源的访问"><a href="#静态资源的访问" class="headerlink" title="静态资源的访问"></a>静态资源的访问</h2><p>在Spring Boot的<code>WebMvcAutoConfiguration</code>中已经默认设置了五个静态资源的访问路径，按优先级顺序依次为<code>META-INF/resources</code>、<code>resources</code>、<code>static</code>、<code>public</code>、<code>/</code>。</p><p>自定义静态资源的位置</p><ol><li><p>在<code>application.properties</code>中添加</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spring.resources.static-locations=classpath:/xxx/</span><br><span class="line"># 也可以添加规则</span><br><span class="line">spring.mvc.static-path-pattern=/**</span><br></pre></td></tr></tbody></table></figure></li><li><p>在<code>Java</code>类中配置</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMVCConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>{</span><br><span class="line">registry.addResourceHandler(<span class="string">"/**"</span>).addResourceLocations(<span class="string">"classpath:/xxx/"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>主要使用<code>MultipartFile</code>类</p><ol><li><p>创建<code>Controller</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadController</span> </span>{</span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"/yyyy/MM/dd/"</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping("/upload")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(MultipartFile file, HttpServletRequest req)</span> </span>{</span><br><span class="line">String format = sdf.format(<span class="keyword">new</span> Date());</span><br><span class="line">String realPath = req.getServletContext().getRealPath(<span class="string">"/img"</span>) + format;</span><br><span class="line">File folder = <span class="keyword">new</span> File(realPath);</span><br><span class="line"><span class="keyword">if</span> (!folder.exists()) {</span><br><span class="line">folder.mkdirs();</span><br><span class="line">}</span><br><span class="line">String oldName = file.getOriginalFilename();</span><br><span class="line">String newName = UUID.randomUUID().toString() + oldName.substring(oldName.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">file.transferTo(<span class="keyword">new</span> File(realPath, newName));</span><br><span class="line">String url = req.getScheme() + <span class="string">"://"</span> + req.getServerName() + <span class="string">":"</span> + req.getServerPort() + <span class="string">"/img"</span> + format + newName;</span><br><span class="line"><span class="keyword">return</span> url;</span><br><span class="line">} <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建<code>index.html</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/upload"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>关于上传文件大小的限制需要在<code>application.properties</code>中进行修改</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.servlet.multipart.max-file-size</span>=<span class="string">1MB</span></span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="ControllerAdvice"><a href="#ControllerAdvice" class="headerlink" title="@ControllerAdvice"></a>@ControllerAdvice</h2><ul><li><p>全局异常处理</p><ol><li><p>创建<code>MyCustomException</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCustomException</span> </span>{</span><br><span class="line">    <span class="comment">//以response的方式返回</span></span><br><span class="line"><span class="meta">@ExceptionHandler(MaxUploadSizeExceededException.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myException</span><span class="params">(MaxUploadSizeExceededException e, HttpServletResponse res)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">res.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">PrintWriter out = res.getWriter();</span><br><span class="line">out.write(<span class="string">"上传文件大小超出限制!"</span>);</span><br><span class="line">out.flush();</span><br><span class="line">out.close();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">    <span class="comment">//以视图的方式返回</span></span><br><span class="line"><span class="meta">@ExceptionHandler(MaxUploadSizeExceededException.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">myException</span><span class="params">(MaxUploadSizeExceededException e)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(<span class="string">"myerror"</span>);</span><br><span class="line">modelAndView.addObject(<span class="string">"error"</span>, <span class="string">"文件大小超过限制！"</span>);</span><br><span class="line"><span class="keyword">return</span> modelAndView;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>以<code>ModelAndView</code>的方式返回需要创建错误页面<code>myerror.html</code>以及<code>thymeleaf</code>的依赖</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">th:text</span>=<span class="string">"${error}"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><p>预设全局数据</p><ol><li><p>创建全局数据类，使用<code>Map</code>保存数据</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalData</span> </span>{</span><br><span class="line"><span class="meta">@ModelAttribute(value = "person")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">mydata</span><span class="params">()</span></span>{</span><br><span class="line">Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"name"</span>,<span class="string">"wan"</span>);</span><br><span class="line">map.put(<span class="string">"gender"</span>,<span class="string">"male"</span>);</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>在<code>Controller</code>中使用<code>Model</code>调用数据</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>{</span><br><span class="line"><span class="meta">@GetMapping("/hello")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(Model model)</span></span>{</span><br><span class="line">Map&lt;String, Object&gt; map = model.asMap();</span><br><span class="line">Set&lt;String&gt; keySet = map.keySet();</span><br><span class="line"><span class="keyword">for</span> (String s : keySet) {</span><br><span class="line">System.out.println(s+<span class="string">":"</span>+map.get(s));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><p>请求参数预处理</p></li></ul><p>现在出现如下需求，前端向后端发送请求参数时出现命名冲突：</p><div class="table-container"><table><thead><tr><th>key</th><th>value</th></tr></thead><tbody><tr><td>name</td><td>三国演义</td></tr><tr><td>price</td><td>99</td></tr><tr><td>name</td><td>吴冠中</td></tr><tr><td>age</td><td>100</td></tr></tbody></table></div><p>此时在服务器端接受的数据会有问题，解决方法如下：</p><ol><li><p>给接收参数重命名</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line"><span class="meta">@PostMapping("/book")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBook</span><span class="params">(<span class="meta">@ModelAttribute("b")</span> Book book, <span class="meta">@ModelAttribute("a")</span> Author author)</span></span>{</span><br><span class="line">System.out.println(book);</span><br><span class="line">System.out.println(author);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建@ControllerAdvice类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@InitBinder(value = "a")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initA</span><span class="params">(WebDataBinder binder)</span></span>{</span><br><span class="line">    binder.setFieldDefaultPrefix(<span class="string">"a."</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@InitBinder(value = "b")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initB</span><span class="params">(WebDataBinder binder)</span></span>{</span><br><span class="line">    binder.setFieldDefaultPrefix(<span class="string">"b."</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>@ModelAttribute</p><p>WebDataBinder</p><p>@InitBinder</p><p>ControllerAdvice</p><p>Model</p><p>ModelAndView</p><p>@ExceptionHandler</p></blockquote><h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><ol><li><p>在<code>classpath</code>下的<code>static</code>和<code>template</code>目录中创建<code>error</code>目录并创建静态错误页面和动态错误页面，按优先级依次访问：精确大于模糊，动态大于静态</p></li><li><p>自定义错误数据</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyErrorConfig</span> <span class="keyword">extends</span> <span class="title">DefaultErrorAttributes</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getErrorAttributes</span><span class="params">(WebRequest webRequest, ErrorAttributeOptions options)</span> </span>{</span><br><span class="line">Map&lt;String, Object&gt; errorAttributes = <span class="keyword">super</span>.getErrorAttributes(webRequest, options);</span><br><span class="line">errorAttributes.put(<span class="string">"myerror"</span>,<span class="string">"自定义异常信息！"</span>);</span><br><span class="line"><span class="keyword">return</span> errorAttributes;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>自定义错误视图</p><ol><li>自定义<code>ErrorViewResolver</code>继承自<code>DefaultErrorViewResolver</code></li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyErrorViewResolver</span> <span class="keyword">extends</span> <span class="title">DefaultErrorViewResolver</span> </span>{</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a new {<span class="doctag">@link</span> DefaultErrorViewResolver} instance.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> applicationContext the source application context</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> resourceProperties resource properties</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyErrorViewResolver</span><span class="params">(ApplicationContext applicationContext, ResourceProperties resourceProperties)</span> </span>{</span><br><span class="line"><span class="keyword">super</span>(applicationContext, resourceProperties);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">resolveErrorView</span><span class="params">(HttpServletRequest request, HttpStatus status, Map&lt;String, Object&gt; model)</span> </span>{</span><br><span class="line">ModelAndView modelAndView = <span class="keyword">super</span>.resolveErrorView(request, status, model);</span><br><span class="line">modelAndView.setViewName(<span class="string">"myerror"</span>);</span><br><span class="line">modelAndView.addObject(model);</span><br><span class="line"><span class="keyword">return</span> modelAndView;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li>自定义视图<code>myerror.html</code></li></ol></li></ol><blockquote><p>ErrorMvcAutoConfiguration</p><p>DefaultErrorAttributes</p><p>getErrorAttributes()</p><p>DefaultErrorViewResolver</p><p>resolveErrorView()</p></blockquote><h2 id="CORS解决跨域问题"><a href="#CORS解决跨域问题" class="headerlink" title="CORS解决跨域问题"></a>CORS解决跨域问题</h2><ol><li><p>在请求中添加注解<code>@CrosOrigin(origins = "http://xxxx:xxxx")</code>即可</p></li><li><p>创建配置类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMVCConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>{</span><br><span class="line">registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">.allowedOrigins(<span class="string">"http://xxxx:xxxx"</span>)</span><br><span class="line">.allowedHeaders(<span class="string">"*"</span>)</span><br><span class="line">.allowedMethods(<span class="string">"*"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>WebMvcConfigurer</p><p>addCorsMappings(CorsRegistry registry)</p></blockquote><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><ol><li><p>创建<code>beans.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.wan.xml.Hello"</span> <span class="attr">id</span>=<span class="string">"hello"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建<code>MyWebNvcConfig</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ImportResource(locations = "classpath:beans.xml")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> </span>{</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="注册拦截器"><a href="#注册拦截器" class="headerlink" title="注册拦截器"></a>注册拦截器</h2><ol><li><p>自定义<code>Interceptor</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">System.out.println(<span class="string">"preHandle"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">System.out.println(<span class="string">"postHandle"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">System.out.println(<span class="string">"afterCompletion"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建<code>WebMvcConfig</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>{</span><br><span class="line">registry.addInterceptor(myInterceptor()).addPathPatterns(<span class="string">"/**"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">MyInterceptor <span class="title">myInterceptor</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> MyInterceptor();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="定义系统启动任务"><a href="#定义系统启动任务" class="headerlink" title="定义系统启动任务"></a>定义系统启动任务</h2><ol><li><p>CommandLineRunner</p><ul><li><p>创建MyCommanderLineRunner</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCommandLineRunner1</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(2)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCommandLineRunner2</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//order表示优先级，值越小优先级越高</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>ApplicationRunner(获取参数的类型更丰富)</p><ul><li><p>创建MyApplicationRunner</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(2)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationRunner1</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(ApplicationArguments args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationRunner2</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> </span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(ApplicationArguments args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol><blockquote><p>CommandLineRunner</p><p>ApplicationRunner</p></blockquote><h2 id="类型转换器"><a href="#类型转换器" class="headerlink" title="类型转换器"></a>类型转换器</h2><p>需求：前端向后端传递日期的字符串，后端使用Date对象无法接收，此时需要自定义转换器</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConverter</span> <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">String</span>, <span class="title">Date</span>&gt; </span>{</span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">convert</span><span class="params">(String s)</span> </span>{</span><br><span class="line"><span class="keyword">if</span> (s != <span class="keyword">null</span>) {</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line"><span class="keyword">return</span> sdf.parse(s);</span><br><span class="line">} <span class="keyword">catch</span> (ParseException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLogger</span> </span>{</span><br><span class="line"><span class="meta">@Pointcut("execution(* org.wan.aop.service.*.*(..))")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pc1</span><span class="params">()</span> </span>{</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before(value = "pc1()")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint jp)</span> </span>{</span><br><span class="line">String name = jp.getSignature().getName();</span><br><span class="line">System.out.println(<span class="string">"before:"</span> + name);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@After(value = "pc1()")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(JoinPoint jp)</span> </span>{</span><br><span class="line">String name = jp.getSignature().getName();</span><br><span class="line">System.out.println(<span class="string">"after:"</span> + name);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@AfterReturning(value = "pc1()",returning = "result")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(JoinPoint jp, Object result)</span> </span>{</span><br><span class="line">String name = jp.getSignature().getName();</span><br><span class="line">System.out.println(<span class="string">"afterReturning:"</span> + name+<span class="string">"----"</span>+result);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Around("pc1()")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint pjp)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line"><span class="keyword">return</span> pjp.proceed();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@AfterThrowing(value = "pc1()",throwing = "e")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">(JoinPoint jp,Exception e)</span> </span>{</span><br><span class="line">String name = jp.getSignature().getName();</span><br><span class="line">System.out.println(<span class="string">"afterThrowing:"</span> + name+<span class="string">"----"</span>+e.getMessage());</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>@Aspect</p><p>@Pointcut(“execution(<em> org.wan.aop.service.</em>.*(..))”)</p><p>@Before(value = “pc1()”)</p><p>@After(value = “pc1()”)</p><p>@AfterReturning(value = “pc1()”,returning = “result”)</p><p>@Around(“pc1()”)</p><p>@AfterThrowing(value = “pc1()”,throwing = “e”)</p></blockquote><h2 id="JdbcTemplate"><a href="#JdbcTemplate" class="headerlink" title="JdbcTemplate"></a>JdbcTemplate</h2><ol><li><p>依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>MySQL配置</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.one.url</span>=<span class="string">jdbc:mysql://localhost:3306/test1?characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC&amp;zeroDateTimeBehavior=CONVERT_TO_NULL</span></span><br><span class="line"><span class="meta">spring.datasource.one.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.one.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.datasource.one.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.datasource.two.url</span>=<span class="string">jdbc:mysql://localhost:3306/test2?characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC&amp;zeroDateTimeBehavior=CONVERT_TO_NULL</span></span><br><span class="line"><span class="meta">spring.datasource.two.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.two.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.datasource.two.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>自定义<code>DataSource</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>{</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "spring.datasource.one")</span></span><br><span class="line"><span class="function">DruidDataSource <span class="title">dsOne</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> DruidDataSourceBuilder.create().build();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "spring.datasource.two")</span></span><br><span class="line"><span class="function">DruidDataSource <span class="title">dsTwo</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> DruidDataSourceBuilder.create().build();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>自定义<code>JdbcTemplate</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTemplateConfig</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">JdbcTemplate <span class="title">jdbcTemplateOne</span><span class="params">(<span class="meta">@Qualifier("dsOne")</span> DataSource ds)</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(ds);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">JdbcTemplate <span class="title">jdbcTemplateTwo</span><span class="params">(<span class="meta">@Qualifier("dsTwo")</span> DataSource ds)</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(ds);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>@ConfigurationProperties(prefix = “spring.datasource.one”)</p><p>DruidDataSource</p><p>DruidDataSourceBuilder.create().build()</p><p>JdbcTemplate</p><p>@Qualifier(“dsOne”) DataSource ds</p></blockquote><h2 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h2><ol><li><p>添加依赖以及配置<code>resource</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--添加resource的目的在于，将mapper.xml和对应的Mapper.java文件放在同一个package下--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--也可以在resource目录下创建和对应Mapper.java相同路径的mapper.xml--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--也可以将mapper.xml放于resource中的文件夹中，然后在application.properties中设置mybatis.mapper-locations=classpath:/mapper/*.xml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol><ol><li><p>MySQL配置</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/test1?characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC&amp;zeroDateTimeBehavior=CONVERT_TO_NULL</span></span><br><span class="line"> </span><br></pre></td></tr></tbody></table></figure></li><li><p>配置<code>mapper.xml</code>和<code>mapper.java</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.example.mybatis.mapper.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAllUser"</span> <span class="attr">resultType</span>=<span class="string">"com.example.mybatis.bean.User"</span>&gt;</span></span><br><span class="line">        select * from user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>{</span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getAllUser</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>配置多数据源</p><ul><li><p>配置数据源</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.one.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.one.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.one.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.datasource.one.url</span>=<span class="string">jdbc:mysql://localhost:3306/test1?characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC&amp;zeroDateTimeBehavior=CONVERT_TO_NULL</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.datasource.two.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.two.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.two.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.datasource.two.url</span>=<span class="string">jdbc:mysql://localhost:3306/test2?characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC&amp;zeroDateTimeBehavior=CONVERT_TO_NULL</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建<code>mapper1</code>和<code>mapper2</code>两个<code>package</code>，在各自包下创建<code>mapper.xml</code>和<code>mapper.java</code></p></li><li><p>创建自定义<code>DataSource</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "spring.datasource.one")</span></span><br><span class="line"><span class="function">DataSource <span class="title">dataSourceOne</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> DruidDataSourceBuilder.create().build();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "spring.datasource.two")</span></span><br><span class="line"><span class="function">DataSource <span class="title">dataSourceTwo</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> DruidDataSourceBuilder.create().build();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建配置类<code>MyBatisConfigOne</code>和<code>MyBatisConfigTwo</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(basePackages = "com.example.mybatis.mapper1",sqlSessionFactoryRef = "sqlSessionFactory1",</span></span><br><span class="line"><span class="meta">sqlSessionTemplateRef = "sqlSessionTemplate1")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisConfigOne</span> </span>{</span><br><span class="line"><span class="meta">@Resource(name = "dataSourceOne")</span></span><br><span class="line">DataSource dsOne;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">SqlSessionFactory <span class="title">sqlSessionFactory1</span><span class="params">()</span></span>{</span><br><span class="line">SqlSessionFactoryBean ssfb = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">ssfb.setDataSource(dsOne);</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line"><span class="keyword">return</span> ssfb.getObject();</span><br><span class="line">} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">SqlSessionTemplate <span class="title">sqlSessionTemplate1</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> SqlSessionTemplate(sqlSessionFactory1());</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(basePackages = "com.example.mybatis.mapper2",sqlSessionFactoryRef = "sqlSessionFactory2",</span></span><br><span class="line"><span class="meta">sqlSessionTemplateRef = "sqlSessionTemplate2")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisConfigTwo</span> </span>{</span><br><span class="line"><span class="meta">@Resource(name = "dataSourceTwo")</span></span><br><span class="line">DataSource dsTwo;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">SqlSessionFactory <span class="title">sqlSessionFactory2</span><span class="params">()</span></span>{</span><br><span class="line">SqlSessionFactoryBean ssfb = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">ssfb.setDataSource(dsTwo);</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line"><span class="keyword">return</span> ssfb.getObject();</span><br><span class="line">} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">SqlSessionTemplate <span class="title">sqlSessionTemplate2</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> SqlSessionTemplate(sqlSessionFactory2());</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol><blockquote><build> <resources>     <resource>         <directory>src/main/java</directory>         <includes>             <include>**/*.xml</include>         </includes>     </resource>     <resource>         <directory>src/main/resources</directory>     </resource> </resources></build><p>@MapperScan(basePackages = “com.example.mybatis.mapper1”,sqlSessionFactoryRef = “sqlSessionFactory1”,<br>        sqlSessionTemplateRef = “sqlSessionTemplate1”)</p><p>SqlSessionFactory</p><p>SqlSessionTemplate</p></blockquote><h2 id="JPA"><a href="#JPA" class="headerlink" title="JPA"></a>JPA</h2><ol><li><p>依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>MySQL配置</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/test1?characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC&amp;zeroDateTimeBehavior=CONVERT_TO_NULL</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.jpa.show-sql</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spring.jpa.database</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">spring.jpa.database-platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">spring.jpa.hibernate.ddl-auto</span>=<span class="string">update</span></span><br><span class="line"><span class="meta">spring.jpa.properties.hibernate.dialect</span>=<span class="string">org.hibernate.dialect.MySQL57Dialect</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建bean</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity(name = "t_book")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String author;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建dao</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookDao</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Book</span>,<span class="title">Integer</span>&gt; </span>{</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>spring.jpa.show-sql=true<br>spring.jpa.database=mysql<br>spring.jpa.database-platform=mysql<br>spring.jpa.hibernate.ddl-auto=update<br>spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect</p><p>@Entity(name = “t_book”)</p><p>@Id<br>@GeneratedValue(strategy = GenerationType.IDENTITY)</p><p>JpaRepository<book,integer></book,integer></p></blockquote><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><h2 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h2><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h2 id="RESTful"><a href="#RESTful" class="headerlink" title="RESTful"></a>RESTful</h2>]]></content>
    
    
    <summary type="html">Spring Boot学习笔记--江南一点雨Spring Boot视频记录笔记</summary>
    
    
    
    <category term="Spring Boot" scheme="https://wanfengyueluo.github.io/categories/Spring-Boot/"/>
    
    
    <category term="Spring Boot" scheme="https://wanfengyueluo.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot-Vue全栈开发实战笔记</title>
    <link href="https://wanfengyueluo.github.io/2020/11/09/spring-boot-vue-quan-zhan-kai-fa-shi-zhan-bi-ji/"/>
    <id>https://wanfengyueluo.github.io/2020/11/09/spring-boot-vue-quan-zhan-kai-fa-shi-zhan-bi-ji/</id>
    <published>2020-11-09T00:54:12.000Z</published>
    <updated>2021-06-03T13:31:51.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Boot-Vue全栈开发实战笔记"><a href="#Spring-Boot-Vue全栈开发实战笔记" class="headerlink" title="Spring Boot+Vue全栈开发实战笔记"></a><em>Spring Boot+Vue全栈开发实战笔记</em></h1><h1 id="Spring-Boot入门"><a href="#Spring-Boot入门" class="headerlink" title="Spring Boot入门"></a>Spring Boot入门</h1><h2 id="不使用spring-boot-starter-parent"><a href="#不使用spring-boot-starter-parent" class="headerlink" title="不使用spring-boot-starter-parent"></a>不使用spring-boot-starter-parent</h2><p><strong>spring-boot-starter-parent主要提供的默认配置</strong>：</p><ul><li>Java版本默认使用1.8</li><li>编码格式默认使用UTF-8</li><li>提供Dependency Managerment进行项目依赖的版本管理</li><li>默认的资源过滤与插件配置</li></ul><p>当不使用<code>spring-boot-starter-parent</code>时需要通过dependencyManagerment来实现项目依赖版本的统一管理</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagerment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagerment</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>此时需要配置Java版本和编码格式</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="定制banner"><a href="#定制banner" class="headerlink" title="定制banner"></a>定制banner</h2><p>在<code>resources</code>目录下创建一个banner.txt文件，网站参考：</p><ul><li><a href="http://www.network-science.de/ascii/">http://www.network-science.de/ascii/</a></li></ul><p>也可以关闭banner,通过SpringApplicationBuilder来设置bannerMode为OFF。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改main方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line">    SpringApplicationBuilder builder = <span class="keyword">new</span> SpringApplicationBuilder(Application.class);</span><br><span class="line">    builder.bannerMode(Banner.Mode.OFF).run(args);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="Web容器设置"><a href="#Web容器设置" class="headerlink" title="Web容器设置"></a>Web容器设置</h2><h3 id="Tomcat配置"><a href="#Tomcat配置" class="headerlink" title="Tomcat配置"></a>Tomcat配置</h3><p>当添加<code>spring-boot-starter-web</code>依赖后，默认会使用Tomcat作为Web容器</p><h3 id="Jetty配置"><a href="#Jetty配置" class="headerlink" title="Jetty配置"></a>Jetty配置</h3><h3 id="Undertow配置"><a href="#Undertow配置" class="headerlink" title="Undertow配置"></a>Undertow配置</h3><h2 id="Properties配置"><a href="#Properties配置" class="headerlink" title="Properties配置"></a>Properties配置</h2><p>Spring Boot项目中的application.properties配置文件的位置优先级：</p><ul><li>项目根目录下的config文件夹中</li><li>项目根目录下</li><li>classpath(resources)下的config文件夹中</li><li>classpath(resources)下</li></ul><p><code>application.properties</code>中的数据可以注入到Bean中，如：</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">book.name</span>=<span class="string">xxx</span></span><br><span class="line"><span class="meta">book.author</span>=<span class="string">yyy</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将配置注入</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "book")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span></span>{</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="YAML配置"><a href="#YAML配置" class="headerlink" title="YAML配置"></a>YAML配置</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">my:</span></span><br><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">name:xxx</span></span><br><span class="line"> <span class="string">address:China</span></span><br><span class="line"> <span class="attr">favorite:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">a</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">b</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">c</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">name:yyy</span></span><br><span class="line">  <span class="string">address:China</span></span><br><span class="line">  <span class="attr">favorite:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">a</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">b</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">c</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "my")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Users</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> List&lt;User&gt; users;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; favorites;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在Spring Boot中使用YAML有缺陷，例如无法使用<code>@PropertySource</code>注解加载YAML文件</p><h2 id="Profile配置"><a href="#Profile配置" class="headerlink" title="Profile配置"></a>Profile配置</h2><h3 id="配置文件配置"><a href="#配置文件配置" class="headerlink" title="配置文件配置"></a>配置文件配置</h3><ol><li>创建<code>application-dev.properties</code>和<code>application-prod.properties</code></li><li>在<code>application.properties</code>中配置<code>spring.profiles.active=xxx</code></li></ol><h3 id="代码配置"><a href="#代码配置" class="headerlink" title="代码配置"></a>代码配置</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改main方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line">    SpringApplicationBuilder builder = <span class="keyword">new</span> SpringApplicationBuilder(Application.class);</span><br><span class="line">    builder.application().setAdditionProfiles(<span class="string">"prod"</span>).run(args);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="项目启动时配置"><a href="#项目启动时配置" class="headerlink" title="项目启动时配置"></a>项目启动时配置</h3><p><code>java -jar xxx.jar --spring.profiles.active=prod</code></p><h1 id="Spring-Boot整合视图层"><a href="#Spring-Boot整合视图层" class="headerlink" title="Spring Boot整合视图层"></a>Spring Boot整合视图层</h1><h2 id="Thymeleaf"><a href="#Thymeleaf" class="headerlink" title="Thymeleaf"></a>Thymeleaf</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="配置Thymeleaf"><a href="#配置Thymeleaf" class="headerlink" title="配置Thymeleaf"></a>配置Thymeleaf</h3><p>Spring Boot 为Thymeleaf提供自动化配置类ThymeleafAutoConfiguration,相关配置属性在ThymeleafProperties类中，可以在<code>application.properties</code>中进行自定义配置：</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#是否开启缓存，默认true</span></span><br><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#检查模板是否存在，默认true</span></span><br><span class="line"><span class="meta">spring.thymeleaf.cheak-template</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#检查模板位置是否存在，默认true</span></span><br><span class="line"><span class="meta">spring.thymeleaf.cheak-template-location</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#模板文件编码</span></span><br><span class="line"><span class="meta">spring.thymeleaf.encoding</span>=<span class="string">UTF-8</span></span><br><span class="line"><span class="comment">#模板文件位置</span></span><br><span class="line"><span class="meta">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/</span></span><br><span class="line"><span class="comment">#Content-Type配置</span></span><br><span class="line"><span class="meta">spring.thymeleaf.servlet.content-type</span>=<span class="string">text.heml</span></span><br><span class="line"><span class="comment">#模板文件后缀</span></span><br><span class="line"><span class="meta">spring.thymeleaf.suffix</span>=<span class="string">.html</span></span><br></pre></td></tr></tbody></table></figure><h3 id="配置控制器"><a href="#配置控制器" class="headerlink" title="配置控制器"></a>配置控制器</h3><p>创建User实体类，然后在Controller中返回ModerAndView</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>{</span><br><span class="line">    <span class="meta">@GetMapping("/users")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">users</span><span class="params">()</span> </span>{</span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">1</span>);</span><br><span class="line">        user.setName(<span class="string">"wan"</span>);</span><br><span class="line">        users.add(user);</span><br><span class="line">        </span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">"users"</span>,users);</span><br><span class="line">        mv.setViewName(<span class="string">"users"</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h3><p>在<code>resources/templates</code>目录下创建<code>users.html</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"user:${users}"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"${user.id}"</span>&gt;</span>用户编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"${user.name}"</span>&gt;</span>用户姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>首先导入Thymeleaf的命名空间，然后通过th:each进行遍历，通过th:text展示数据</p><h2 id="FreeMarker（非常古老的模板引擎…）"><a href="#FreeMarker（非常古老的模板引擎…）" class="headerlink" title="FreeMarker（非常古老的模板引擎…）"></a>FreeMarker（非常古老的模板引擎…）</h2><h1 id="Spring-Boot整合Web"><a href="#Spring-Boot整合Web" class="headerlink" title="Spring Boot整合Web"></a>Spring Boot整合Web</h1><h2 id="返回JSON数据"><a href="#返回JSON数据" class="headerlink" title="返回JSON数据"></a>返回JSON数据</h2><h3 id="默认实现"><a href="#默认实现" class="headerlink" title="默认实现"></a>默认实现</h3><p><code>spring-boot-starter-web</code>默认将<code>jackson-databind</code>作为JSON处理器</p><p>此时对于字段忽略、日期格式化等可以通过注解实现</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="meta">@JsonIgnore</span></span><br><span class="line">    <span class="keyword">private</span> Float price;</span><br><span class="line">    <span class="meta">@JsonFormat(pattern="yyyy-MM-dd")</span></span><br><span class="line">    <span class="keyword">private</span> Date publicationDate;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="自定义转换器"><a href="#自定义转换器" class="headerlink" title="自定义转换器"></a>自定义转换器</h3><h4 id="Gson"><a href="#Gson" class="headerlink" title="Gson"></a>Gson</h4><p>首先，引入依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>然后提供一个GsonHttpMessageConverter</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GsonConfig</span> </span>{</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">GsonHttpMessageConverter <span class="title">gsonHttpMessageConverter</span><span class="params">()</span> </span>{</span><br><span class="line">        GsonHttpMessageConverter converter = <span class="keyword">new</span> GsonHttpMessageConverter();</span><br><span class="line">        GsonBuilder builder = <span class="keyword">new</span> GsonBuilder();</span><br><span class="line">        builder.setDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">        builder.excludeFieldsWithModifiers(Modifier.PROTECTED);</span><br><span class="line">        Gson gson = builder.create();</span><br><span class="line">        converter.setGson(gson);</span><br><span class="line">        <span class="keyword">return</span> converter;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>提供一个GsonHttpMessageConverter实例</li><li>设置Gson解析时日期的格式</li><li>设置Gson解析时修饰符为protected的字段被过滤</li><li>创建Gson对象放入GsonHttpMessageConverter的实例中并返回converter</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">protected</span> Float price;<span class="comment">//忽略</span></span><br><span class="line">    <span class="keyword">private</span> Date publicationDate;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="fastjson…"><a href="#fastjson…" class="headerlink" title="fastjson…"></a>fastjson…</h4><h2 id="静态资源访问"><a href="#静态资源访问" class="headerlink" title="静态资源访问"></a>静态资源访问</h2><h3 id="默认策略"><a href="#默认策略" class="headerlink" title="默认策略"></a>默认策略</h3><p><code>classpath</code>为<code>resources</code></p><ul><li><code>classpath:/META_INF/resources/</code></li><li><code>classpath:/resources/</code></li><li><code>classpath:/static/</code>(IDEA默认)</li><li><code>classpath:/public/</code></li></ul><h3 id="自定义策略"><a href="#自定义策略" class="headerlink" title="自定义策略"></a>自定义策略</h3><h4 id="配置文件中定义"><a href="#配置文件中定义" class="headerlink" title="配置文件中定义"></a>配置文件中定义</h4><p><code>application.properties</code>:</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.mvc.static-path-pattern</span>=<span class="string">/static/**</span></span><br><span class="line"><span class="meta">spring.resources.static-locations</span>=<span class="string">classpath:/static/</span></span><br></pre></td></tr></tbody></table></figure><p>过滤规则为<code>/static/**</code>，静态资源位置为<code>classpath:/static/</code></p><h4 id="Java编码定义"><a href="#Java编码定义" class="headerlink" title="Java编码定义"></a>Java编码定义</h4><p>实现<code>WebMvcConfigurer</code>接口,然后实现<code>addResourceHandlers</code>方法</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>{</span><br><span class="line">        registry</span><br><span class="line">            .addResourceHandler(<span class="string">"/static/**"</span>)</span><br><span class="line">            .addResourceLocations(<span class="string">"classpath:/static/"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="文件上传-…"><a href="#文件上传-…" class="headerlink" title="文件上传(…)"></a>文件上传(…)</h2><h2 id="ControllerAdvice"><a href="#ControllerAdvice" class="headerlink" title="@ControllerAdvice"></a>@ControllerAdvice</h2><p><code>@ControllerAdvice</code> 是<code>@Controller</code>的增强版，主要用来处理全局数据，一般搭配<code>@ExceptionHandler</code>、<code>@ModelAttribute</code>以及<code>@Initbinder</code>使用</p><h3 id="全局异常处理"><a href="#全局异常处理" class="headerlink" title="全局异常处理"></a>全局异常处理</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回ModelAndView</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomExceptionHandler</span> </span>{</span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exampleException</span><span class="params">(Exception e)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">"msg"</span>,<span class="string">"xxx"</span>);</span><br><span class="line">        mv.setViewName(<span class="string">"error"</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在<code>resources/templates</code>目录下创建<code>error.html</code>:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">"${msg}"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在定义的<code>CustomExceptionHandler</code>类上添加<code>@ControllerAdvice</code>注解。<code>exampleException</code>方法的参数可以有异常实例、HttpServletResponse以及HttpServletRequest、Model等，返回值可以是一段JSON、一个ModelAndView、一个逻辑视图名等。</p><h3 id="添加全局数据"><a href="#添加全局数据" class="headerlink" title="添加全局数据"></a>添加全局数据</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalConfig</span> </span>{</span><br><span class="line">    <span class="meta">@ModelAttribute(value="info")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String,String&gt; <span class="title">userInfo</span><span class="params">()</span></span>{</span><br><span class="line">     HashMap&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">   map.put(<span class="string">"username"</span>,<span class="string">"w"</span>);</span><br><span class="line">    map.put(<span class="string">"age"</span>,<span class="number">12</span>);</span><br><span class="line">   <span class="keyword">return</span> map;   </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>在全局配置中添加<code>userInfo</code>方法，返回一个map。加入注解<code>@ModelAttribute</code>,其中的value表示这条返回数据的key，方法的返回值是返回数据的value。</li><li>此时在任意请求的Controller中，通过方法参数中的Model可以获取info的数据</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>{</span><br><span class="line">    <span class="meta">@GetMapping("/hello")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">(Model model)</span> </span>{</span><br><span class="line">        Map&lt;String,String&gt; map = model.asMap();</span><br><span class="line">        Set&lt;String&gt; keySet = map.keySet();</span><br><span class="line">        Iterator&lt;String&gt; iterator = keySet.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext()){</span><br><span class="line">            String key = iterator.next();</span><br><span class="line">            Object value = map.get(key);</span><br><span class="line">            System.out.println(key+<span class="string">"---"</span>+value);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="请求参数预处理"><a href="#请求参数预处理" class="headerlink" title="请求参数预处理"></a>请求参数预处理</h3><p><code>@ControllerAdvice</code>结合<code>@InitBinder</code>能实现参数预处理，即表单数据绑定到实体类上时进行一些额外处理</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Author</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>此时Controller中同时接收两个实体类的数据，对于name属性会混淆，需要进行处理：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>{</span><br><span class="line">    <span class="meta">@GetMapping("/book")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">book</span><span class="params">(<span class="meta">@ModelAttribute("b")</span> Book book,<span class="meta">@ModelAttribute("a")</span> Author author)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> book.toString()+<span class="string">"---"</span>+author.toString();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalConfig</span> </span>{</span><br><span class="line">    <span class="meta">@InitBinder("b")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init1</span><span class="params">(WebDataBinder binder)</span> </span>{</span><br><span class="line">        binder.setFieldDefaultPrefix(<span class="string">"b."</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@InitBinder("a")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init2</span><span class="params">(WebDataBinder binder)</span> </span>{</span><br><span class="line">        binder.setFieldDefaultPrefix(<span class="string">"a."</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>GlobalConfig</code>中，<code>@InitBinder("b")</code>表示该方法处理<code>@ModelAttribute("b")</code>对应的参数</li><li><code>@InitBinder("a")</code>表示该方法处理<code>@ModelAttribute("a")</code>对应的参数</li><li>每个方法中给相应的Field设置一个前缀，并且在浏览器请求中设置<code>a.name   b.name</code>即可区分</li><li><code>WebDataBinder</code>中还可以设置允许、禁止、必填的字段以及验证器等</li></ul><h2 id="自定义错误页-…"><a href="#自定义错误页-…" class="headerlink" title="自定义错误页(…)"></a>自定义错误页(…)</h2><p>Spring Boot中的错误默认由<code>BasicErrorController</code>类处理</p><h2 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h2><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>{</span><br><span class="line">        registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">            .allowedHeaders(<span class="string">"*"</span>)</span><br><span class="line">            .allowedMethods(<span class="string">"*"</span>)</span><br><span class="line">            .maxAge(<span class="number">1800</span>)</span><br><span class="line">            .allowedOrigins(<span class="string">"http://localhost:8081"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>全局配置需要自定义类并实现<code>WebMvcConfigurer</code>接口，实现<code>addCorsMappings</code>方法</p><h2 id="注册拦截器"><a href="#注册拦截器" class="headerlink" title="注册拦截器"></a>注册拦截器</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterceptor1</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request,HttpServletResponse response,Object handler)</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"MyInterceptor1  preHandle..."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request,HttpServletResponse response,Object handler,ModelAndView modelAndView)</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"MyInterceptor1  postHandle..."</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request,HttpServletResponse response,Object handler,Exception ex)</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"MyInterceptor1  afterCompletion..."</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p>拦截器中的方法按<code>preHandle</code>-&gt;<code>Controller</code>-&gt;<code>postHandle</code>-&gt;<code>afterCompletion</code>的顺序执行</p></li><li><p>只有当<code>preHandle</code>方法返回<code>true</code>时后面的方法才会执行</p></li><li>当拦截器链中存在多个拦截器时，<code>postHandle</code>在拦截器链内所有拦截器返回成功时才会调用</li><li><code>afterCompletion</code>只有<code>preHandle</code>返回<code>true</code>才调用，<strong>但</strong>若拦截器内的第一个拦截器的<code>preHandle</code>返回<code>false</code>，后面的方法都不会执行</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置拦截器。定义配置类进行拦截器的配置</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>{</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> MyInterceptor1())</span><br><span class="line">            .addPathPatterns(<span class="string">"/**"</span>)</span><br><span class="line">            .excludePathPatterns(<span class="string">"/xxx"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="comment">//addPathPatterns表示拦截路径</span></span><br><span class="line"><span class="comment">//excludePathPatterns表示排除的路径</span></span><br></pre></td></tr></tbody></table></figure><h2 id="启动系统任务"><a href="#启动系统任务" class="headerlink" title="启动系统任务"></a>启动系统任务</h2><p>Spring Boot对于像配置文件加载、数据库舒适化等操作提供了两种解决方案：</p><h3 id="1-CommandLineRunner"><a href="#1-CommandLineRunner" class="headerlink" title="1. CommandLineRunner"></a>1. CommandLineRunner</h3><p>Spring Boot项目在启动时会遍历所有<code>CommandLineRunner</code>的实现类并调用其中的<code>run</code>方法,当系统中有多个<code>CommandLineRunner</code>的实现类，使用<code>@Order</code>注解对这些实现类的调用顺序进行排序</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加两个CommandLineRunner</span></span><br><span class="line"><span class="comment">//Order()中的数字越小越先执行</span></span><br><span class="line"><span class="comment">//run方法的参数是系统启动时传入的参数，即入口类main方法的参数</span></span><br><span class="line"><span class="comment">//在调用SpringApplication.run方法时被传入</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCommandLineRunner1</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        System.out.println(<span class="string">"Runner1"</span>+Arrays.toString(args));</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(2)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCommandLineRunner2</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        System.out.println(<span class="string">"Runner2"</span>+Arrays.toString(args));</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="2-ApplicationRunner"><a href="#2-ApplicationRunner" class="headerlink" title="2. ApplicationRunner"></a>2. ApplicationRunner</h3><p><code>ApplicationRunner</code>的用法和<code>CommandLineRunner</code>基本一致，区别体现在<code>run</code>方法的参数上</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加两个ApplicationRunner</span></span><br><span class="line"><span class="comment">//Order()中的数字越小越先执行</span></span><br><span class="line"><span class="comment">//run方法的参数是ApplicationArguments对象</span></span><br><span class="line"><span class="comment">//getNonOptionArgs()获取参数</span></span><br><span class="line"><span class="comment">//getOptionNames()获取参数的key</span></span><br><span class="line"><span class="comment">//getOptionValues(key)获取key对应的value</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(2)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationRunner1</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(ApplicationArguments args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        List&lt;String&gt; nonOptionArgs = args.getNonOptionArgs();</span><br><span class="line">        System.out.println(<span class="string">"1-nonOptionArgs"</span>+nonOptionArgs);</span><br><span class="line">        Set&lt;String&gt; optionNames = args.getOptionNames();</span><br><span class="line">        <span class="keyword">for</span>(String optionName : optionNames) {</span><br><span class="line">            System.out.println(<span class="string">"1-   key:"</span>+optionName+<span class="string">";value:"</span>+args.getOptionValues(optionName));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationRunner2</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(ApplicationArguments args)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        List&lt;String&gt; nonOptionArgs = args.getNonOptionArgs();</span><br><span class="line">        System.out.println(<span class="string">"2-nonOptionArgs"</span>+nonOptionArgs);</span><br><span class="line">        Set&lt;String&gt; optionNames = args.getOptionNames();</span><br><span class="line">        <span class="keyword">for</span>(String optionName : optionNames) {</span><br><span class="line">            System.out.println(<span class="string">"2-   key:"</span>+optionName+<span class="string">";value:"</span>+args.getOptionValues(optionName));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="路径映射"><a href="#路径映射" class="headerlink" title="路径映射"></a>路径映射</h2><p>对于一些不需要在控制器中加载数据的页面，可以直接配置路径映射，提高访问速度</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//直接在MVC配置中重写addViewControllers方法</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>{</span><br><span class="line">        registry.addViewController(<span class="string">"/login"</span>).setViewName(<span class="string">"login"</span>);</span><br><span class="line">        registry.addViewController(<span class="string">"/index"</span>).setViewName(<span class="string">"index"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="配置AOP"><a href="#配置AOP" class="headerlink" title="配置AOP"></a>配置AOP</h2><h3 id="AOP：在系统运行时动态添加代码的方式"><a href="#AOP：在系统运行时动态添加代码的方式" class="headerlink" title="AOP：在系统运行时动态添加代码的方式"></a>AOP：在系统运行时动态添加代码的方式</h3><ul><li><code>Joinpoint</code>(连接点)：类里面可以被增强的方法为连接点。例如，想修改哪个方法的功能，那么该方法就是一个连接点</li><li><code>Pointcut</code>(切入点)：对<code>Joinpoint</code>进行拦截的定义为切入点。例如，拦截所有以<code>insert</code>开始的方法，这个定义即为切入点</li><li><code>Advice</code>(通知)：拦截到<code>Joinpoint</code>之后要做的事就是通知。例如，打印日志监控。通知分为前置通知、后置通知、异常通知、最终通知和环绕通知</li><li><code>Aspect</code>(切面)：<code>Pointcut</code>和<code>Advice</code>的结合</li><li><code>Target</code>(目标对象)：要增强的类称为<code>Target</code></li></ul><p>首先引入<code>spring-boot-starter-aop</code>依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>然后创建<code>UserService</code>类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//com.wan.project.service</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"get..."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"user"</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteUserById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"delete..."</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>接下来创建切面</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogAspect</span> </span>{</span><br><span class="line">    <span class="meta">@Pointcut("execution(* com.wan.project.service.*.*(...))")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pc1</span><span class="params">()</span> </span>{</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Before(value="pc1()")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint jp)</span> </span>{</span><br><span class="line">        String name = jp.getSignature().getName();</span><br><span class="line">        System.out.println(name+<span class="string">"方法开始执行..."</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@After(value="pc1()")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(JoinPoint jp)</span> </span>{</span><br><span class="line">        String name = jp.getSignature().getName();</span><br><span class="line">        System.out.println(name+<span class="string">"方法执行结束..."</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@AfterReturning(value="pc1()",returning="result")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(JoinPoint jp,Object result)</span> </span>{</span><br><span class="line">        String name = jp.getSignature().getName();</span><br><span class="line">        System.out.println(name+<span class="string">"方法返回值为："</span>+result);</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@AfterThrowing(value="pc1()",throwing="e")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">(JoinPoint jp,Exception e)</span> </span>{</span><br><span class="line">        String name = jp.getSignature().getName();</span><br><span class="line">        System.out.println(name+<span class="string">"方法抛异常了，异常为："</span>+e.getMessage());</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Around(value="pc1()")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint pjp)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        <span class="keyword">return</span> pjp.proceed();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>@Aspect</code>表明这是一个切面类</li><li><p><code>pc1()</code>方法使用<code>@Pointcut</code>注解，这是一个切入点，为<code>service</code>包下所有类的所有方法</p><ul><li><code>execution</code>中的第一个<code>*</code>表示方法返回任意值</li><li><code>execution</code>中的第二个<code>*</code>表示<code>service</code>包下的任意类</li><li><code>execution</code>中的第三个<code>*</code>表示类中的任意方法，括号中的<code>..</code>表示方法参数任意</li></ul></li><li><p><code>@Before</code>表示这是前置通知，该方法在目标方法执行之前执行。通过<code>JoinPoint</code>参数可以获取目标方法的方法名、修饰符等信息</p></li><li><code>@After</code>表明这是后置通知，该方法在目标方法执行之后执行</li><li><code>@AfterReturning</code>表示这是返回通知，在该方法中可以获取目标方法的返回值</li><li><code>@AfterThrowing</code>表明这是异常通知，当目标方法发生异常时会调用</li><li><code>@Around</code>表明这是环绕通知。环绕通知功能最为强大，可以实现前置、后置、异常和返回通知的功能。目标方法进入环绕通知后，通过调用<code>ProceedingJoinPoint</code>对象的<code>proceed</code>方法使目标方法继续执行</li></ul><p>配置完成后，在<code>Controller</code>中调用<code>UserService</code>的方法，<code>LogAspect</code>的代码就会动态嵌入目标方法中执行</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line">    <span class="meta">@GetMapping("/getUserById")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> userService.getUserById(id);</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@GetMapping("/deleteUserById")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteUserById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> userService.deleteUserById(id);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Spring-Boot整合持久层"><a href="#Spring-Boot整合持久层" class="headerlink" title="Spring Boot整合持久层"></a>Spring Boot整合持久层</h1><h2 id="1-JdbcTemplate"><a href="#1-JdbcTemplate" class="headerlink" title="1. JdbcTemplate"></a>1. JdbcTemplate</h2><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connecter-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在<code>application.properties</code>中配置数据库基本连接信息：</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql:///test</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></tbody></table></figure><p>创建实体类<code>Book</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建数据库访问层<code>BookDao</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookDao</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JdbcTemplate jdbcTemplate;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"INSERT INTO book(name,author) VALUES (?,?)"</span>,book.getName(),book.getAuthor());</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateBook</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"UPDATE book SET name=?,author=? WHERE id=?"</span>,book.getName(),book.getAuthor(),book.getId());</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBook</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"DELETE FROM book WHERE id=? "</span>,book.getId());</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">getBookById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForObject(<span class="string">"SELECT * FROM book WHERE id=?"</span>,id);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.query(<span class="string">"SELECT * FROM book"</span>,<span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(Book.class));</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>增删改的操作主要使用<code>update</code>和<code>batchUpdate</code>方法完成</li><li>查主要通过<code>query</code>和<code>queryForObject</code>方法完成</li><li>除此之外还有<code>execute</code>方法用来执行任意的SQL、<code>call</code>方法用来调用存储过程等</li><li>执行查询操作时，需要一个<code>RowMapper</code>将查询的列和实体类中的属性一一对应<ul><li>若列名与属性名相同，可以直接使用<code>BeanPropertyRowMapper</code></li><li>若不相同，则需要实现<code>RowMapper</code>接口，将其一一对应</li></ul></li></ul><p>创建<code>BookService</code>和<code>BookController</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookService</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BookDao bookDao;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.addBook(book);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateBook</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.updateBook(book);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBook</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.deleteBook(id);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">getBookById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.getBookById(id);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.getAllBooks();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BookService bookService;</span><br><span class="line">    <span class="meta">@GetMapping("/bookOps")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bookOps</span><span class="params">()</span> </span>{</span><br><span class="line">        Book b1 = <span class="keyword">new</span> Book();</span><br><span class="line">        b1.setName(<span class="string">"aaa"</span>);</span><br><span class="line">        b1.setAuthor(<span class="string">"bbb"</span>);</span><br><span class="line">        <span class="keyword">int</span> id = bookService.addBook(b1);</span><br><span class="line">        System.out.println(<span class="string">"addBook:"</span>+id);</span><br><span class="line">        </span><br><span class="line">        Book b2 = <span class="keyword">new</span> Book();</span><br><span class="line">        b2.setName(<span class="string">"aaa1"</span>);</span><br><span class="line">        b2.setAuthor(<span class="string">"bbb1"</span>);</span><br><span class="line">        b2.setId(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> updateBook = bookService.updateBook(b2);</span><br><span class="line">        System.out.println(<span class="string">"updateBook:"</span>+updateBook);</span><br><span class="line">        </span><br><span class="line">        Book b3 = bookService.getBookById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">"getBookById:"</span>+b3);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> deleteBook = bookService.deleteBook(<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">"deleteBook:"</span>+deleteBook);</span><br><span class="line">        </span><br><span class="line">        List&lt;Book&gt; allBooks = bookService.getAllBooks();</span><br><span class="line">        System.out.println(<span class="string">"getAllBooks:"</span>+allBooks);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="2-MyBatis"><a href="#2-MyBatis" class="headerlink" title="2. MyBatis"></a>2. MyBatis</h2><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connecter-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在<code>application.properties</code>中配置数据库基本连接信息：</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql:///test</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></tbody></table></figure><p>创建实体类<code>Book</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.wan.project.model.Book</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建<code>BookMapper</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//com.wan.project.mapper</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookMapper</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Book book)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteBookById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateBookById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function">Book <span class="title">getBookById</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>指明该类是一个<code>Mapper</code>的方法：</p><ul><li>在<code>BookMapper</code>上添加<code>@Mapper</code>注解，需要在每一个<code>Mapper</code>上都添加注解</li><li>在配置类上添加<code>@MapperScan("com.wan.project.mapper")</code>注解，表明扫描<code>com.wan.project.mapper</code>包下的所有接口作为<code>Mapper</code></li></ul><p>创建<code>BookMapper.xml</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"org.wan.project.mapper.BookMapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addBook"</span> <span class="attr">parameterType</span>=<span class="string">"org.wan.project.model.Book"</span>&gt;</span></span><br><span class="line">    INSERT INTO book(name,author) VALUES (#{name},#{author});</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteBookById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">    DELETE FROM book WHERE id=#{id};</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateBook"</span> <span class="attr">parameterType</span>=<span class="string">"org.wan.project.model.Book"</span>&gt;</span></span><br><span class="line">    UPDATE book SET name=#{name},author=#{author} WHERE id=#{id};</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getBookById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>,<span class="attr">resultType</span>=<span class="string">"org.wan.project.model.Book"</span>&gt;</span></span><br><span class="line">    SELECT * FROM book WHERE id=#{id};</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAllBooks"</span> <span class="attr">resultType</span>=<span class="string">"org.wan.project.model.Book"</span>&gt;</span></span><br><span class="line">    SELECT * FROM book;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>创建<code>BookService</code>和<code>BookController</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookService</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BookMapper bookMapper;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookMapper.addBook(book);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateBook</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookMapper.updateBook(book);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteBook</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookMapper.deleteBook(id);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">getBookById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookMapper.getBookById(id);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookMapper.getAllBooks();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BookService bookService;</span><br><span class="line">    <span class="meta">@GetMapping("/bookOps")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bookOps</span><span class="params">()</span> </span>{</span><br><span class="line">        Book b1 = <span class="keyword">new</span> Book();</span><br><span class="line">        b1.setName(<span class="string">"aaa"</span>);</span><br><span class="line">        b1.setAuthor(<span class="string">"bbb"</span>);</span><br><span class="line">        <span class="keyword">int</span> id = bookService.addBook(b1);</span><br><span class="line">        System.out.println(<span class="string">"addBook:"</span>+id);</span><br><span class="line">        </span><br><span class="line">        Book b2 = <span class="keyword">new</span> Book();</span><br><span class="line">        b2.setName(<span class="string">"aaa1"</span>);</span><br><span class="line">        b2.setAuthor(<span class="string">"bbb1"</span>);</span><br><span class="line">        b2.setId(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> updateBook = bookService.updateBook(b2);</span><br><span class="line">        System.out.println(<span class="string">"updateBook:"</span>+updateBook);</span><br><span class="line">        </span><br><span class="line">        Book b3 = bookService.getBookById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">"getBookById:"</span>+b3);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> deleteBook = bookService.deleteBook(<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">"deleteBook:"</span>+deleteBook);</span><br><span class="line">        </span><br><span class="line">        List&lt;Book&gt; allBooks = bookService.getAllBooks();</span><br><span class="line">        System.out.println(<span class="string">"getAllBooks:"</span>+allBooks);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>配置<code>pom.xml</code></p><p>在<code>Maven</code>工程中，<code>XML</code>配置文件建议写在<code>resources</code>目录下，但本项目的<code>Mapper.xml</code>写在包下，<code>Maven</code>在运行时会忽略包下的<code>XML</code>文件，因此需要在<code>pom.xml</code>中重新指明资源文件位置：</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-Spring-Data-JPA"><a href="#3-Spring-Data-JPA" class="headerlink" title="3. Spring Data JPA"></a>3. Spring Data JPA</h2><p>创建数据库，不用创建表</p><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connecter-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在<code>application.properties</code>中配置数据库基本信息和JPA相关配置：</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql:///jpa</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.jpa.show-sql</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spring.jpa.database</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">spring.jpa.hibernate.ddl-auto</span>=<span class="string">update</span></span><br><span class="line"><span class="meta">spring.jpa.properties.hibernate.dialect</span>=<span class="string">org.hibernate.dialect.MySQL57Dialect</span></span><br></pre></td></tr></tbody></table></figure><p>创建实体类<code>Book</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.wan.project.model.Book</span></span><br><span class="line"><span class="meta">@Entity(name = "t_book")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GenerateValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="meta">@Column(name = "book_name",nullable = false)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="meta">@Transient</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>@Entity</code>:表示该类是一个实体类，项目启动时会根据该类自动生成一张表，表的名称为<code>@Entity</code>中<code>name</code>的值，如果不配置<code>name</code>，默认表名为类名</li><li><code>@Id</code>:表示该属性是一个主键，<code>@GenerateValue</code>表示主键自动生成，<code>strategy</code>表示主键的生成策略</li><li><code>@Column</code>定制生成字段的属性，<code>name</code>表示该属性对应的数据表中字段的名称，<code>nullable</code>表示该字段非空，默认生成表中字段名称就是实体类中属性的名称</li><li><code>@Transient</code>:表示在数据库中，该属性被忽略，不生成对应的字段</li></ul><p>创建<code>BookDao</code>接口，继承<code>JpaRepository</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookDao</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Book</span>,<span class="title">Integer</span>&gt; </span>{</span><br><span class="line">    <span class="function">List&lt;Book&gt; <span class="title">getBooksByAuthorStartingWith</span><span class="params">(String author)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Query(value = "select * from t_book where id=(select max(id) from t_book)",nativeQuery = true)</span></span><br><span class="line">    <span class="function">Book <span class="title">getMaxIdBook</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Query("select b from t_book b where b.id&gt;:id and b.author=:author")</span></span><br><span class="line">    <span class="function">List&lt;Book&gt; <span class="title">getBookByIdAndAuthor</span><span class="params">(<span class="meta">@Param("author")</span> String author,<span class="meta">@Param("id")</span> Integer id)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Query("select b from t_book b where b.id&gt;?2 and b.name like %?1%")</span></span><br><span class="line">    <span class="function">List&lt;Book&gt; <span class="title">getBookByIdAndAuthor</span><span class="params">(String name,Integer id)</span></span>;<span class="comment">//注意参数的顺序</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果<code>BookDao</code>中的方法涉及修改操作，需要添加<code>@Modifying</code>注解添加事务</p><p>Jpa的既定规范</p><div class="table-container"><table><thead><tr><th>KeyWords</th><th>方法名举例</th><th>对应的SQL</th></tr></thead><tbody><tr><td>And</td><td>findByNameAndAge</td><td>where name=? and age=?</td></tr><tr><td>Or</td><td>findByNameOrAge</td><td>where name=? or age=?</td></tr><tr><td>Is</td><td>findByAgeIs</td><td>where age=?</td></tr><tr><td>Equals</td><td>findIdEquals</td><td>where id=?</td></tr><tr><td>Between</td><td>findByAgeBetween</td><td>where age between ? and ?</td></tr><tr><td>LessThan</td><td>findByAgeLessThan</td><td>where age&lt;?</td></tr><tr><td>LessThanEquals</td><td>findByAgeLessThanEquals</td><td>where age&lt;=?</td></tr><tr><td>GreaterThan</td><td>findByAgeGreaterThan</td><td>where age&gt;?</td></tr><tr><td>GreaterThanEquals</td><td>findByAgeGreaterThanEquals</td><td>where age&gt;=?</td></tr><tr><td>After</td><td>findByAgeAfter</td><td>where age&gt;?</td></tr><tr><td>Before</td><td>findByAgeBefore</td><td>where age&lt;?</td></tr><tr><td>IsNull</td><td>findByNameIsNull</td><td>where name is null</td></tr><tr><td>isNotNull,NotNull</td><td>findByNameNotNull</td><td>where name is not null</td></tr><tr><td>Not</td><td>findByGenderNot</td><td>where gender &lt;&gt;?</td></tr><tr><td>In</td><td>findByAgeIn</td><td>where age in(?)</td></tr><tr><td>NotIn</td><td>findByAgeNotIn</td><td>where age not in(?)</td></tr><tr><td>Like</td><td>findByNameLike</td><td>where name like?</td></tr><tr><td>NotLike</td><td>findByNameNotLike</td><td>where name not like?</td></tr><tr><td>StartingWith</td><td>findByNameStartingWith</td><td>where name like ‘?%’</td></tr><tr><td>EndingWith</td><td>findByNameEndingWith</td><td>where name like ‘%?’</td></tr><tr><td>Containing,Contains</td><td>findByNameContaining</td><td>where name like ‘%?%’</td></tr><tr><td>OrderBy</td><td>findByGreaterThanOrderByIdDesc</td><td>where age&gt;? order by id desc</td></tr><tr><td>True</td><td>findByEnabledTrue</td><td>where enabled=true</td></tr><tr><td>False</td><td>findByEnabledFalse</td><td>where enabled=false</td></tr><tr><td>IgnoreCase</td><td>findByNameIgnoreCase</td><td>where UPPER(name) = UPPER(?)</td></tr></tbody></table></div><p>创建<code>BookService</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookService</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BookDao bookDao;</span><br><span class="line">    <span class="comment">//save方法由JpaRepository接口提供</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>{</span><br><span class="line">        bookDao.save(book);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//分页查询，返回值Page&lt;Book&gt;，该对象包含总记录数、总页数、每页记录数、当前页记录数等</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Book&gt; <span class="title">getBookByPage</span><span class="params">(Pageable pageable)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.findAll(pageable);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getBookByAuthorStartingWith</span><span class="params">(String author)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.getBookByAuthorStartingWith(author);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Book <span class="title">getMaxIdBook</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.getMaxIdBook();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getBookByIdAndAuthor</span><span class="params">(String author,Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.getBookByIdAndAuthor(author,id);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">getBookByIdAndName</span><span class="params">(String name,Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> bookDao.getBookByIdAndName(name,id);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建<code>BookController</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BookService bookService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping("/findAll")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">()</span> </span>{</span><br><span class="line">        PageRequest pageable = PageRequest.of(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">        Page&lt;Book&gt; page = bookService.getBookByPage(pageable);</span><br><span class="line">        System.out.println(<span class="string">"总页数："</span>+page.getTotalPages());</span><br><span class="line">        System.out.println(<span class="string">"总记录数："</span>+page.getTotalElements());</span><br><span class="line">        System.out.println(<span class="string">"查询结果："</span>+page.getContent());</span><br><span class="line">        System.out.println(<span class="string">"当前页数："</span>+page.getNumber()+<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">"当前页记录数："</span>+page.getNumberOfElements());</span><br><span class="line">        System.out.println(<span class="string">"每页记录数："</span>+page.getSize());</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping("/search")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">search</span><span class="params">()</span> </span>{</span><br><span class="line">        List&lt;Book&gt; bs1 = bookService.getBookByIdAndAuthor(<span class="string">"a"</span>,<span class="number">7</span>);</span><br><span class="line">        List&lt;Book&gt; bs2 = bookService.getBookByAuthorStartingWith(<span class="string">"b"</span>);</span><br><span class="line">        List&lt;Book&gt; bs3 = bookService.getBookByIdAndName(<span class="string">"ab"</span>,<span class="number">6</span>);</span><br><span class="line">        Book book = bookService.getMaxIdBook();</span><br><span class="line">        System.out.println(<span class="string">"bs1："</span>+bs1);</span><br><span class="line">        System.out.println(<span class="string">"bs2："</span>+bs2);</span><br><span class="line">        System.out.println(<span class="string">"bs3："</span>+bs3);</span><br><span class="line">        System.out.println(<span class="string">"book："</span>+book);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping("/save")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>{</span><br><span class="line">        Book book = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setAuthor(<span class="string">"xxx"</span>);</span><br><span class="line">        book.setName(<span class="string">"aaa"</span>);</span><br><span class="line">        bookSerevice.addBook(book);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="4-多数据源"><a href="#4-多数据源" class="headerlink" title="4. 多数据源"></a>4. 多数据源</h2><h3 id="1-JdbcTemplate多数据源"><a href="#1-JdbcTemplate多数据源" class="headerlink" title="1. JdbcTemplate多数据源"></a>1. JdbcTemplate多数据源</h3><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connecter-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在<code>application.properties</code>中配置数据库连接信息</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据源1</span></span><br><span class="line"><span class="meta">spring.datasource.one.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.one.url</span>=<span class="string">jdbc:mysql:///test-1</span></span><br><span class="line"><span class="meta">spring.datasource.one.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.one.password</span>=<span class="string">123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据源2</span></span><br><span class="line"><span class="meta">spring.datasource.two.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.two.url</span>=<span class="string">jdbc:mysql:///test-2</span></span><br><span class="line"><span class="meta">spring.datasource.two.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.two.password</span>=<span class="string">123456</span></span><br></pre></td></tr></tbody></table></figure><p>创建<code>DataSourceConfig</code>配置数据源，根据<code>application.properties</code>配置生成两个数据源</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>{</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties("spring.datasource.one")</span></span><br><span class="line">    <span class="function">DataSource <span class="title">dsOne</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> DuridDataSourceBuilder.create().builder();</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties("spring.datasource.two")</span></span><br><span class="line">    <span class="function">DataSource <span class="title">dsTwo</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> DuridDataSourceBuilder.create().builder();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>DataSourceConfig</code>提供两个数据源：<code>dsOne</code>和<code>dsTwo</code>，默认方法名即实例名</li><li><code>@ConfigurationProperties</code>注解表示使用不同前缀的配置文件来创建不同的<code>DataSource</code>实例</li></ul><p>配置<code>JdbcTemplate</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTemplateConfig</span> </span>{</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">JdbcTemplate <span class="title">jdbcTemplateOne</span><span class="params">(<span class="meta">@Qualifier("dsOne")</span> DataSource dataSource)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">JdbcTemplate <span class="title">jdbcTemplateTwo</span><span class="params">(<span class="meta">@Qualifier("dsTwo")</span> DataSource dataSource)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>JdbcTemplateConfig</code>提供两个<code>JdbcTemplate</code>实例，每个实例需要提供<code>DataSource</code>，并且通过<code>@Qualifier</code>注解查找不同名称的<code>DataSource</code>实例注入</li></ul><p>创建实体类<code>Book</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建<code>BookController</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Resource(name = "jdbaTemplateOne")</span></span><br><span class="line">    JdbcTemplate jdbaTemplateOne;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Quailfier("jdbcTemplateTwo")</span></span><br><span class="line">    JdbcTemplate jdbaTemplateTwo;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>注入<code>JdbcTemplate</code>的两种方式</p><ul><li><code>@Resource</code>，指明<code>name</code>属性</li><li><code>@Autowired</code>结合<code>@Qualifier</code>(效果等同与<code>@Resource</code>) </li></ul><h3 id="2-MyBatis多数据源"><a href="#2-MyBatis多数据源" class="headerlink" title="2. MyBatis多数据源"></a>2. MyBatis多数据源</h3><p>依赖配置，<code>DataSourceConfig</code>，<code>application.properties</code>，实体类<code>Book</code>同上</p><p>配置<code>MyBatis</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(value = "com.wan.project.mapper1",sqlSessionFactoryRef = "sqlSessionFactoryBean1")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisConfigOne</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("dsOne")</span></span><br><span class="line">    DataSource dsOne;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">SqlSessionFactory <span class="title">sqlSessionFactoryBea1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        SqlSessionFactoryBean ssfb = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        ssfb.setDataSource(dsOne);</span><br><span class="line">        <span class="keyword">return</span> ssfb.getObject();</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">SqlSessionTemplate <span class="title">sqlSessionTemplate1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        <span class="keyword">return</span> SqlSessionTemplate(sqlSessionFactoryBea1());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(value = "com.wan.project.mapper2",sqlSessionFactoryRef = "sqlSessionFactoryBean2")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisConfigOne</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier("dsTwo")</span></span><br><span class="line">    DataSource dsTwo;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">SqlSessionFactory <span class="title">sqlSessionFactoryBea2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        SqlSessionFactoryBean ssfb = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        ssfb.setDataSource(dsTwo);</span><br><span class="line">        <span class="keyword">return</span> ssfb.getObject();</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">SqlSessionTemplate <span class="title">sqlSessionTemplate2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        <span class="keyword">return</span> SqlSessionTemplate(sqlSessionFactoryBea2());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>@MapperScan</code>注解指定<code>Mapper</code>接口所在位置，同时指定<code>SqlSessionFactory</code>的实例名，该位置下的<code>Mapper</code>使用<code>SqlSessionFactory</code>实例</li><li>创建<code>SqlSessionFactory</code>实例，并将<code>DataSource</code>实例设置给<code>SqlSessionFactory</code>，该<code>SqlSessionFactory</code>实例就是<code>@MapperScan</code>中<code>sqlSessionFactoryRef</code>参数指定的实例</li><li>提供<code>SqlSessionTemplate</code>实例，这是一个线程安全类，用于管理<code>MyBatis</code>中的<code>SqlSession</code>操作</li></ul><p>创建<code>Mapper</code>及其相应的<code>Mapper</code>映射文件</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//com.wan.project.mapper1</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookMapper1</span> </span>{</span><br><span class="line">    <span class="function">List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"org.wan.project.mapper1.BookMapper1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAllBooks"</span> <span class="attr">resultType</span>=<span class="string">"org.wan.project.model.Book"</span>&gt;</span></span><br><span class="line">    SELECT * FROM book;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//com.wan.project.mapper2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookMapper2</span> </span>{</span><br><span class="line">    <span class="function">List&lt;Book&gt; <span class="title">getAllBooks</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"org.wan.project.mapper2.BookMapper2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getAllBooks"</span> <span class="attr">resultType</span>=<span class="string">"org.wan.project.model.Book"</span>&gt;</span></span><br><span class="line">    SELECT * FROM book;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>创建<code>Controller</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BookMapper1 bookMapper1;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BookMapper2 bookMapper2;</span><br><span class="line">    <span class="meta">@GetMapping("/test")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>{</span><br><span class="line">        List&lt;Book&gt; books1 = bookMapper1.getAllBooks();</span><br><span class="line">        List&lt;Book&gt; books2 = bookMapper2.getAllBooks();</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3-JPA多数据源"><a href="#3-JPA多数据源" class="headerlink" title="3. JPA多数据源"></a>3. JPA多数据源</h3><p>添加依赖并修改<code>application.properties</code></p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据源1</span></span><br><span class="line"><span class="meta">spring.datasource.one.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.one.url</span>=<span class="string">jdbc:mysql:///test-1</span></span><br><span class="line"><span class="meta">spring.datasource.one.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.one.password</span>=<span class="string">123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据源2</span></span><br><span class="line"><span class="meta">spring.datasource.two.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.two.url</span>=<span class="string">jdbc:mysql:///test-2</span></span><br><span class="line"><span class="meta">spring.datasource.two.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.two.password</span>=<span class="string">123456</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.jpa.properties.show-sql</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spring.jpa.properties.database</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">spring.jpa.properties.hibernate.hbm2ddl-auto</span>=<span class="string">update</span></span><br><span class="line"><span class="meta">spring.jpa.properties.hibernate.dialect</span>=<span class="string">org.hibernate.dialect.MySQL57Dialect</span></span><br></pre></td></tr></tbody></table></figure><p><code>DataSourceConfig</code>同上</p><p>创建实体类<code>User</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//com.wan.project.model.User</span></span><br><span class="line"><span class="meta">@Entity(name = "t_user")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>{</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GenerateValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建<code>JPA</code>配置</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(basePackages = "com.wan.project.dao1",</span></span><br><span class="line"><span class="meta">                      entityManagerFactoryRef = "entityManagerFactoryBeanOne",</span></span><br><span class="line"><span class="meta">                      transactionManagerRef = "platformTranscationManagerOne")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JpaConfigOne</span> </span>{</span><br><span class="line">    <span class="meta">@Resource(name = "dsOne")</span></span><br><span class="line">    DataSource dsOne;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JpaProperties jpaProperties;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function">LocalContainerEntityManagerFactoryBean <span class="title">entityManagerFactoryBeanOne</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> builder.dataSource(dsOne)</span><br><span class="line">            .properties(jpaProperties.getProperties())</span><br><span class="line">            .packages(<span class="string">"com.wan.project.model"</span>)</span><br><span class="line">            .persistenceUnit(<span class="string">"pu1"</span>)</span><br><span class="line">            .builder();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PlatformTransactionManager <span class="title">platformTransactionManagerOne</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>{</span><br><span class="line">        LocalContainerEntityManagerFactoryBean factoryOne = entityManagerFactoryBeanOne(builder);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JpaTransactionManager(factoryOne.getObject());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(basePackages = "com.wan.project.dao2",</span></span><br><span class="line"><span class="meta">                      entityManagerFactoryRef = "entityManagerFactoryBeanTwo",</span></span><br><span class="line"><span class="meta">                      transactionManagerRef = "platformTranscationManagerTwo")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JpaConfigOne</span> </span>{</span><br><span class="line">    <span class="meta">@Resource(name = "dsTwo")</span></span><br><span class="line">    DataSource dsTwo;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JpaProperties jpaProperties;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">LocalContainerEntityManagerFactoryBean <span class="title">entityManagerFactoryBeanTwo</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> builder.dataSource(dsTwo)</span><br><span class="line">            .properties(jpaProperties.getProperties())</span><br><span class="line">            .packages(<span class="string">"com.wan.project.model"</span>)</span><br><span class="line">            .persistenceUnit(<span class="string">"pu2"</span>)</span><br><span class="line">            .builder();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PlatformTransactionManager <span class="title">platformTransactionManagerTwo</span><span class="params">(EntityManagerFactoryBuilder builder)</span> </span>{</span><br><span class="line">        LocalContainerEntityManagerFactoryBean factoryOne = entityManagerFactoryBeanTwo(builder);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JpaTransactionManager(factoryOne.getObject());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><p><code>@EnableJpaRepositories</code>注解进行<code>JPA</code>配置，主要配置三个属性</p><ul><li><code>basePackages</code>:指定<code>Repository</code>的位置</li><li><code>entityManagerFactoryRef</code>:指定实体类管理工厂<code>Bean</code>的名称</li><li><code>transcationManagerRef</code>:指定事务管理器的引用名称，此处的引用名称就是<code>JpaConfigOne</code>类中注册的<code>Bean</code>的名称(默认<code>Bean</code>名称为方法名)</li></ul></li><li><p>创建<code>LocalContainerEntityManagerFactoryBean</code>,该<code>Bean</code>用于提供<code>EntityManager</code>实例，该类的创建过程：</p><ul><li>首先配置数据源</li><li>设置JPA相关设置(<code>JpaProperties</code>由系统自动加载)</li><li>设置实体类所在位置</li><li>配置持久化单元名(若项目中只有一个<code>EntityManagerFactory</code>，<code>persistenceUint</code>可以省略，否则必须明确指定)</li></ul></li><li><p>项目中有多个<code>LocalContainerEntityManagerFactoryBean</code>实例时，<code>@Primary</code>表示该实例优先使用</p></li><li><p><code>JpaTransactionManage</code>提供对单个<code>EntityManagerFactory</code>的事务支持，专门用于解决<code>JPA</code>的事务管理</p></li></ul><p>创建<code>Repository</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//com.wan.project.dao1</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao1</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>,<span class="title">Integer</span>&gt; </span>{</span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//com.wan.project.dao2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao2</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>,<span class="title">Integer</span>&gt; </span>{</span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建<code>Controller</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserDao1 userDao1;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserDao2 userDao2;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping("/test")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>{</span><br><span class="line">        User u1 = <span class="keyword">new</span> User();</span><br><span class="line">        u1.setAge(<span class="number">22</span>);</span><br><span class="line">        u1.setName(<span class="string">"wan"</span>);</span><br><span class="line">        userDao1.save(u1);</span><br><span class="line">        </span><br><span class="line">        User u2 = <span class="keyword">new</span> User();</span><br><span class="line">        u2.setAge(<span class="number">23</span>);</span><br><span class="line">        u2.setName(<span class="string">"li"</span>);</span><br><span class="line">        userDao2.save(u2);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="Spring-Boot整合NoSQL"><a href="#Spring-Boot整合NoSQL" class="headerlink" title="Spring Boot整合NoSQL"></a>Spring Boot整合NoSQL</h1><h2 id="1-Redis"><a href="#1-Redis" class="headerlink" title="1. Redis"></a>1. Redis</h2><h3 id="Redis安装"><a href="#Redis安装" class="headerlink" title="Redis安装"></a>Redis安装</h3><p>下载<code>Redis</code>:</p><p><code>wget http://download.redis.io/releases/redis-4.0.10.tar.gz</code></p><p>解压并编译：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-4.0.10.tar.gz</span><br><span class="line">cd redis-4.0.10</span><br><span class="line">make MALLOC=libc</span><br><span class="line">make install</span><br></pre></td></tr></tbody></table></figure><p>配置<code>Redis</code>：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 后台运行</span><br><span class="line">daemonize yes</span><br><span class="line"># 关闭该设置，使外网可以连接</span><br><span class="line"># bind 127.0.0.1</span><br><span class="line"># 关闭保护模式</span><br><span class="line">protected-mode no</span><br></pre></td></tr></tbody></table></figure><p>配置<code>CentOS</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止开机启动</span></span><br><span class="line">systemctl disable firewalld.service </span><br></pre></td></tr></tbody></table></figure><p><code>Redis</code>启动与关闭</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动(指定redis.conf)</span></span><br><span class="line">redis-server redis.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入</span></span><br><span class="line">redis-cli</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭</span></span><br><span class="line">redis-cli shutdown</span><br></pre></td></tr></tbody></table></figure><h3 id="Redis整合"><a href="#Redis整合" class="headerlink" title="Redis整合"></a>Redis整合</h3><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>配置<code>Redis</code>和连接池</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.redis.database</span>=<span class="string">0</span></span><br><span class="line"><span class="meta">spring.redis.password</span>=<span class="string"></span></span><br><span class="line"><span class="meta">spring.redis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">spring.redis.host</span>=<span class="string">192.168.2.2</span></span><br><span class="line"><span class="meta">spring.redis.lettuce.pool.min-idle</span>=<span class="string">5</span></span><br><span class="line"><span class="meta">spring.redis.lettuce.pool.max-idle</span>=<span class="string">10</span></span><br><span class="line"><span class="meta">spring.redis.lettuce.pool.max-active</span>=<span class="string">8</span></span><br><span class="line"><span class="meta">spring.redis.lettuce.pool.max-wait</span>=<span class="string">1ms</span></span><br><span class="line"><span class="meta">spring.redis.lettuce.shutdown-timeout</span>=<span class="string">100ms</span></span><br></pre></td></tr></tbody></table></figure><p>创建实体类<code>Book</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建<code>Controller</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RedisTemplate redisTenplate;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StringRedisTemplate stringRedisTemplate;</span><br><span class="line">    <span class="meta">@GetMapping("/test")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>{</span><br><span class="line">        ValueOperations&lt;String,String&gt; ops1 = stringRedisTemplate.opsForValue();</span><br><span class="line">        ops1.set(<span class="string">"name"</span>,<span class="string">"www"</span>);</span><br><span class="line">        System.out.println(ops1.get(<span class="string">"name"</span>));</span><br><span class="line">        ValueOperations ops2 = redisTemplate.opsForValue();</span><br><span class="line">        Book b1 = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setId(<span class="number">1</span>);</span><br><span class="line">        book.setName(<span class="string">"fff"</span>);</span><br><span class="line">        ops2.set(<span class="string">"b1"</span>,b1);</span><br><span class="line">        Book b2 = (Book)ops.get(<span class="string">"b1"</span>);</span><br><span class="line">        System.out.println(b2;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>StringRedisTemplate</code>是<code>RedisTemplate</code>的子类，<code>StringRedisTemplate</code>中的<code>key</code>和<code>value</code>都是<code>String</code>，采用的序列化方案是<code>StringSerializer</code>；而<code>RedisTemplate</code>可以操作对象，采用的序列化方案是<code>JdkSerializationRedisSerializer</code></p><h3 id="Redis集群整合-…"><a href="#Redis集群整合-…" class="headerlink" title="Redis集群整合(…)"></a>Redis集群整合(…)</h3><h2 id="2-MongoDB"><a href="#2-MongoDB" class="headerlink" title="2. MongoDB"></a>2. MongoDB</h2><h3 id="MongoDB安装"><a href="#MongoDB安装" class="headerlink" title="MongoDB安装"></a>MongoDB安装</h3><p>下载<code>MongoDB</code></p><p><code>wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.0.tgz</code></p><p>解压并重命名</p><p><code>tar -zxvf mongodb-linux-x86_64-4.0.0.tgz</code></p><p><code>mv mongodb-linux-x86_64-4.0.0 mongodb</code></p><p>配置<code>MongoDB</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd mongodb</span><br><span class="line">mkdir db</span><br><span class="line">mkdir logs</span><br></pre></td></tr></tbody></table></figure><p>在<code>bin</code>目录下创建<code>mongo.conf</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dbpath=/xxx/mongodb/db</span><br><span class="line">logpath=/xxx/mogodb/logs</span><br><span class="line">port=27017</span><br><span class="line"># 以守护进程方式运行</span><br><span class="line">fork=true</span><br></pre></td></tr></tbody></table></figure><p>在<code>bin</code>目录下启动与关闭</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">./mongod -f -config mongo.conf --bind ip_all</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入</span></span><br><span class="line">./mongo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭</span></span><br><span class="line">./mongod -shutdown -config mongo.conf</span><br></pre></td></tr></tbody></table></figure><h3 id="MongoDB整合"><a href="#MongoDB整合" class="headerlink" title="MongoDB整合"></a>MongoDB整合</h3><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>配置<code>MongoDB</code></p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.data.mongodb.database</span>=<span class="string">test</span></span><br><span class="line"><span class="meta">spring.data.mongodb.host</span>=<span class="string">192.168.2.2</span></span><br><span class="line"><span class="meta">spring.data.mongodb.port</span>=<span class="string">27017</span></span><br><span class="line"><span class="comment">#验证登录信息的库 </span></span><br><span class="line"><span class="comment">#spring.data.mongodb.authentication-database=admin</span></span><br><span class="line"><span class="comment"># spring.data.mongodb.username=xxx</span></span><br><span class="line"><span class="comment"># spring.data.mongodb.password=123</span></span><br></pre></td></tr></tbody></table></figure><p>创建实体类<code>Book</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建<code>Controller</code>，使用<code>MongoTemplate</code>(还可以使用<code>MongoRepository</code>)</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    MongoTemplate mongoTemplate;</span><br><span class="line">    <span class="meta">@GetMapping("/test")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">        List&lt;Book&gt; books = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Book b1 = <span class="keyword">new</span> Book();</span><br><span class="line">        b1.setId(<span class="number">1</span>);</span><br><span class="line">        b1.setName(<span class="string">"www"</span>);</span><br><span class="line">        books.add(b1);</span><br><span class="line">        mongoTemplate.insertAll(books);</span><br><span class="line">        List&lt;Book&gt; list = mongoTemplate.findAll(Book.class);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        Book book = mongoTemplate.findById(<span class="number">1</span>,Book.class);</span><br><span class="line">        System.out.println(book);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="3-Session共享"><a href="#3-Session共享" class="headerlink" title="3. Session共享"></a>3. Session共享</h2><p><code>Session</code>共享配置</p><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.redis.host</span>=<span class="string">192.168.2.2</span></span><br><span class="line"><span class="meta">spring.redis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">spring.redis.password</span>=<span class="string"></span></span><br><span class="line"><span class="meta">spring.redis.database</span>=<span class="string">0</span></span><br></pre></td></tr></tbody></table></figure><p>创建<code>Controller</code>，(配置完成后 ，就可以使用 <code>Spring Session</code> 了，其实就是使用普通的 <code>HttpSession</code> ，其他的 <code>Session</code> 同步到 <code>Redis</code> 等操作，框架已经自动帮你完成了)</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>{</span><br><span class="line">    <span class="meta">@Value("${server.port}")</span></span><br><span class="line">    Integer port;</span><br><span class="line">    <span class="meta">@GetMapping("/set")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">set</span><span class="params">(HttpSession session)</span> </span>{</span><br><span class="line">        session.setAttribute(<span class="string">"user"</span>, <span class="string">"wan"</span>);</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(port);</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@GetMapping("/get")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(HttpSession session)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> session.getAttribute(<span class="string">"user"</span>) + <span class="string">":"</span> + port;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行项目</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nohup表示不挂断程序运行，&amp;表示后台运行</span></span><br><span class="line">nohup java -jar xxx.jar --server.port=8080 &amp;</span><br><span class="line">nohup java -jar xxx.jar --server.port=8081 &amp;</span><br></pre></td></tr></tbody></table></figure><p><code>Nginx</code>负载均衡</p><p>下载<code>Nginx</code>并解压</p><p><code>wget https://nginx.org/download/nginx-1.14.0.tar.gz</code></p><p><code>tar -zxvf nginx-1.14.0.tar.gz</code></p><p>进入解压目录执行编译安装 </p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.14.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></tbody></table></figure><p>完成后，在<code>Nginx</code>安装目录下启动<code>Nginx</code>(默认端口80)</p><p><code>./sbin/nginx</code></p><p>然后修改<code>nginx.conf</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream wan.org{</span><br><span class="line">server 127.0.0.1:8080 weight=1;</span><br><span class="line">server 127.0.0.1:8081 weight=2;</span><br><span class="line">}</span><br><span class="line">server {</span><br><span class="line">listen       80;</span><br><span class="line">server_name  localhost;</span><br><span class="line">#...</span><br><span class="line">location / {</span><br><span class="line">proxy_pass     http://wan.org;</span><br><span class="line">proxy_redirect default;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>upstream</code>表示配置上游服务器</li><li><code>wan.org</code>表示服务器集群的名字，随意取</li><li><code>server</code>表示单独的服务</li><li><code>weight</code>表示服务权重，即有多少比例的请求从<code>Nginx</code>转发到该服务器</li><li><code>location</code>中<code>proxy_pass</code>表示请求转发的地址，<code>/</code>表示拦截所有请求，转发到配置的服务器集群中</li></ul><p>重启<code>Nginx</code></p><p><code>./sbin/nginx -s reload</code></p><h1 id="Spring-Boot构建RESTful服务-…"><a href="#Spring-Boot构建RESTful服务-…" class="headerlink" title="Spring Boot构建RESTful服务(…)"></a>Spring Boot构建RESTful服务(…)</h1><h2 id="1-JPA实现REST"><a href="#1-JPA实现REST" class="headerlink" title="1. JPA实现REST"></a>1. JPA实现REST</h2><h2 id="2-MongoDB实现REST"><a href="#2-MongoDB实现REST" class="headerlink" title="2. MongoDB实现REST"></a>2. MongoDB实现REST</h2><h1 id="开发者工具与单元测试"><a href="#开发者工具与单元测试" class="headerlink" title="开发者工具与单元测试"></a>开发者工具与单元测试</h1><h2 id="1-devtools-…"><a href="#1-devtools-…" class="headerlink" title="1. devtools(…)"></a>1. devtools(…)</h2><h2 id="2-单元测试"><a href="#2-单元测试" class="headerlink" title="2. 单元测试"></a>2. 单元测试</h2><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>创建测试类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01ApplicationTests</span> </span>{</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>{</span><br><span class="line">        </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><code>@RunWith</code>，将<code>JUint</code>执行类修改为<code>SpringRunner</code>，<code>SpringRunner</code>是<code>SpringFramework</code>中测试类<code>SpringJUint4ClassRunner</code>的别名</li><li><code>@SpringBootTest</code>提供<code>SprinTestContext</code>中的常规测试功能外，还提供其他特性：<ul><li>默认的<code>ContextLoader</code></li><li>自动搜索<code>@SpringBootConfiguration</code></li><li>自定义环境属性</li><li>支持不同的<code>webEnvironment</code>，主要有四种：<ul><li><code>MOCK</code></li><li><code>RANDOM_PORT</code></li><li><code>DEFINED_PORT</code></li><li><code>NONE</code>(一般不适于<code>Web</code>测试)</li></ul></li></ul></li><li><code>@Test</code>来自于<code>JUint</code>,<code>JUint</code>的其他注解也可以使用</li></ul><p><code>Service</code>测试</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloService</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello "</span> + name + <span class="string">" !"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01ApplicationTests</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    HelloService helloService;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>{</span><br><span class="line">        String hello = helloService.sayHello(<span class="string">"W"</span>);</span><br><span class="line">        Assert.assertThat(hello,Matchers.is(<span class="string">"Hello W !"</span>));</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>Controller</code>测试</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>{</span><br><span class="line">    <span class="meta">@GetMapping("/hello")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(String name)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello "</span>+name+<span class="string">" !"</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@PostMapping("/book")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addBook</span><span class="params">(<span class="meta">@RequestBody</span> Book book)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> book.toString();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01ApplicationTests</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    HelloController helloController;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    WebApplicaionContext wac;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    MockMvc mockMvc;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>{</span><br><span class="line">        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        MvcResult mvcResult = mockMvc</span><br><span class="line">            .perform( MockMvcRequestBuilders</span><br><span class="line">            .get(<span class="string">"/hello"</span>)</span><br><span class="line">           .contentType(Media.APPLICATION_FORM_URLENCODED)</span><br><span class="line">            .param(<span class="string">"name"</span>,<span class="string">"W"</span>))</span><br><span class="line">            .addExpect(MockMvcResultMatchers.status().isOk())</span><br><span class="line">            .addDo(MockMvcResultHandlers.print())</span><br><span class="line">            .addReturn();</span><br><span class="line">        System.out.println(mvcResult.getResponse().getContentAsString());</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        Book book = <span class="keyword">new</span> Book();</span><br><span class="line">        book.setId(<span class="number">1</span>);</span><br><span class="line">        book.setName(<span class="string">"W"</span>);</span><br><span class="line">        String s = om.writeValueAsString(book);</span><br><span class="line">        MvcResult mvcResult = mockMvc</span><br><span class="line">            .perform( MockMvcRequestBuilders</span><br><span class="line">            .post(<span class="string">"/book"</span>)</span><br><span class="line">           .contentType(Media.APPLICATION_JSON)</span><br><span class="line">            .content(s))</span><br><span class="line">            .addExpect(MockMvcResultMatchers.status().isOk())</span><br><span class="line">            .addReturn();</span><br><span class="line">        System.out.println(mvcResult.getResponse().getContentAsString());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>注入<code>WebApplicationContext</code>模拟<code>ServletContext</code>环境</li><li>声明<code>MockMvc</code>对象，并且在测试方法执行之前进行<code>MockMvc</code>的初始化</li><li><code>perform</code>方法开启一个<code>RequestBuilder</code>请求，具体请求通过<code>MockMvcRequestBuilders</code>构建</li></ul><p><code>JSON</code>测试(…)</p><h1 id="Spring-Boot缓存"><a href="#Spring-Boot缓存" class="headerlink" title="Spring Boot缓存"></a>Spring Boot缓存</h1><h2 id="1-Ehcache-2-x缓存-…"><a href="#1-Ehcache-2-x缓存-…" class="headerlink" title="1. Ehcache 2.x缓存(…)"></a>1. Ehcache 2.x缓存(…)</h2><h2 id="2-Redis单机缓存"><a href="#2-Redis单机缓存" class="headerlink" title="2. Redis单机缓存"></a>2. Redis单机缓存</h2><p>添加依赖</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>添加配置</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.redis.database</span>=<span class="string">0</span></span><br><span class="line"><span class="meta">spring.redis.password</span>=<span class="string"></span></span><br><span class="line"><span class="meta">spring.redis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">spring.redis.host</span>=<span class="string">192.168.2.2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.cache.cache-names</span>=<span class="string">c1</span></span><br></pre></td></tr></tbody></table></figure><p>开启缓存</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableCaching</span><span class="comment">//开启缓存</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"> SpringApplication.run(Application.class, args);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>核心注解</p><ul><li>@CacheConfig:这个注解在类上使用，用来描述该类中所有方法使用的缓存名称</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@CacheConfig(cacheNames = "c1")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>{</span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>@Cacheable:一般加在查询方法上，表示将一个方法的返回值缓存起来，默认情况下，缓存的key就是方法的参数，缓存的value就是方法的返回值</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cacheable(key = "#id")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUserById</span> <span class="params">(Integer id,String username)</span> </span>{</span><br><span class="line">    System.out.println(<span class="string">"getUserById"</span>);</span><br><span class="line">    <span class="keyword">return</span> getUserFromDBById(id);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>@CachePut:一般加在更新方法上，当数据库中的数据更新后，缓存中的数据也要跟着更新，使用该注解，可以将方法的返回值自动更新到已经存在的key上</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CachePut(key = "#user.id")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">updateUserById</span><span class="params">(User user)</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>@CacheEvict:一般加在删除方法上，当数据库中的数据删除后，相关的缓存数据也要自动清除，该注解在使用的时候也可以配置按照某种条件删除（condition属性）或者或者配置清除所有缓存（allEntries属性）</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheEvict()</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteUserById</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">    <span class="comment">//在这里执行删除操作， 删除是去数据库中删除</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="3-Redis集群缓存-…"><a href="#3-Redis集群缓存-…" class="headerlink" title="3. Redis集群缓存(…)"></a>3. Redis集群缓存(…)</h2><h1 id="Spring-Boot安全管理"><a href="#Spring-Boot安全管理" class="headerlink" title="Spring Boot安全管理"></a>Spring Boot安全管理</h1><h2 id="1-Spring-Security"><a href="#1-Spring-Security" class="headerlink" title="1. Spring Security"></a>1. Spring Security</h2><h2 id="2-基于数据库的认证"><a href="#2-基于数据库的认证" class="headerlink" title="2. 基于数据库的认证"></a>2. 基于数据库的认证</h2><h2 id="3-高级配置"><a href="#3-高级配置" class="headerlink" title="3. 高级配置"></a>3. 高级配置</h2><h2 id="4-OAuth-2"><a href="#4-OAuth-2" class="headerlink" title="4. OAuth 2"></a>4. OAuth 2</h2><h2 id="5-Shiro"><a href="#5-Shiro" class="headerlink" title="5. Shiro"></a>5. Shiro</h2><h1 id="Spring-Boot整合WebSocket"><a href="#Spring-Boot整合WebSocket" class="headerlink" title="Spring Boot整合WebSocket"></a>Spring Boot整合WebSocket</h1><h1 id="消息服务"><a href="#消息服务" class="headerlink" title="消息服务"></a>消息服务</h1><h2 id="1-JMS"><a href="#1-JMS" class="headerlink" title="1. JMS"></a>1. JMS</h2><h2 id="2-AMQP"><a href="#2-AMQP" class="headerlink" title="2. AMQP"></a>2. AMQP</h2><h1 id="企业开发"><a href="#企业开发" class="headerlink" title="企业开发"></a>企业开发</h1><h2 id="1-邮件发送"><a href="#1-邮件发送" class="headerlink" title="1. 邮件发送"></a>1. 邮件发送</h2><h2 id="2-定时任务"><a href="#2-定时任务" class="headerlink" title="2. 定时任务"></a>2. 定时任务</h2><h2 id="3-批处理"><a href="#3-批处理" class="headerlink" title="3. 批处理"></a>3. 批处理</h2><h2 id="4-Swagger2"><a href="#4-Swagger2" class="headerlink" title="4. Swagger2"></a>4. Swagger2</h2><h2 id="5-数据校验"><a href="#5-数据校验" class="headerlink" title="5. 数据校验"></a>5. 数据校验</h2><h1 id="应用监控"><a href="#应用监控" class="headerlink" title="应用监控"></a>应用监控</h1><h2 id="1-监控端点配置"><a href="#1-监控端点配置" class="headerlink" title="1. 监控端点配置"></a>1. 监控端点配置</h2><h2 id="2-监控信息可视化"><a href="#2-监控信息可视化" class="headerlink" title="2. 监控信息可视化"></a>2. 监控信息可视化</h2><h2 id="3-邮件报警"><a href="#3-邮件报警" class="headerlink" title="3. 邮件报警"></a>3. 邮件报警</h2><h1 id="项目构建与部署"><a href="#项目构建与部署" class="headerlink" title="项目构建与部署"></a>项目构建与部署</h1><h2 id="1-构建JAR"><a href="#1-构建JAR" class="headerlink" title="1. 构建JAR"></a>1. 构建JAR</h2><h2 id="2-构建WAR"><a href="#2-构建WAR" class="headerlink" title="2. 构建WAR"></a>2. 构建WAR</h2>]]></content>
    
    
    <summary type="html">Spring Boot+Vue全栈开发实战笔记</summary>
    
    
    
    <category term="Spring Boot" scheme="https://wanfengyueluo.github.io/categories/Spring-Boot/"/>
    
    
    <category term="Spring Boot" scheme="https://wanfengyueluo.github.io/tags/Spring-Boot/"/>
    
    <category term="Vue" scheme="https://wanfengyueluo.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之简单工厂</title>
    <link href="https://wanfengyueluo.github.io/2020/11/07/she-ji-mo-shi-zhi-jian-dan-gong-han/"/>
    <id>https://wanfengyueluo.github.io/2020/11/07/she-ji-mo-shi-zhi-jian-dan-gong-han/</id>
    <published>2020-11-07T08:17:29.000Z</published>
    <updated>2021-06-03T13:31:51.774Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前提假设：现在有一个新开的奶茶店<code>Store</code>,只能制作一种奶茶。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/design-pattern1.png" alt="image-20201203104847731"></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MilkTea.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MilkTea</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span></span>{</span><br><span class="line">System.out.println(<span class="string">"制作奶茶"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Store.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Store</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> MilkTea <span class="title">createMilkTea</span><span class="params">()</span></span>{</span><br><span class="line">MilkTea milkTea = <span class="keyword">new</span> MilkTea();</span><br><span class="line">milkTea.prepare();</span><br><span class="line"><span class="keyword">return</span> milkTea;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p> 奶茶店的生意越来越好，老板决定推出几种新口味的奶茶</p></blockquote><p>将<code>MilkTea</code>类设置为抽象类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MilkTea.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">MilkTea</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span> </span>{</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>创建<code>LemonMilkTea</code>和<code>AppleMilkTea</code>两个类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//LemonMilkTea.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LemonMilkTea</span> <span class="keyword">extends</span> <span class="title">MilkTea</span></span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"制作柠檬奶茶"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AppleMilkTea.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleMilkTea</span> <span class="keyword">extends</span> <span class="title">MilkTea</span></span>{</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span> </span>{</span><br><span class="line">System.out.println(<span class="string">"制作苹果奶茶"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Store.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Store</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> MilkTea <span class="title">createMilkTea</span><span class="params">(String type)</span> </span>{</span><br><span class="line">MilkTea milkTea = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (type.equals(<span class="string">"lemon"</span>)) {</span><br><span class="line">milkTea = <span class="keyword">new</span> LemonMilkTea();</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (type.equals(<span class="string">"apple"</span>)) {</span><br><span class="line">milkTea = <span class="keyword">new</span> AppleMilkTea();</span><br><span class="line">}</span><br><span class="line"><span class="comment">//暂不考虑milkTea==null的情况</span></span><br><span class="line">milkTea.prepare();</span><br><span class="line"><span class="keyword">return</span> milkTea;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>现在复杂的场景来了，随着业务的发展，有的口味不受用户喜欢，销量惨淡，老板要将这些口味的奶茶砍掉，并且重新创造新的口味，于是在原来的<code>createMilkTea</code>方法中需要不断的重复添加和删除<code>if-else</code>语句，并且可能在<code>Store</code>的业务中不仅仅只有<code>createNilkTea</code>一个方法，其他的方法也可能会包含上述的大量<code>if-else</code>添加删除操作，所以需要将创造<code>milkTea</code>的代码抽离出来，用另外一个对象来进行操控，这个对象就可以称之为“工厂”。</p></blockquote><p>创建工厂<code>SimpleFactory.java</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleFactory</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> MilkTea <span class="title">createMilkTea</span><span class="params">(String type)</span> </span>{</span><br><span class="line">MilkTea milkTea = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (type.equals(<span class="string">"lemon"</span>)) {</span><br><span class="line">milkTea = <span class="keyword">new</span> LemonMilkTea();</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (type.equals(<span class="string">"apple"</span>)) {</span><br><span class="line">milkTea = <span class="keyword">new</span> AppleMilkTea();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> milkTea;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Store.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Store</span> </span>{</span><br><span class="line">SimpleFactory factory;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Store</span><span class="params">(SimpleFactory factory)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.factory = factory;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> MilkTea <span class="title">createMilkTea</span><span class="params">(String type)</span> </span>{</span><br><span class="line">MilkTea milkTea = factory.createMilkTea(type);</span><br><span class="line"><span class="comment">//暂不考虑milkTea==null的情况</span></span><br><span class="line">milkTea.prepare();</span><br><span class="line"><span class="keyword">return</span> milkTea;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>简单工厂其实不是一个设计模式，反而像是一种编程习惯。</p><p>参考书籍：Head First设计模式第四章“烘烤OO的精华：工厂模式”</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/design-pattern1.png" alt="image-20201107205416084"></p>]]></content>
    
    
    <summary type="html">设计模式入门第一关，简单工厂</summary>
    
    
    
    <category term="设计模式" scheme="https://wanfengyueluo.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="Java" scheme="https://wanfengyueluo.github.io/tags/Java/"/>
    
    <category term="设计模式" scheme="https://wanfengyueluo.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="工厂" scheme="https://wanfengyueluo.github.io/tags/%E5%B7%A5%E5%8E%82/"/>
    
  </entry>
  
  <entry>
    <title>Vuex入门</title>
    <link href="https://wanfengyueluo.github.io/2020/11/04/vuex-ru-men/"/>
    <id>https://wanfengyueluo.github.io/2020/11/04/vuex-ru-men/</id>
    <published>2020-11-04T07:29:35.000Z</published>
    <updated>2021-06-03T13:31:51.763Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/vuejs/vuex/dev/docs/.vuepress/public/vuex.png" alt="Centralized State Management for Vue.js."></p><h3 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h3><p>初始化项目，项目目录为：</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">│  .gitignore</span><br><span class="line">│  babel.config.js</span><br><span class="line">│  package-lock.json</span><br><span class="line">│  package.json</span><br><span class="line">│  README.md</span><br><span class="line">│  </span><br><span class="line">├─node_modules       </span><br><span class="line">├─public</span><br><span class="line">│      favicon.ico</span><br><span class="line">│      index.html</span><br><span class="line">│      </span><br><span class="line">└─src</span><br><span class="line">    │  App.vue</span><br><span class="line">    │  main.js</span><br><span class="line">    │  </span><br><span class="line">    ├─assets</span><br><span class="line">    │      logo.png</span><br><span class="line">    │      </span><br><span class="line">    ├─components</span><br><span class="line">    │      HelloWorld.vue</span><br><span class="line">    │      </span><br><span class="line">    └─store</span><br><span class="line">            index.js</span><br></pre></td></tr></tbody></table></figure><p>初始<code>App.vue</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id="app"&gt;</span><br><span class="line">    &lt;HelloWorld /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from "./components/HelloWorld.vue";</span><br><span class="line"></span><br><span class="line">export default {</span><br><span class="line">  name: "App",</span><br><span class="line">  components: {</span><br><span class="line">    HelloWorld,</span><br><span class="line">  },</span><br><span class="line">};</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></tbody></table></figure><p>初始<code>HelloWorld.vue</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class="hello"&gt;</span><br><span class="line">    &lt;h1&gt;Vuex 示例&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default {</span><br><span class="line">  name: "HelloWorld",</span><br><span class="line">};</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>初始化的<code>Vuex</code>在<code>/src/store</code>目录下的<code>index.js</code>:</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store({</span><br><span class="line">    state: {},</span><br><span class="line">    mutations: {},</span><br><span class="line">    actions: {},</span><br><span class="line">    modules: {}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>此时页面显示效果：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201104165246857.png" alt="image-20201104165246857"></p><h3 id="state"><a href="#state" class="headerlink" title="state"></a>state</h3><p>在组件中引入<code>Vuex</code>中的状态</p><ol><li><p>直接引入</p><p>直接修改<code>HelloWorld.vue</code>的h标签</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>{{ this.$store.state.msg }}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在<code>index.js</code>中加入</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">state: {</span><br><span class="line">        msg: <span class="string">'this is vuex --- Vuex'</span></span><br><span class="line">    },</span><br></pre></td></tr></tbody></table></figure><p>显示结果为：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201105084551745.png" alt="image-20201105084551745"></p></li><li><p>计算属性引入</p><p>在<code>HelloWorld.vue</code>中增加计算属性，h标签和上面保持一致</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> {</span><br><span class="line">    name: <span class="string">"HelloWorld"</span>,</span><br><span class="line">    computed: {</span><br><span class="line">        <span class="function"><span class="title">msg</span>(<span class="params"></span>)</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.$store.state.msg</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>显示结果为：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201105085912982.png" alt="image-20201105085912982"></p></li><li><p><code>mapState</code>辅助函数</p><p>修改<code>HelloWorld.vue</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class="hello"&gt;</span><br><span class="line">    &lt;h1&gt;{{ msg }}&lt;/h1&gt;</span><br><span class="line">    &lt;h1&gt;{{ msgAlias }}&lt;/h1&gt;</span><br><span class="line">    &lt;h1&gt;{{ msgAddLocation }}&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import {</span><br><span class="line">    mapState</span><br><span class="line">} from 'vuex'</span><br><span class="line">export default {</span><br><span class="line">    name: "HelloWorld",</span><br><span class="line">    data(){</span><br><span class="line">      return{</span><br><span class="line">        localMsg:'local'</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    computed: mapState({</span><br><span class="line">        msg: state =&gt; state.msg,</span><br><span class="line">        msgAlias: 'msg',</span><br><span class="line">        msgAddLocation(state) {</span><br><span class="line">          return state.msg+this.localMsg</span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">};</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>显示结果为：</p><p><img src="C:\Users\wan\AppData\Roaming\Typora\typora-user-images\image-20201105091214317.png" alt="image-20201105091214317"></p><p>当映射的计算属性名称和<code>state</code>的子节点名称相同，可以给<code>mapState</code>传一个字符串数组</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">computed: mapState([</span><br><span class="line">        <span class="string">'msg'</span></span><br><span class="line">    ])</span><br></pre></td></tr></tbody></table></figure><p>此时显示结果为：</p><p><img src="C:\Users\wan\AppData\Roaming\Typora\typora-user-images\image-20201105091719949.png" alt="image-20201105091719949"></p></li></ol><ol><li><p>对象展开运算符<code>...mapState</code></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">computed:{</span><br><span class="line">    ...mapState([<span class="string">'msg'</span>]),</span><br><span class="line">    ...mapState({</span><br><span class="line">        message:<span class="string">'msg'</span></span><br><span class="line">    })</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="Getter"><a href="#Getter" class="headerlink" title="Getter"></a>Getter</h3><p><code>getter</code>可以视为<code>store</code>的计算属性，其第一个参数为<code>state</code></p><p>修改<code>index.js</code>：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store({</span><br><span class="line">    state: {</span><br><span class="line">        msg: <span class="string">'this is vuex --- Vuex by mapState'</span>,</span><br><span class="line">        name: <span class="string">'wonderful '</span></span><br><span class="line">    },</span><br><span class="line">    getters: {</span><br><span class="line">        getMsg: <span class="function"><span class="params">state</span> =&gt;</span> state.msg,</span><br><span class="line">        getName: <span class="function">(<span class="params">state, getters</span>) =&gt;</span> state.name + getters.getMsg</span><br><span class="line">    },</span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>修改<code>HelloWorld.vue</code></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed: {</span><br><span class="line">    <span class="function"><span class="title">msg</span>(<span class="params"></span>)</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.$store.getters.getName</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>显示结果为：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201105093838536.png" alt="image-20201105093838536"></p><p><code>mapGetters</code>辅助函数</p><p>修改<code>HelloWorld.vue</code>：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class="hello"&gt;</span><br><span class="line">    &lt;h1&gt;{{ msg }}&lt;/h1&gt;</span><br><span class="line">    &lt;h1&gt;{{ name }}&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import {</span><br><span class="line">    mapGetters</span><br><span class="line">} from 'vuex'</span><br><span class="line">export default {</span><br><span class="line">    name: "HelloWorld",</span><br><span class="line">    computed: mapGetters({</span><br><span class="line">      msg: 'getMsg',</span><br><span class="line">      name: 'getName'</span><br><span class="line">    })</span><br><span class="line">};</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>使用对象展开运算符<code>...mapGetters</code>：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class="hello"&gt;</span><br><span class="line">    &lt;h1&gt;{{ getMsg }}&lt;/h1&gt;</span><br><span class="line">    &lt;h1&gt;{{ getName }}&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import {</span><br><span class="line">    mapGetters</span><br><span class="line">} from 'vuex'</span><br><span class="line">export default {</span><br><span class="line">    name: "HelloWorld",</span><br><span class="line">    computed: {</span><br><span class="line">        ...mapGetters(['getMsg', 'getName'])</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>上面两种写法的显示结果为：</p><p><img src="https://cdn.jsdelivr.net/gh/Wanfengyueluo/images/image-20201105095102215.png" alt="image-20201105095102215"></p><h3 id="Mutation"><a href="#Mutation" class="headerlink" title="Mutation"></a>Mutation</h3><p>更改<code>Vuex</code>的<code>store</code>中状态的唯一方法是提交<code>mutation</code></p><p>修改的<code>HelloWorld.vue</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class="hello"&gt;</span><br><span class="line">    &lt;h1 @mouseover="onmouseover"&gt;{{ count }}&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import {</span><br><span class="line">    mapGetters</span><br><span class="line">} from 'vuex'</span><br><span class="line">export default {</span><br><span class="line">    name: "HelloWorld",</span><br><span class="line">    computed: mapGetters({</span><br><span class="line">      msg: 'getMsg',</span><br><span class="line">      name: 'getName',</span><br><span class="line">      count: 'getCount'</span><br><span class="line">    }),</span><br><span class="line">    methods:{</span><br><span class="line">      onmouseover(){</span><br><span class="line">        this.$store.commit('increment')</span><br><span class="line">      },</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></tbody></table></figure><p>修改后的<code>index.js</code></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store({</span><br><span class="line">    state: {</span><br><span class="line">        msg: <span class="string">'this is vuex --- Vuex by mapState'</span>,</span><br><span class="line">        name: <span class="string">'wonderful '</span>,</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">    },</span><br><span class="line">    getters: {</span><br><span class="line">        getMsg: <span class="function"><span class="params">state</span> =&gt;</span> state.msg,</span><br><span class="line">        getName: <span class="function">(<span class="params">state, getters</span>) =&gt;</span> state.name + getters.getMsg,</span><br><span class="line">        getCount: <span class="function"><span class="params">state</span> =&gt;</span> state.count</span><br><span class="line">    },</span><br><span class="line">    mutations: {</span><br><span class="line">        <span class="function"><span class="title">increment</span>(<span class="params">state</span>)</span> {</span><br><span class="line">            state.count++</span><br><span class="line">        }</span><br><span class="line">    },</span><br><span class="line">    actions: {},</span><br><span class="line">    modules: {}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>此时鼠标在数字上移动时，数字会递增。</p><p>在提交<code>commit</code>时也可以传入额外的参数，即<code>mutation</code>的载荷(<code>payload</code>)</p><p>对上述例子进行少许改动：</p><p><code>HelloWorld.vue</code>：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">methods:{</span><br><span class="line">    <span class="function"><span class="title">onmouseover</span>(<span class="params"></span>)</span>{</span><br><span class="line">        <span class="built_in">this</span>.$store.commit(<span class="string">'increment'</span>,<span class="number">10</span>)</span><br><span class="line">    },</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>index.js</code>：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mutations: {</span><br><span class="line">    <span class="function"><span class="title">increment</span>(<span class="params">state, payload</span>)</span> {</span><br><span class="line">        state.count += payload</span><br><span class="line">    }</span><br><span class="line">},</span><br></pre></td></tr></tbody></table></figure><p>对于<code>payload</code>，也可以使用对象风格：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class="hello"&gt;</span><br><span class="line">    &lt;h1 @mouseover="onmouseover"&gt;{{ count+' '+name }}&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import {</span><br><span class="line">    mapGetters</span><br><span class="line">} from 'vuex'</span><br><span class="line">export default {</span><br><span class="line">    name: "HelloWorld",</span><br><span class="line">    computed: mapGetters({</span><br><span class="line">        msg: 'getMsg',</span><br><span class="line">        name: 'getName',</span><br><span class="line">        count: 'getCount'</span><br><span class="line">    }),</span><br><span class="line">    methods: {</span><br><span class="line">        onmouseover() {</span><br><span class="line">            this.$store.commit('increment', {</span><br><span class="line">                count: 10,</span><br><span class="line">                msg: 'new',</span><br><span class="line">                name: 'thanks'</span><br><span class="line">            })</span><br><span class="line">        },</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><code>index.js</code>：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store({</span><br><span class="line">    state: {</span><br><span class="line">        msg: <span class="string">'msg'</span>,</span><br><span class="line">        name: <span class="string">'name '</span>,</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">    },</span><br><span class="line">    getters: {</span><br><span class="line">        getMsg: <span class="function"><span class="params">state</span> =&gt;</span> state.msg,</span><br><span class="line">        getName: <span class="function">(<span class="params">state, getters</span>) =&gt;</span> state.name + getters.getMsg,</span><br><span class="line">        getCount: <span class="function"><span class="params">state</span> =&gt;</span> state.count</span><br><span class="line">    },</span><br><span class="line">    mutations: {</span><br><span class="line">        <span class="function"><span class="title">increment</span>(<span class="params">state, payload</span>)</span> {</span><br><span class="line">            state.count += payload.count</span><br><span class="line">            state.msg += payload.msg</span><br><span class="line">            state.name += payload.name</span><br><span class="line">        }</span><br><span class="line">    },</span><br><span class="line">    actions: {},</span><br><span class="line">    modules: {}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p><code>mapMutations</code>辅助函数</p><p>修改<code>HelloWorld.vue</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class="hello"&gt;</span><br><span class="line">    &lt;h1 @mouseover="onmouseover"&gt;{{ count }}&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import {</span><br><span class="line">    mapGetters,</span><br><span class="line">    mapMutations</span><br><span class="line">} from 'vuex'</span><br><span class="line">export default {</span><br><span class="line">    name: "HelloWorld",</span><br><span class="line">    computed: mapGetters({</span><br><span class="line">        msg: 'getMsg',</span><br><span class="line">        name: 'getName',</span><br><span class="line">        count: 'getCount'</span><br><span class="line">    }),</span><br><span class="line">    methods: {</span><br><span class="line">        onmouseover() {</span><br><span class="line">            this.add({</span><br><span class="line">                count: 10</span><br><span class="line">            })</span><br><span class="line">        },</span><br><span class="line">        ...mapMutations(['increment']),</span><br><span class="line">        ...mapMutations({</span><br><span class="line">          add:'increment'//将increment映射为add</span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>在 <code>Vuex</code> 中，<strong><code>mutation</code>都是同步事务</strong>,<code>store.commit('increment')</code>中，任何由<code>increment</code>导致的状态变更都应该在此刻完成。</p></blockquote><h3 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h3><p><code>Action</code>类似于<code>mutation</code>，不同在于：</p><ul><li><code>Action</code>提交的是<code>mutation</code>，而不是直接变更状态</li><li><code>Action</code>可以包含任意<strong>异步</strong>操作</li></ul><p>注册一个<code>Action</code>：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">actions: {</span><br><span class="line">    <span class="function"><span class="title">increment</span>(<span class="params">context</span>)</span> {</span><br><span class="line">        context.commit(<span class="string">'increment'</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>上述写法等同于以下写法(<strong>ES2015 的 <a href="https://github.com/lukehoban/es6features#destructuring">参数解构</a></strong>)：<br></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">actions: {</span><br><span class="line">    <span class="function"><span class="title">increment</span>(<span class="params">{commit}</span>)</span> {</span><br><span class="line">        commit(<span class="string">'increment'</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p><p><code>Action</code>函数接受一个与<code>store</code>实例具有相同方法和属性的<code>context</code>对象，因此可以调用<code>context.commit</code>提交<code>mutation</code>，或者通过<code>context.state</code>和<code>context.getters</code>来获取<code>state</code>和<code>getters</code></p><blockquote><p><code>context</code>对象并不是<code>store</code>实例本身</p></blockquote><p><code>Action</code>通过<code>store.dispatch</code>方法触发：</p><p><code>store.dispatch('increment')</code></p><p>修改<code>HelloWorld.vue</code>中的<code>mouseover</code>函数：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onmouseover</span>(<span class="params"></span>)</span> {</span><br><span class="line"><span class="built_in">this</span>.$store.dispatch(<span class="string">'increment'</span>)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>不同于<code>mutation</code>，我们可以在<code>Action</code>中执行异步操作：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">increment</span>(<span class="params">context</span>)</span> {</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> {</span><br><span class="line">        context.commit(<span class="string">'increment'</span>)</span><br><span class="line">    }, <span class="number">1000</span>)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>Actions</code>支持同样的载荷方式和对象方式进行分发：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以载荷形式分发</span></span><br><span class="line">store.dispatch(<span class="string">'increment'</span>, {</span><br><span class="line">  amount: <span class="number">10</span></span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以对象形式分发</span></span><br><span class="line">store.dispatch({</span><br><span class="line">  type: <span class="string">'increment'</span>,</span><br><span class="line">  amount: <span class="number">10</span></span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p><code>mapActions</code>辅助函数</p><p>修改<code>HelloWorld.vue</code></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> {</span><br><span class="line">    mapGetters,</span><br><span class="line">    mapMutations,</span><br><span class="line">    mapActions</span><br><span class="line">} <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> {</span><br><span class="line">    name: <span class="string">"HelloWorld"</span>,</span><br><span class="line">    computed: mapGetters({</span><br><span class="line">        msg: <span class="string">'getMsg'</span>,</span><br><span class="line">        name: <span class="string">'getName'</span>,</span><br><span class="line">        count: <span class="string">'getCount'</span></span><br><span class="line">    }),</span><br><span class="line">    methods: {</span><br><span class="line">        <span class="function"><span class="title">onmouseover</span>(<span class="params"></span>)</span> {</span><br><span class="line">            <span class="built_in">this</span>.increment()</span><br><span class="line">            <span class="comment">//this.add()</span></span><br><span class="line">        },</span><br><span class="line">        ...mapActions([<span class="string">'increment'</span>]),</span><br><span class="line">        ...mapActions({</span><br><span class="line">          add: <span class="string">'increment'</span></span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p><code>Action</code>组合</p><h3 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h3>]]></content>
    
    
    <summary type="html">Vuex笔记</summary>
    
    
    
    <category term="Vue" scheme="https://wanfengyueluo.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://wanfengyueluo.github.io/tags/Vue/"/>
    
    <category term="Vuex" scheme="https://wanfengyueluo.github.io/tags/Vuex/"/>
    
  </entry>
  
  <entry>
    <title>Java异常处理</title>
    <link href="https://wanfengyueluo.github.io/2020/08/19/java-yi-chang-chu-li/"/>
    <id>https://wanfengyueluo.github.io/2020/08/19/java-yi-chang-chu-li/</id>
    <published>2020-08-19T12:25:34.000Z</published>
    <updated>2021-06-03T13:31:51.760Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java异常处理手段"><a href="#Java异常处理手段" class="headerlink" title="Java异常处理手段"></a>Java异常处理手段</h2><h3 id="try-catch"><a href="#try-catch" class="headerlink" title="try catch"></a>try catch</h3><h4 id="一般方法"><a href="#一般方法" class="headerlink" title="一般方法"></a>一般方法</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestException</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"></span><br><span class="line">File f= <span class="keyword">new</span> File(<span class="string">"d:/test.exe"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>{</span><br><span class="line">System.out.println(<span class="string">"试图打开 d:/test.exe"</span>);</span><br><span class="line"><span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">System.out.println(<span class="string">"成功打开"</span>);</span><br><span class="line">}<span class="keyword">catch</span>(FileNotFoundException e){</span><br><span class="line">System.out.println(<span class="string">"d:/test.exe不存在"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="使用异常的父类catch"><a href="#使用异常的父类catch" class="headerlink" title="使用异常的父类catch"></a>使用异常的父类catch</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exception;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestException</span> </span>{</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">         </span><br><span class="line">        File f= <span class="keyword">new</span> File(<span class="string">"d:/test.exe"</span>);</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">try</span>{</span><br><span class="line">            System.out.println(<span class="string">"试图打开 d:/test.exe"</span>);</span><br><span class="line">            <span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">            System.out.println(<span class="string">"成功打开"</span>);</span><br><span class="line">        }<span class="keyword">catch</span>(Exception e){</span><br><span class="line">            System.out.println(<span class="string">"d:/test.exe不存在"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }   </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="多异常捕捉"><a href="#多异常捕捉" class="headerlink" title="多异常捕捉"></a>多异常捕捉</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exception;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestException</span> </span>{</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"> </span><br><span class="line">        File f = <span class="keyword">new</span> File(<span class="string">"d:/test.exe"</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            System.out.println(<span class="string">"试图打开 d:/test.exe"</span>);</span><br><span class="line">            <span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">            System.out.println(<span class="string">"成功打开"</span>);</span><br><span class="line">            SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">            Date d = sdf.parse(<span class="string">"2016-06-03"</span>);</span><br><span class="line">        } <span class="keyword">catch</span> (FileNotFoundException e) {</span><br><span class="line">            System.out.println(<span class="string">"d:/test.exe不存在"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        } <span class="keyword">catch</span> (ParseException e) {</span><br><span class="line">            System.out.println(<span class="string">"日期格式解析错误"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="多异常捕捉2"><a href="#多异常捕捉2" class="headerlink" title="多异常捕捉2"></a>多异常捕捉2</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exception;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestException</span> </span>{</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"> </span><br><span class="line">        File f = <span class="keyword">new</span> File(<span class="string">"d:/test.exe"</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            System.out.println(<span class="string">"试图打开 d:/test.exe"</span>);</span><br><span class="line">            <span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">            System.out.println(<span class="string">"成功打开"</span>);</span><br><span class="line">            SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">            Date d = sdf.parse(<span class="string">"2016-06-03"</span>);</span><br><span class="line">        } <span class="keyword">catch</span> (FileNotFoundException | ParseException e) {</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> FileNotFoundException)</span><br><span class="line">                System.out.println(<span class="string">"d:/test.exe不存在"</span>);</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> ParseException)</span><br><span class="line">                System.out.println(<span class="string">"日期格式解析错误"</span>);</span><br><span class="line"> </span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="finally"><a href="#finally" class="headerlink" title="finally"></a>finally</h3><p>无论是否出现异常，finally中的代码一定会被执行</p><h3 id="throw和throws"><a href="#throw和throws" class="headerlink" title="throw和throws"></a>throw和throws</h3><blockquote><p>throw抛出的异常如果不处理，会传递到父方法</p></blockquote><ol><li>throws 出现在方法声明上，而throw通常都出现在方法体内。</li><li>throws 表示出现异常的一种可能性，并不一定会发生这些异常；throw则是抛出了异常，执行throw则一定抛出了某个异常对象。</li></ol><h2 id="Java异常分类"><a href="#Java异常分类" class="headerlink" title="Java异常分类"></a>Java异常分类</h2><h3 id="可查异常CheckedException"><a href="#可查异常CheckedException" class="headerlink" title="可查异常CheckedException"></a>可查异常CheckedException</h3><p>可查异常是必须进行处理的异常，要么进行try-catch，要么抛出。如果不处理，编译器不会通过。</p><h3 id="运行时异常RuntimeException"><a href="#运行时异常RuntimeException" class="headerlink" title="运行时异常RuntimeException"></a>运行时异常RuntimeException</h3><p>常见的运行时异常有：</p><ul><li>ArithmeticException</li><li>ArrayIndexOutOfBoundsException</li><li>NullPointerException</li></ul><h3 id="错误Error"><a href="#错误Error" class="headerlink" title="错误Error"></a>错误Error</h3><p>错误是指系统级别的异常，例如OutOfMemoryError</p>]]></content>
    
    
    <summary type="html">Java基础笔记，从零开始摸爬滚打~</summary>
    
    
    
    <category term="Java" scheme="https://wanfengyueluo.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://wanfengyueluo.github.io/tags/Java/"/>
    
    <category term="Java异常" scheme="https://wanfengyueluo.github.io/tags/Java%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Java核心技术卷一</title>
    <link href="https://wanfengyueluo.github.io/2020/08/19/java-he-xin-ji-zhu-juan-yi/"/>
    <id>https://wanfengyueluo.github.io/2020/08/19/java-he-xin-ji-zhu-juan-yi/</id>
    <published>2020-08-19T12:22:53.000Z</published>
    <updated>2021-06-03T13:31:51.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Day01"><a href="#Day01" class="headerlink" title="Day01"></a>Day01</h1><ul><li>[x] P164</li></ul><h3 id="安装库源文件和文档"><a href="#安装库源文件和文档" class="headerlink" title="安装库源文件和文档"></a>安装库源文件和文档</h3><p>库源文件在jdk/src.zip中</p><p>使用<code>jar xvf  jdk/src.zip</code>解压</p><p>更多源代码访问<a href="http://jdk8.java.net">网站</a></p><p>文档独立于JDK，需要单独下载</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a += b += c <span class="comment">//等价于a += (b += c)  右结合运算符</span></span><br></pre></td></tr></tbody></table></figure><p>不要使用<code>==</code>来检测两个字符串是否相等，该运算符只能确定两个字符串是否放置在同一位置上</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String s1 = "Hello";</span><br><span class="line">if(s1=="Hello")...//可能为true</span><br><span class="line">if(s1.substring(0,3)=="Hel")...//可能为false</span><br></pre></td></tr></tbody></table></figure><h4 id="多态与动态绑定"><a href="#多态与动态绑定" class="headerlink" title="多态与动态绑定"></a>多态与动态绑定</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Manager是Employee的子类</span></span><br><span class="line">Manager boss = <span class="keyword">new</span> Manager();</span><br><span class="line">Employee employee = <span class="keyword">new</span> Employee();</span><br><span class="line">Employee[] staff = <span class="keyword">new</span> Employee[<span class="number">2</span>];</span><br><span class="line">staff[<span class="number">0</span>] = boss;</span><br><span class="line">staff[<span class="number">1</span>] = employee;</span><br><span class="line"><span class="keyword">for</span>(Employee e:staff){</span><br><span class="line">    System.out.plintln(e.getSalaty())</span><br><span class="line">}</span><br><span class="line"><span class="comment">//当e引用Employee对象是，调用Employee类中的getSalary()</span></span><br><span class="line"><span class="comment">//当e引用Manager对象是，调用Manager类中的getSalary()</span></span><br><span class="line"><span class="comment">//一个对象变量(如：e)可以指示多种实际类型的现象叫多态(polymorphism)</span></span><br><span class="line"><span class="comment">//在运行时能够自动选择调用哪个方法的现象叫做动态绑定(dynamic binding)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对象的类型转换</span></span><br><span class="line">Manager boss = (Manager)staff[<span class="number">0</span>];  <span class="comment">//</span></span><br><span class="line">Manager boss = (Manager)staff[<span class="number">1</span>];  <span class="comment">//由上向下的转换 error</span></span><br><span class="line"><span class="comment">//可以在转换之前进行判断</span></span><br><span class="line"><span class="keyword">if</span>(staff[<span class="number">1</span>] <span class="keyword">instanceof</span> Manager){</span><br><span class="line">    boss = (Manager)staff[<span class="number">1</span>];</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h5 id="一般情况下，应该尽量少用类型转换和instanceof"><a href="#一般情况下，应该尽量少用类型转换和instanceof" class="headerlink" title="一般情况下，应该尽量少用类型转换和instanceof"></a>一般情况下，应该尽量少用类型转换和instanceof</h5><h3 id="hashCode"><a href="#hashCode" class="headerlink" title="hashCode"></a>hashCode</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hashCode方法定义在Object类中，因此每个对象都有一个默认的散列码，其值为对象的存储地址</span></span><br><span class="line">String s = <span class="string">"OK"</span>;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder(s);</span><br><span class="line">System.out.println(s.hasCode()+<span class="string">" "</span>+sb.hashCode());</span><br><span class="line">String t = <span class="keyword">new</span> String(<span class="string">"OK"</span>);</span><br><span class="line">StringBuilder tb = <span class="keyword">new</span> StringBuilder(t);</span><br><span class="line">System.out.println(t.hasCode()+<span class="string">" "</span>+tb.hashCode());</span><br><span class="line"><span class="comment">//结果:   对象     散列码</span></span><br><span class="line"><span class="comment">//  s       2556</span></span><br><span class="line"><span class="comment">//        sb      20526976</span></span><br><span class="line"><span class="comment">//        t       2556</span></span><br><span class="line"><span class="comment">//        tb      20527144</span></span><br><span class="line"><span class="comment">//s和t的散列码相同，因为字符串的散列码是由内容导出的</span></span><br><span class="line"><span class="comment">//sb和tb散列码不同，因为StringBuilder没有定义hashCode方法，其散列码由Object类默认的hashCode方法导出的对象存储地址</span></span><br></pre></td></tr></tbody></table></figure><h5 id="建议自定义类中添加toString方法"><a href="#建议自定义类中添加toString方法" class="headerlink" title="建议自定义类中添加toString方法"></a>建议自定义类中添加toString方法</h5><h3 id="自动装箱与自动拆箱"><a href="#自动装箱与自动拆箱" class="headerlink" title="自动装箱与自动拆箱"></a>自动装箱与自动拆箱</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动装箱</span></span><br><span class="line">ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="number">3</span>);<span class="comment">//将会自动变成</span></span><br><span class="line">list.add(Integer.valueOf(<span class="number">3</span>));</span><br><span class="line"><span class="comment">//自动拆箱</span></span><br><span class="line"><span class="keyword">int</span> n = list.get(i);<span class="comment">//将会自动变成</span></span><br><span class="line"><span class="keyword">int</span> n = list.get(i).intValue();</span><br></pre></td></tr></tbody></table></figure><ul><li><h5 id="自动装箱规范要求boolean-byte-char-lt-127-介于-128-127之间的short和int被包装到固定的对象中。"><a href="#自动装箱规范要求boolean-byte-char-lt-127-介于-128-127之间的short和int被包装到固定的对象中。" class="headerlink" title="自动装箱规范要求boolean,byte,char<=127,介于 -128~127之间的short和int被包装到固定的对象中。"></a>自动装箱规范要求boolean,byte,char&lt;=127,介于 -128~127之间的short和int被包装到固定的对象中。</h5></li><li><h5 id="如果在一个表达式中混合使用Integer和Double类型，Integer就会自动拆箱，提升为double，再装箱为Double"><a href="#如果在一个表达式中混合使用Integer和Double类型，Integer就会自动拆箱，提升为double，再装箱为Double" class="headerlink" title="如果在一个表达式中混合使用Integer和Double类型，Integer就会自动拆箱，提升为double，再装箱为Double"></a>如果在一个表达式中混合使用Integer和Double类型，Integer就会自动拆箱，提升为double，再装箱为Double</h5></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>{</span><br><span class="line">    ...</span><br><span class="line">}<span class="keyword">catch</span>(Exception e){</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>[x] P239</li></ul><h1 id="Day02"><a href="#Day02" class="headerlink" title="Day02"></a>Day02</h1><h3 id="浅拷贝与深拷贝"><a href="#浅拷贝与深拷贝" class="headerlink" title="浅拷贝与深拷贝"></a>浅拷贝与深拷贝</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据对象属性的拷贝程度（基本数据类型和引用类型）分为浅拷贝和深拷贝</span></span><br><span class="line"><span class="comment">//浅拷贝：创建一个新对象，拥有原始对象属性值的精确拷贝。若属性是基本数据类型，拷贝的就是属性的值；</span></span><br><span class="line"><span class="comment">//如果属性是引用类型，拷贝的就是内存地址</span></span><br><span class="line"><span class="comment">//因此当一个对象改变了这个地址就会影响到另外的对象</span></span><br><span class="line"><span class="comment">//即默认拷贝构造函数只是对对象进行浅拷贝复制（逐个成员一次拷贝），即只复制对象空间而不复制资源</span></span><br><span class="line"><span class="comment">//实现浅拷贝的类需要实现Cloneable接口，覆盖clone方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//深拷贝：在拷贝引用类型属性时，为其另辟独立的内存空间，实现真正内容上的拷贝</span></span><br><span class="line"><span class="comment">//逐层实现Cloneable接口</span></span><br></pre></td></tr></tbody></table></figure><ul><li>[x] 258</li></ul><h3 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h3><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有的异常都是由Throwable继承而来，在下一层分解为Error和Exception两个分支</span></span><br><span class="line"><span class="comment">//Error类描述Java运行时系统的内部错误和资源耗尽错误</span></span><br><span class="line"><span class="comment">//Exception又分解为两个分支</span></span><br><span class="line"><span class="comment">//一个分支派生于RuntimeException，另一个分支包含其他异常</span></span><br><span class="line"><span class="comment">//由程序错误导致的异常属于RuntimeException</span></span><br><span class="line"><span class="comment">//程序本身没有问题，但由于像I/O错误这类问题导致的异常属于其他异常</span></span><br></pre></td></tr></tbody></table></figure><h5 id="派生于RuntimeException的异常包含以下情况："><a href="#派生于RuntimeException的异常包含以下情况：" class="headerlink" title="派生于RuntimeException的异常包含以下情况："></a>派生于RuntimeException的异常包含以下情况：</h5><ul><li>错误的类型转换</li><li>数组访问越界</li><li>访问null指针</li></ul><h5 id="不是派生于RuntimeException的异常："><a href="#不是派生于RuntimeException的异常：" class="headerlink" title="不是派生于RuntimeException的异常："></a>不是派生于RuntimeException的异常：</h5><ul><li>试图在文件尾部后面读取数据</li><li>试图打开一个不存在的文件</li><li>试图根据给定的字符串查找Class对象，但这个字符串表示的类并不存在</li></ul><h5 id="规则：如果出现RuntimeException异常，那么就一定是你的问题"><a href="#规则：如果出现RuntimeException异常，那么就一定是你的问题" class="headerlink" title="规则：如果出现RuntimeException异常，那么就一定是你的问题"></a>规则：如果出现RuntimeException异常，那么就一定是你的问题</h5><ul><li>数组下标越界异常：ArrayIndexOutOfBoundsException</li><li>null指针异常：NullPointerException</li></ul><h5 id="Java语言规范将派生于Error类或者RuntimeException类的所有异常称为非受查异常-unchecked-其他异常称为受查异常-checked"><a href="#Java语言规范将派生于Error类或者RuntimeException类的所有异常称为非受查异常-unchecked-其他异常称为受查异常-checked" class="headerlink" title="Java语言规范将派生于Error类或者RuntimeException类的所有异常称为非受查异常(unchecked),其他异常称为受查异常(checked)"></a>Java语言规范将派生于Error类或者RuntimeException类的所有异常称为<em>非受查异常</em>(unchecked),其他异常称为受查异常(checked)</h5><p>运行时异常,不可查，不需要显示捕捉</p><p>可查异常，必须显示捕捉或者抛出</p><h4 id="断言和日志"><a href="#断言和日志" class="headerlink" title="断言和日志"></a>断言和日志</h4><h3 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h3><h1 id="Java核心技术与面试指南"><a href="#Java核心技术与面试指南" class="headerlink" title="Java核心技术与面试指南"></a>Java核心技术与面试指南</h1><ul><li>[ ] P96</li><li>[ ] P87</li><li>[ ] P107</li></ul><p>定义基本数据类型的变量，对象的引用，还有函数调用的现场保存都使用<code>JVM</code>栈空间</p><p>通过<code>new</code>和构造器创建的对象放在堆空间，堆事垃圾收集器管理的主要区域</p><p>栈用光StackOverflowError</p><p>堆和常量池不足OutOfMemoryError</p><ul><li>两个对象相同(equals返回true)，则对象的hashCode值一定相同</li><li>当两个对象的hashCode相同，它们并不一定相同</li><li>equals：<ul><li>自反性(x.equals(x)==true)</li><li>对称性(x.equals(y)==true)(y.equals(x)==true)</li><li>传递性(x.equals(y)==true)(y.equals(z)==true)(x.equals(z)==true)</li><li>一致性(x,y引用的对象信息没有改变时，x.equals(y)返回值不变)</li></ul></li></ul><p>sleep()进入阻塞态 对应TIMED_WAITING</p><p>yield()进入就绪态 </p><p>join() 对应WAITING</p><h5 id="两阶段终止模式"><a href="#两阶段终止模式" class="headerlink" title="两阶段终止模式"></a>两阶段终止模式</h5><p>InterruptException会重置isInterrupted为false</p><p>isInterrupted不会清除打断标记</p><p>Interrupted会清除打断标记</p><h5 id="Transient-阻止用此关键字修饰的变量序列化，当对象反序列化时该变量不会被持久化和恢复，只能修饰变量"><a href="#Transient-阻止用此关键字修饰的变量序列化，当对象反序列化时该变量不会被持久化和恢复，只能修饰变量" class="headerlink" title="Transient:阻止用此关键字修饰的变量序列化，当对象反序列化时该变量不会被持久化和恢复，只能修饰变量"></a>Transient:阻止用此关键字修饰的变量序列化，当对象反序列化时该变量不会被持久化和恢复，只能修饰变量</h5><h5 id="IO流"><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h5><ul><li>按流向分：输入流和输出流</li><li>按操作单元分：字节流和字符流</li><li><p>按流的角色分：节点流和处理流</p></li><li><p>InputStream/Reader:所有输入流的基类，前者字节输入流，后者字符输入流</p></li><li><p>OutputStream/Writer：所有输出流的基类，前者字节输出流，后者字符输出流</p></li><li><p>Reader-字符读取</p><ul><li>节点流<ul><li>FileReader(文件操作)</li><li>PipedReader(管道操作)</li><li>CharArrayReader(数组操作)</li></ul></li><li>处理流<ul><li>BufferedReader(缓冲操作)</li><li>InputStreamReader(转化控制)</li></ul></li></ul></li><li>Writer-字符写出<ul><li>节点流<ul><li>FileWriter</li><li>PipedWriter</li><li>CharArrayWriter</li></ul></li><li>处理流<ul><li>BufferedWriter</li><li>OutputStreamWriter</li><li>PrintWriter(打印控制)</li></ul></li></ul></li><li>InputStream-字节读取<ul><li>节点流<ul><li>FileInputStream</li><li>PipedInputStream</li><li>ByteArrayInputStream</li></ul></li><li>处理流<ul><li>BufferedInputStream</li><li>DataInputStream(基本数据类型操作)</li><li>ObjectInputStream(对象序列化操作)</li><li>SequenceInputStream</li></ul></li></ul></li><li><p>OutputStream-字节读出</p><ul><li>节点流<ul><li>FileOutputStream</li><li>PipedOutputStream</li><li>ByteArrayOutputStream</li></ul></li><li>处理流<ul><li>BufferedOutputStream</li><li>DataOutputStream</li><li>ObjectOutputStream</li><li>PrintStream</li></ul></li></ul></li><li><p>BIO：同步阻塞I/O</p></li><li>NIO：同步非阻塞I/O</li><li>AIO：异步非阻塞I/O（NIO2）</li></ul><p>synchronized</p><p>语法</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(对象){</span><br><span class="line">    临界区</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">        count++;</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">increment</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>){</span><br><span class="line">            count++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//锁方法相当于锁this对象</span></span><br><span class="line"><span class="comment">//-----------------------------------------------</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">        </span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//等价于</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">synchronized</span> (Test.class){</span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//锁静态方法相当于锁类对象</span></span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure><p>private与final提供安全的意义所在，开闭原则中的闭</p><p>常见的线程安全类</p><ul><li>String</li><li>Integer等包装类</li><li>StringBuffer</li><li>Random</li><li>Vector</li><li>HashTable</li><li>java.util.concurrent包下的类</li></ul><p>这里线程安全是指，多个线程调用同一个实例的某个方法时，是线程安全的，即</p><ul><li>它们的每个方法是原子的</li><li>但它们多个方法的组合不是原子的</li></ul><p><strong>==与equals()</strong>:</p><p><strong>compareTo()</strong>:</p><h2 id="关于JVM、JDK、JRE"><a href="#关于JVM、JDK、JRE" class="headerlink" title="关于JVM、JDK、JRE"></a>关于JVM、JDK、JRE</h2><p>Java虚拟机(JVM)是运行Java字节码的虚拟机，JVM针对不同系统有不同的实现。</p><p>Java程序从源代码到运行一般有三步：</p><p><code>*.java文件</code>—&gt;<code>*.class文件</code>—&gt;机器可执行的二进制代码</p><p>JDK(Java Develpoment Kit)，是功能齐全的Java SDK，拥有JRE的一切并且还有编译器(javac)和工具(如javadoc和jdb)，能够创建和编译程序。</p><p>JRE是Java运行时环境，是运行已编译Java程序所需所有内容的集合，包括JVM，Java类库，Java命令和其他的基础构件，不能创建新程序。</p><h2 id="关于重写-override-与重载-overload"><a href="#关于重写-override-与重载-overload" class="headerlink" title="关于重写(override)与重载(overload)"></a>关于重写(override)与重载(overload)</h2><p><strong>重载</strong></p><p>完整描述一个方法，需要指出方法名和参数类型，这就是方法的签名。当多个方法有相同名字、不同参数就会产生重载。返回类型不是方法签名的一部分。</p><p><strong>重写</strong></p><p>子类对父类的允许访问的方法的实现进行重新编写，方法名、参数列表必须相同，返回值范围小于等于父类，抛出的异常范围小于等于父类，访问修饰符范围大于等于父类。</p><h2 id="关于封装、继承、多态"><a href="#关于封装、继承、多态" class="headerlink" title="关于封装、继承、多态"></a>关于封装、继承、多态</h2><p><strong>封装</strong></p><p>封装是把一个对象的属性私有化，并提供一些可以被外部访问的属性的方法。</p><p><strong>继承</strong></p><p>继承是使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或功能，也可以使用父类的功能。</p><blockquote><p>需要注意的三点：</p><ol><li>子类拥有父类对象所有的属性和方法(包括私有属性和私有方法)，但父类中的私有属性和方法子类无法访问，只是拥有。</li><li>子类可以对父类进行扩展。</li><li>子类可以用自己的方式实现父类的方法。</li></ol></blockquote><p><strong>多态</strong></p><p>多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，即一个引用变量到底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在程序运行期间才能决定。</p><p>在Java中有两种方式实现多态：继承（多个子类对同一方法的重写）和接口（实现接口并覆盖接口中同一方法）。</p><p><strong>继承与实现</strong></p><p><strong>继承与组合</strong></p><p><strong>Java只有值传递</strong></p><p><strong>成员变量和方法作用域</strong></p><ul><li>default：表明该成员变量或者方法只有自己和其位于同一个包的内可见,其他包内的类不能访问,即便是它的子类。</li><li>public：表明该成员变量或者方法是对所有类或者对象都是可见的,所有类或者对象都可以直接访问。</li><li>protected：表明成员变量或者方法对类自身,与同在一个包中的其他类可见,其他包下的类不可访问,除非是他的子类。</li><li>private：表明该成员变量或者方法是私有的,只有当前类对其具有访问权限,除此之外其他类或者对象都没有访问权限.子类也没有访问权限。</li></ul><h2 id="关于接口和抽象类"><a href="#关于接口和抽象类" class="headerlink" title="关于接口和抽象类"></a>关于接口和抽象类</h2><ul><li><p>在Java中，接口不是类，而是对类的一组需求描述，并且不能通过new实例化一个接口，但是可以声明接口的变量，接口变量必须引用实现了接口的类对象。</p></li><li><p>接口中方法默认标记为<code>public</code>，域标记为<code>public static final</code></p></li><li><p>每个类只能继承一个抽象类，但是可以实现多个接口</p></li></ul><h2 id="关于-与equals"><a href="#关于-与equals" class="headerlink" title="关于==与equals"></a>关于==与equals</h2><p>==：作用是判断两个对象的地址是否相等。若对象是基本数据类型时比较对象的值，若对象是引用数据类型则比较内存地址。</p><p>equals：作用是判断两个对象是否相等，若类没有覆盖equals方法，此时equals相当于==；若类覆盖了equals方法，则通过equals来比较对象的内容是否相等。</p><h2 id="关于hashCode与equals"><a href="#关于hashCode与equals" class="headerlink" title="关于hashCode与equals"></a>关于hashCode与equals</h2><p>只有在HashMap、HashSet、HashTable等本质是散列表的数据结构中使用对象时，hashCode和equals才有关系，此时需要重写hashCode和equals。</p><blockquote><p>对象相同，hashCode一定相同</p><p>hashCode相同，对象不一定相同</p></blockquote>]]></content>
    
    
    <summary type="html">Java核心技术卷一笔记，从零开始摸爬滚打~</summary>
    
    
    
    <category term="Java" scheme="https://wanfengyueluo.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://wanfengyueluo.github.io/tags/Java/"/>
    
    <category term="Java核心技术卷" scheme="https://wanfengyueluo.github.io/tags/Java%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E5%8D%B7/"/>
    
  </entry>
  
</feed>
